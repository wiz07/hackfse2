webpackJsonp([23],{0:function(e,n,t){t(1228),t(1231),t(1233),t(1235),t(1237),t(1239),t(1241),t(1243),t(1245),window.$j=jQuery.noConflict(),jQuery(function(){jQuery(".open-modal").modal()}),window.sonarqube={},window.sonarqube.el="#content"},1228:function(e,n,t){t(1229)(t(1230))},1229:function(e,n){e.exports=function(e){"function"==typeof execScript?execScript(e):eval.call(null,e)}},1230:function(e,n){e.exports='/*\n * SonarQube\n * Copyright (C) 2009-2016 SonarSource SA\n * mailto:contact AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/*! jQuery UI - v1.10.4 - 2014-03-31\n* http://jqueryui.com\n* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.position.js, jquery.ui.draggable.js, jquery.ui.resizable.js, jquery.ui.button.js, jquery.ui.datepicker.js, jquery.ui.dialog.js, jquery.ui.tabs.js\n* Copyright 2014 jQuery Foundation and other contributors; Licensed MIT */\n\n(function( $, undefined ) {\n\nvar uuid = 0,\n	runiqueId = /^ui-id-\\d+$/;\n\n// $.ui might exist from components with no dependencies, e.g., $.ui.position\n$.ui = $.ui || {};\n\n$.extend( $.ui, {\n	version: "1.10.4",\n\n	keyCode: {\n		BACKSPACE: 8,\n		COMMA: 188,\n		DELETE: 46,\n		DOWN: 40,\n		END: 35,\n		ENTER: 13,\n		ESCAPE: 27,\n		HOME: 36,\n		LEFT: 37,\n		NUMPAD_ADD: 107,\n		NUMPAD_DECIMAL: 110,\n		NUMPAD_DIVIDE: 111,\n		NUMPAD_ENTER: 108,\n		NUMPAD_MULTIPLY: 106,\n		NUMPAD_SUBTRACT: 109,\n		PAGE_DOWN: 34,\n		PAGE_UP: 33,\n		PERIOD: 190,\n		RIGHT: 39,\n		SPACE: 32,\n		TAB: 9,\n		UP: 38\n	}\n});\n\n// plugins\n$.fn.extend({\n	focus: (function( orig ) {\n		return function( delay, fn ) {\n			return typeof delay === "number" ?\n				this.each(function() {\n					var elem = this;\n					setTimeout(function() {\n						$( elem ).focus();\n						if ( fn ) {\n							fn.call( elem );\n						}\n					}, delay );\n				}) :\n				orig.apply( this, arguments );\n		};\n	})( $.fn.focus ),\n\n	scrollParent: function() {\n		var scrollParent;\n		if (($.ui.ie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) {\n			scrollParent = this.parents().filter(function() {\n				return (/(relative|absolute|fixed)/).test($.css(this,"position")) && (/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"));\n			}).eq(0);\n		} else {\n			scrollParent = this.parents().filter(function() {\n				return (/(auto|scroll)/).test($.css(this,"overflow")+$.css(this,"overflow-y")+$.css(this,"overflow-x"));\n			}).eq(0);\n		}\n\n		return (/fixed/).test(this.css("position")) || !scrollParent.length ? $(document) : scrollParent;\n	},\n\n	zIndex: function( zIndex ) {\n		if ( zIndex !== undefined ) {\n			return this.css( "zIndex", zIndex );\n		}\n\n		if ( this.length ) {\n			var elem = $( this[ 0 ] ), position, value;\n			while ( elem.length && elem[ 0 ] !== document ) {\n				// Ignore z-index if position is set to a value where z-index is ignored by the browser\n				// This makes behavior of this function consistent across browsers\n				// WebKit always returns auto if the element is positioned\n				position = elem.css( "position" );\n				if ( position === "absolute" || position === "relative" || position === "fixed" ) {\n					// IE returns 0 when zIndex is not specified\n					// other browsers return a string\n					// we ignore the case of nested elements with an explicit value of 0\n					// <div style="z-index: -10;"><div style="z-index: 0;"></div></div>\n					value = parseInt( elem.css( "zIndex" ), 10 );\n					if ( !isNaN( value ) && value !== 0 ) {\n						return value;\n					}\n				}\n				elem = elem.parent();\n			}\n		}\n\n		return 0;\n	},\n\n	uniqueId: function() {\n		return this.each(function() {\n			if ( !this.id ) {\n				this.id = "ui-id-" + (++uuid);\n			}\n		});\n	},\n\n	removeUniqueId: function() {\n		return this.each(function() {\n			if ( runiqueId.test( this.id ) ) {\n				$( this ).removeAttr( "id" );\n			}\n		});\n	}\n});\n\n// selectors\nfunction focusable( element, isTabIndexNotNaN ) {\n	var map, mapName, img,\n		nodeName = element.nodeName.toLowerCase();\n	if ( "area" === nodeName ) {\n		map = element.parentNode;\n		mapName = map.name;\n		if ( !element.href || !mapName || map.nodeName.toLowerCase() !== "map" ) {\n			return false;\n		}\n		img = $( "img[usemap=#" + mapName + "]" )[0];\n		return !!img && visible( img );\n	}\n	return ( /input|select|textarea|button|object/.test( nodeName ) ?\n		!element.disabled :\n		"a" === nodeName ?\n			element.href || isTabIndexNotNaN :\n			isTabIndexNotNaN) &&\n		// the element and all of its ancestors must be visible\n		visible( element );\n}\n\nfunction visible( element ) {\n	return $.expr.filters.visible( element ) &&\n		!$( element ).parents().addBack().filter(function() {\n			return $.css( this, "visibility" ) === "hidden";\n		}).length;\n}\n\n$.extend( $.expr[ ":" ], {\n	data: $.expr.createPseudo ?\n		$.expr.createPseudo(function( dataName ) {\n			return function( elem ) {\n				return !!$.data( elem, dataName );\n			};\n		}) :\n		// support: jQuery <1.8\n		function( elem, i, match ) {\n			return !!$.data( elem, match[ 3 ] );\n		},\n\n	focusable: function( element ) {\n		return focusable( element, !isNaN( $.attr( element, "tabindex" ) ) );\n	},\n\n	tabbable: function( element ) {\n		var tabIndex = $.attr( element, "tabindex" ),\n			isTabIndexNaN = isNaN( tabIndex );\n		return ( isTabIndexNaN || tabIndex >= 0 ) && focusable( element, !isTabIndexNaN );\n	}\n});\n\n// support: jQuery <1.8\nif ( !$( "<a>" ).outerWidth( 1 ).jquery ) {\n	$.each( [ "Width", "Height" ], function( i, name ) {\n		var side = name === "Width" ? [ "Left", "Right" ] : [ "Top", "Bottom" ],\n			type = name.toLowerCase(),\n			orig = {\n				innerWidth: $.fn.innerWidth,\n				innerHeight: $.fn.innerHeight,\n				outerWidth: $.fn.outerWidth,\n				outerHeight: $.fn.outerHeight\n			};\n\n		function reduce( elem, size, border, margin ) {\n			$.each( side, function() {\n				size -= parseFloat( $.css( elem, "padding" + this ) ) || 0;\n				if ( border ) {\n					size -= parseFloat( $.css( elem, "border" + this + "Width" ) ) || 0;\n				}\n				if ( margin ) {\n					size -= parseFloat( $.css( elem, "margin" + this ) ) || 0;\n				}\n			});\n			return size;\n		}\n\n		$.fn[ "inner" + name ] = function( size ) {\n			if ( size === undefined ) {\n				return orig[ "inner" + name ].call( this );\n			}\n\n			return this.each(function() {\n				$( this ).css( type, reduce( this, size ) + "px" );\n			});\n		};\n\n		$.fn[ "outer" + name] = function( size, margin ) {\n			if ( typeof size !== "number" ) {\n				return orig[ "outer" + name ].call( this, size );\n			}\n\n			return this.each(function() {\n				$( this).css( type, reduce( this, size, true, margin ) + "px" );\n			});\n		};\n	});\n}\n\n// support: jQuery <1.8\nif ( !$.fn.addBack ) {\n	$.fn.addBack = function( selector ) {\n		return this.add( selector == null ?\n			this.prevObject : this.prevObject.filter( selector )\n		);\n	};\n}\n\n// support: jQuery 1.6.1, 1.6.2 (http://bugs.jquery.com/ticket/9413)\nif ( $( "<a>" ).data( "a-b", "a" ).removeData( "a-b" ).data( "a-b" ) ) {\n	$.fn.removeData = (function( removeData ) {\n		return function( key ) {\n			if ( arguments.length ) {\n				return removeData.call( this, $.camelCase( key ) );\n			} else {\n				return removeData.call( this );\n			}\n		};\n	})( $.fn.removeData );\n}\n\n\n\n\n\n// deprecated\n$.ui.ie = !!/msie [\\w.]+/.exec( navigator.userAgent.toLowerCase() );\n\n$.support.selectstart = "onselectstart" in document.createElement( "div" );\n$.fn.extend({\n	disableSelection: function() {\n		return this.bind( ( $.support.selectstart ? "selectstart" : "mousedown" ) +\n			".ui-disableSelection", function( event ) {\n				event.preventDefault();\n			});\n	},\n\n	enableSelection: function() {\n		return this.unbind( ".ui-disableSelection" );\n	}\n});\n\n$.extend( $.ui, {\n	// $.ui.plugin is deprecated. Use $.widget() extensions instead.\n	plugin: {\n		add: function( module, option, set ) {\n			var i,\n				proto = $.ui[ module ].prototype;\n			for ( i in set ) {\n				proto.plugins[ i ] = proto.plugins[ i ] || [];\n				proto.plugins[ i ].push( [ option, set[ i ] ] );\n			}\n		},\n		call: function( instance, name, args ) {\n			var i,\n				set = instance.plugins[ name ];\n			if ( !set || !instance.element[ 0 ].parentNode || instance.element[ 0 ].parentNode.nodeType === 11 ) {\n				return;\n			}\n\n			for ( i = 0; i < set.length; i++ ) {\n				if ( instance.options[ set[ i ][ 0 ] ] ) {\n					set[ i ][ 1 ].apply( instance.element, args );\n				}\n			}\n		}\n	},\n\n	// only used by resizable\n	hasScroll: function( el, a ) {\n\n		//If overflow is hidden, the element might have extra content, but the user wants to hide it\n		if ( $( el ).css( "overflow" ) === "hidden") {\n			return false;\n		}\n\n		var scroll = ( a && a === "left" ) ? "scrollLeft" : "scrollTop",\n			has = false;\n\n		if ( el[ scroll ] > 0 ) {\n			return true;\n		}\n\n		// TODO: determine which cases actually cause this to happen\n		// if the element doesn\'t have the scroll set, see if it\'s possible to\n		// set the scroll\n		el[ scroll ] = 1;\n		has = ( el[ scroll ] > 0 );\n		el[ scroll ] = 0;\n		return has;\n	}\n});\n\n})( jQuery );\n(function( $, undefined ) {\n\nvar uuid = 0,\n	slice = Array.prototype.slice,\n	_cleanData = $.cleanData;\n$.cleanData = function( elems ) {\n	for ( var i = 0, elem; (elem = elems[i]) != null; i++ ) {\n		try {\n			$( elem ).triggerHandler( "remove" );\n		// http://bugs.jquery.com/ticket/8235\n		} catch( e ) {}\n	}\n	_cleanData( elems );\n};\n\n$.widget = function( name, base, prototype ) {\n	var fullName, existingConstructor, constructor, basePrototype,\n		// proxiedPrototype allows the provided prototype to remain unmodified\n		// so that it can be used as a mixin for multiple widgets (#8876)\n		proxiedPrototype = {},\n		namespace = name.split( "." )[ 0 ];\n\n	name = name.split( "." )[ 1 ];\n	fullName = namespace + "-" + name;\n\n	if ( !prototype ) {\n		prototype = base;\n		base = $.Widget;\n	}\n\n	// create selector for plugin\n	$.expr[ ":" ][ fullName.toLowerCase() ] = function( elem ) {\n		return !!$.data( elem, fullName );\n	};\n\n	$[ namespace ] = $[ namespace ] || {};\n	existingConstructor = $[ namespace ][ name ];\n	constructor = $[ namespace ][ name ] = function( options, element ) {\n		// allow instantiation without "new" keyword\n		if ( !this._createWidget ) {\n			return new constructor( options, element );\n		}\n\n		// allow instantiation without initializing for simple inheritance\n		// must use "new" keyword (the code above always passes args)\n		if ( arguments.length ) {\n			this._createWidget( options, element );\n		}\n	};\n	// extend with the existing constructor to carry over any static properties\n	$.extend( constructor, existingConstructor, {\n		version: prototype.version,\n		// copy the object used to create the prototype in case we need to\n		// redefine the widget later\n		_proto: $.extend( {}, prototype ),\n		// track widgets that inherit from this widget in case this widget is\n		// redefined after a widget inherits from it\n		_childConstructors: []\n	});\n\n	basePrototype = new base();\n	// we need to make the options hash a property directly on the new instance\n	// otherwise we\'ll modify the options hash on the prototype that we\'re\n	// inheriting from\n	basePrototype.options = $.widget.extend( {}, basePrototype.options );\n	$.each( prototype, function( prop, value ) {\n		if ( !$.isFunction( value ) ) {\n			proxiedPrototype[ prop ] = value;\n			return;\n		}\n		proxiedPrototype[ prop ] = (function() {\n			var _super = function() {\n					return base.prototype[ prop ].apply( this, arguments );\n				},\n				_superApply = function( args ) {\n					return base.prototype[ prop ].apply( this, args );\n				};\n			return function() {\n				var __super = this._super,\n					__superApply = this._superApply,\n					returnValue;\n\n				this._super = _super;\n				this._superApply = _superApply;\n\n				returnValue = value.apply( this, arguments );\n\n				this._super = __super;\n				this._superApply = __superApply;\n\n				return returnValue;\n			};\n		})();\n	});\n	constructor.prototype = $.widget.extend( basePrototype, {\n		// TODO: remove support for widgetEventPrefix\n		// always use the name + a colon as the prefix, e.g., draggable:start\n		// don\'t prefix for widgets that aren\'t DOM-based\n		widgetEventPrefix: existingConstructor ? (basePrototype.widgetEventPrefix || name) : name\n	}, proxiedPrototype, {\n		constructor: constructor,\n		namespace: namespace,\n		widgetName: name,\n		widgetFullName: fullName\n	});\n\n	// If this widget is being redefined then we need to find all widgets that\n	// are inheriting from it and redefine all of them so that they inherit from\n	// the new version of this widget. We\'re essentially trying to replace one\n	// level in the prototype chain.\n	if ( existingConstructor ) {\n		$.each( existingConstructor._childConstructors, function( i, child ) {\n			var childPrototype = child.prototype;\n\n			// redefine the child widget using the same prototype that was\n			// originally used, but inherit from the new version of the base\n			$.widget( childPrototype.namespace + "." + childPrototype.widgetName, constructor, child._proto );\n		});\n		// remove the list of existing child constructors from the old constructor\n		// so the old child constructors can be garbage collected\n		delete existingConstructor._childConstructors;\n	} else {\n		base._childConstructors.push( constructor );\n	}\n\n	$.widget.bridge( name, constructor );\n};\n\n$.widget.extend = function( target ) {\n	var input = slice.call( arguments, 1 ),\n		inputIndex = 0,\n		inputLength = input.length,\n		key,\n		value;\n	for ( ; inputIndex < inputLength; inputIndex++ ) {\n		for ( key in input[ inputIndex ] ) {\n			value = input[ inputIndex ][ key ];\n			if ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {\n				// Clone objects\n				if ( $.isPlainObject( value ) ) {\n					target[ key ] = $.isPlainObject( target[ key ] ) ?\n						$.widget.extend( {}, target[ key ], value ) :\n						// Don\'t extend strings, arrays, etc. with objects\n						$.widget.extend( {}, value );\n				// Copy everything else by reference\n				} else {\n					target[ key ] = value;\n				}\n			}\n		}\n	}\n	return target;\n};\n\n$.widget.bridge = function( name, object ) {\n	var fullName = object.prototype.widgetFullName || name;\n	$.fn[ name ] = function( options ) {\n		var isMethodCall = typeof options === "string",\n			args = slice.call( arguments, 1 ),\n			returnValue = this;\n\n		// allow multiple hashes to be passed on init\n		options = !isMethodCall && args.length ?\n			$.widget.extend.apply( null, [ options ].concat(args) ) :\n			options;\n\n		if ( isMethodCall ) {\n			this.each(function() {\n				var methodValue,\n					instance = $.data( this, fullName );\n				if ( !instance ) {\n					return $.error( "cannot call methods on " + name + " prior to initialization; " +\n						"attempted to call method \'" + options + "\'" );\n				}\n				if ( !$.isFunction( instance[options] ) || options.charAt( 0 ) === "_" ) {\n					return $.error( "no such method \'" + options + "\' for " + name + " widget instance" );\n				}\n				methodValue = instance[ options ].apply( instance, args );\n				if ( methodValue !== instance && methodValue !== undefined ) {\n					returnValue = methodValue && methodValue.jquery ?\n						returnValue.pushStack( methodValue.get() ) :\n						methodValue;\n					return false;\n				}\n			});\n		} else {\n			this.each(function() {\n				var instance = $.data( this, fullName );\n				if ( instance ) {\n					instance.option( options || {} )._init();\n				} else {\n					$.data( this, fullName, new object( options, this ) );\n				}\n			});\n		}\n\n		return returnValue;\n	};\n};\n\n$.Widget = function( /* options, element */ ) {};\n$.Widget._childConstructors = [];\n\n$.Widget.prototype = {\n	widgetName: "widget",\n	widgetEventPrefix: "",\n	defaultElement: "<div>",\n	options: {\n		disabled: false,\n\n		// callbacks\n		create: null\n	},\n	_createWidget: function( options, element ) {\n		element = $( element || this.defaultElement || this )[ 0 ];\n		this.element = $( element );\n		this.uuid = uuid++;\n		this.eventNamespace = "." + this.widgetName + this.uuid;\n		this.options = $.widget.extend( {},\n			this.options,\n			this._getCreateOptions(),\n			options );\n\n		this.bindings = $();\n		this.hoverable = $();\n		this.focusable = $();\n\n		if ( element !== this ) {\n			$.data( element, this.widgetFullName, this );\n			this._on( true, this.element, {\n				remove: function( event ) {\n					if ( event.target === element ) {\n						this.destroy();\n					}\n				}\n			});\n			this.document = $( element.style ?\n				// element within the document\n				element.ownerDocument :\n				// element is window or document\n				element.document || element );\n			this.window = $( this.document[0].defaultView || this.document[0].parentWindow );\n		}\n\n		this._create();\n		this._trigger( "create", null, this._getCreateEventData() );\n		this._init();\n	},\n	_getCreateOptions: $.noop,\n	_getCreateEventData: $.noop,\n	_create: $.noop,\n	_init: $.noop,\n\n	destroy: function() {\n		this._destroy();\n		// we can probably remove the unbind calls in 2.0\n		// all event bindings should go through this._on()\n		this.element\n			.unbind( this.eventNamespace )\n			// 1.9 BC for #7810\n			// TODO remove dual storage\n			.removeData( this.widgetName )\n			.removeData( this.widgetFullName )\n			// support: jquery <1.6.3\n			// http://bugs.jquery.com/ticket/9413\n			.removeData( $.camelCase( this.widgetFullName ) );\n		this.widget()\n			.unbind( this.eventNamespace )\n			.removeAttr( "aria-disabled" )\n			.removeClass(\n				this.widgetFullName + "-disabled " +\n				"ui-state-disabled" );\n\n		// clean up events and states\n		this.bindings.unbind( this.eventNamespace );\n		this.hoverable.removeClass( "ui-state-hover" );\n		this.focusable.removeClass( "ui-state-focus" );\n	},\n	_destroy: $.noop,\n\n	widget: function() {\n		return this.element;\n	},\n\n	option: function( key, value ) {\n		var options = key,\n			parts,\n			curOption,\n			i;\n\n		if ( arguments.length === 0 ) {\n			// don\'t return a reference to the internal hash\n			return $.widget.extend( {}, this.options );\n		}\n\n		if ( typeof key === "string" ) {\n			// handle nested keys, e.g., "foo.bar" => { foo: { bar: ___ } }\n			options = {};\n			parts = key.split( "." );\n			key = parts.shift();\n			if ( parts.length ) {\n				curOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );\n				for ( i = 0; i < parts.length - 1; i++ ) {\n					curOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\n					curOption = curOption[ parts[ i ] ];\n				}\n				key = parts.pop();\n				if ( arguments.length === 1 ) {\n					return curOption[ key ] === undefined ? null : curOption[ key ];\n				}\n				curOption[ key ] = value;\n			} else {\n				if ( arguments.length === 1 ) {\n					return this.options[ key ] === undefined ? null : this.options[ key ];\n				}\n				options[ key ] = value;\n			}\n		}\n\n		this._setOptions( options );\n\n		return this;\n	},\n	_setOptions: function( options ) {\n		var key;\n\n		for ( key in options ) {\n			this._setOption( key, options[ key ] );\n		}\n\n		return this;\n	},\n	_setOption: function( key, value ) {\n		this.options[ key ] = value;\n\n		if ( key === "disabled" ) {\n			this.widget()\n				.toggleClass( this.widgetFullName + "-disabled ui-state-disabled", !!value )\n				.attr( "aria-disabled", value );\n			this.hoverable.removeClass( "ui-state-hover" );\n			this.focusable.removeClass( "ui-state-focus" );\n		}\n\n		return this;\n	},\n\n	enable: function() {\n		return this._setOption( "disabled", false );\n	},\n	disable: function() {\n		return this._setOption( "disabled", true );\n	},\n\n	_on: function( suppressDisabledCheck, element, handlers ) {\n		var delegateElement,\n			instance = this;\n\n		// no suppressDisabledCheck flag, shuffle arguments\n		if ( typeof suppressDisabledCheck !== "boolean" ) {\n			handlers = element;\n			element = suppressDisabledCheck;\n			suppressDisabledCheck = false;\n		}\n\n		// no element argument, shuffle and use this.element\n		if ( !handlers ) {\n			handlers = element;\n			element = this.element;\n			delegateElement = this.widget();\n		} else {\n			// accept selectors, DOM elements\n			element = delegateElement = $( element );\n			this.bindings = this.bindings.add( element );\n		}\n\n		$.each( handlers, function( event, handler ) {\n			function handlerProxy() {\n				// allow widgets to customize the disabled handling\n				// - disabled as an array instead of boolean\n				// - disabled class as method for disabling individual parts\n				if ( !suppressDisabledCheck &&\n						( instance.options.disabled === true ||\n							$( this ).hasClass( "ui-state-disabled" ) ) ) {\n					return;\n				}\n				return ( typeof handler === "string" ? instance[ handler ] : handler )\n					.apply( instance, arguments );\n			}\n\n			// copy the guid so direct unbinding works\n			if ( typeof handler !== "string" ) {\n				handlerProxy.guid = handler.guid =\n					handler.guid || handlerProxy.guid || $.guid++;\n			}\n\n			var match = event.match( /^(\\w+)\\s*(.*)$/ ),\n				eventName = match[1] + instance.eventNamespace,\n				selector = match[2];\n			if ( selector ) {\n				delegateElement.delegate( selector, eventName, handlerProxy );\n			} else {\n				element.bind( eventName, handlerProxy );\n			}\n		});\n	},\n\n	_off: function( element, eventName ) {\n		eventName = (eventName || "").split( " " ).join( this.eventNamespace + " " ) + this.eventNamespace;\n		element.unbind( eventName ).undelegate( eventName );\n	},\n\n	_delay: function( handler, delay ) {\n		function handlerProxy() {\n			return ( typeof handler === "string" ? instance[ handler ] : handler )\n				.apply( instance, arguments );\n		}\n		var instance = this;\n		return setTimeout( handlerProxy, delay || 0 );\n	},\n\n	_hoverable: function( element ) {\n		this.hoverable = this.hoverable.add( element );\n		this._on( element, {\n			mouseenter: function( event ) {\n				$( event.currentTarget ).addClass( "ui-state-hover" );\n			},\n			mouseleave: function( event ) {\n				$( event.currentTarget ).removeClass( "ui-state-hover" );\n			}\n		});\n	},\n\n	_focusable: function( element ) {\n		this.focusable = this.focusable.add( element );\n		this._on( element, {\n			focusin: function( event ) {\n				$( event.currentTarget ).addClass( "ui-state-focus" );\n			},\n			focusout: function( event ) {\n				$( event.currentTarget ).removeClass( "ui-state-focus" );\n			}\n		});\n	},\n\n	_trigger: function( type, event, data ) {\n		var prop, orig,\n			callback = this.options[ type ];\n\n		data = data || {};\n		event = $.Event( event );\n		event.type = ( type === this.widgetEventPrefix ?\n			type :\n			this.widgetEventPrefix + type ).toLowerCase();\n		// the original event may come from any element\n		// so we need to reset the target on the new event\n		event.target = this.element[ 0 ];\n\n		// copy original event properties over to the new event\n		orig = event.originalEvent;\n		if ( orig ) {\n			for ( prop in orig ) {\n				if ( !( prop in event ) ) {\n					event[ prop ] = orig[ prop ];\n				}\n			}\n		}\n\n		this.element.trigger( event, data );\n		return !( $.isFunction( callback ) &&\n			callback.apply( this.element[0], [ event ].concat( data ) ) === false ||\n			event.isDefaultPrevented() );\n	}\n};\n\n$.each( { show: "fadeIn", hide: "fadeOut" }, function( method, defaultEffect ) {\n	$.Widget.prototype[ "_" + method ] = function( element, options, callback ) {\n		if ( typeof options === "string" ) {\n			options = { effect: options };\n		}\n		var hasOptions,\n			effectName = !options ?\n				method :\n				options === true || typeof options === "number" ?\n					defaultEffect :\n					options.effect || defaultEffect;\n		options = options || {};\n		if ( typeof options === "number" ) {\n			options = { duration: options };\n		}\n		hasOptions = !$.isEmptyObject( options );\n		options.complete = callback;\n		if ( options.delay ) {\n			element.delay( options.delay );\n		}\n		if ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {\n			element[ method ]( options );\n		} else if ( effectName !== method && element[ effectName ] ) {\n			element[ effectName ]( options.duration, options.easing, callback );\n		} else {\n			element.queue(function( next ) {\n				$( this )[ method ]();\n				if ( callback ) {\n					callback.call( element[ 0 ] );\n				}\n				next();\n			});\n		}\n	};\n});\n\n})( jQuery );\n(function( $, undefined ) {\n\nvar mouseHandled = false;\n$( document ).mouseup( function() {\n	mouseHandled = false;\n});\n\n$.widget("ui.mouse", {\n	version: "1.10.4",\n	options: {\n		cancel: "input,textarea,button,select,option",\n		distance: 1,\n		delay: 0\n	},\n	_mouseInit: function() {\n		var that = this;\n\n		this.element\n			.bind("mousedown."+this.widgetName, function(event) {\n				return that._mouseDown(event);\n			})\n			.bind("click."+this.widgetName, function(event) {\n				if (true === $.data(event.target, that.widgetName + ".preventClickEvent")) {\n					$.removeData(event.target, that.widgetName + ".preventClickEvent");\n					event.stopImmediatePropagation();\n					return false;\n				}\n			});\n\n		this.started = false;\n	},\n\n	// TODO: make sure destroying one instance of mouse doesn\'t mess with\n	// other instances of mouse\n	_mouseDestroy: function() {\n		this.element.unbind("."+this.widgetName);\n		if ( this._mouseMoveDelegate ) {\n			$(document)\n				.unbind("mousemove."+this.widgetName, this._mouseMoveDelegate)\n				.unbind("mouseup."+this.widgetName, this._mouseUpDelegate);\n		}\n	},\n\n	_mouseDown: function(event) {\n		// don\'t let more than one widget handle mouseStart\n		if( mouseHandled ) { return; }\n\n		// we may have missed mouseup (out of window)\n		(this._mouseStarted && this._mouseUp(event));\n\n		this._mouseDownEvent = event;\n\n		var that = this,\n			btnIsLeft = (event.which === 1),\n			// event.target.nodeName works around a bug in IE 8 with\n			// disabled inputs (#7620)\n			elIsCancel = (typeof this.options.cancel === "string" && event.target.nodeName ? $(event.target).closest(this.options.cancel).length : false);\n		if (!btnIsLeft || elIsCancel || !this._mouseCapture(event)) {\n			return true;\n		}\n\n		this.mouseDelayMet = !this.options.delay;\n		if (!this.mouseDelayMet) {\n			this._mouseDelayTimer = setTimeout(function() {\n				that.mouseDelayMet = true;\n			}, this.options.delay);\n		}\n\n		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {\n			this._mouseStarted = (this._mouseStart(event) !== false);\n			if (!this._mouseStarted) {\n				event.preventDefault();\n				return true;\n			}\n		}\n\n		// Click event may never have fired (Gecko & Opera)\n		if (true === $.data(event.target, this.widgetName + ".preventClickEvent")) {\n			$.removeData(event.target, this.widgetName + ".preventClickEvent");\n		}\n\n		// these delegates are required to keep context\n		this._mouseMoveDelegate = function(event) {\n			return that._mouseMove(event);\n		};\n		this._mouseUpDelegate = function(event) {\n			return that._mouseUp(event);\n		};\n		$(document)\n			.bind("mousemove."+this.widgetName, this._mouseMoveDelegate)\n			.bind("mouseup."+this.widgetName, this._mouseUpDelegate);\n\n		event.preventDefault();\n\n		mouseHandled = true;\n		return true;\n	},\n\n	_mouseMove: function(event) {\n		// IE mouseup check - mouseup happened when mouse was out of window\n		if ($.ui.ie && ( !document.documentMode || document.documentMode < 9 ) && !event.button) {\n			return this._mouseUp(event);\n		}\n\n		if (this._mouseStarted) {\n			this._mouseDrag(event);\n			return event.preventDefault();\n		}\n\n		if (this._mouseDistanceMet(event) && this._mouseDelayMet(event)) {\n			this._mouseStarted =\n				(this._mouseStart(this._mouseDownEvent, event) !== false);\n			(this._mouseStarted ? this._mouseDrag(event) : this._mouseUp(event));\n		}\n\n		return !this._mouseStarted;\n	},\n\n	_mouseUp: function(event) {\n		$(document)\n			.unbind("mousemove."+this.widgetName, this._mouseMoveDelegate)\n			.unbind("mouseup."+this.widgetName, this._mouseUpDelegate);\n\n		if (this._mouseStarted) {\n			this._mouseStarted = false;\n\n			if (event.target === this._mouseDownEvent.target) {\n				$.data(event.target, this.widgetName + ".preventClickEvent", true);\n			}\n\n			this._mouseStop(event);\n		}\n\n		return false;\n	},\n\n	_mouseDistanceMet: function(event) {\n		return (Math.max(\n				Math.abs(this._mouseDownEvent.pageX - event.pageX),\n				Math.abs(this._mouseDownEvent.pageY - event.pageY)\n			) >= this.options.distance\n		);\n	},\n\n	_mouseDelayMet: function(/* event */) {\n		return this.mouseDelayMet;\n	},\n\n	// These are placeholder methods, to be overriden by extending plugin\n	_mouseStart: function(/* event */) {},\n	_mouseDrag: function(/* event */) {},\n	_mouseStop: function(/* event */) {},\n	_mouseCapture: function(/* event */) { return true; }\n});\n\n})(jQuery);\n(function( $, undefined ) {\n\n$.ui = $.ui || {};\n\nvar cachedScrollbarWidth,\n	max = Math.max,\n	abs = Math.abs,\n	round = Math.round,\n	rhorizontal = /left|center|right/,\n	rvertical = /top|center|bottom/,\n	roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\n	rposition = /^\\w+/,\n	rpercent = /%$/,\n	_position = $.fn.position;\n\nfunction getOffsets( offsets, width, height ) {\n	return [\n		parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\n		parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\n	];\n}\n\nfunction parseCss( element, property ) {\n	return parseInt( $.css( element, property ), 10 ) || 0;\n}\n\nfunction getDimensions( elem ) {\n	var raw = elem[0];\n	if ( raw.nodeType === 9 ) {\n		return {\n			width: elem.width(),\n			height: elem.height(),\n			offset: { top: 0, left: 0 }\n		};\n	}\n	if ( $.isWindow( raw ) ) {\n		return {\n			width: elem.width(),\n			height: elem.height(),\n			offset: { top: elem.scrollTop(), left: elem.scrollLeft() }\n		};\n	}\n	if ( raw.preventDefault ) {\n		return {\n			width: 0,\n			height: 0,\n			offset: { top: raw.pageY, left: raw.pageX }\n		};\n	}\n	return {\n		width: elem.outerWidth(),\n		height: elem.outerHeight(),\n		offset: elem.offset()\n	};\n}\n\n$.position = {\n	scrollbarWidth: function() {\n		if ( cachedScrollbarWidth !== undefined ) {\n			return cachedScrollbarWidth;\n		}\n		var w1, w2,\n			div = $( "<div style=\'display:block;position:absolute;width:50px;height:50px;overflow:hidden;\'><div style=\'height:100px;width:auto;\'></div></div>" ),\n			innerDiv = div.children()[0];\n\n		$( "body" ).append( div );\n		w1 = innerDiv.offsetWidth;\n		div.css( "overflow", "scroll" );\n\n		w2 = innerDiv.offsetWidth;\n\n		if ( w1 === w2 ) {\n			w2 = div[0].clientWidth;\n		}\n\n		div.remove();\n\n		return (cachedScrollbarWidth = w1 - w2);\n	},\n	getScrollInfo: function( within ) {\n		var overflowX = within.isWindow || within.isDocument ? "" :\n				within.element.css( "overflow-x" ),\n			overflowY = within.isWindow || within.isDocument ? "" :\n				within.element.css( "overflow-y" ),\n			hasOverflowX = overflowX === "scroll" ||\n				( overflowX === "auto" && within.width < within.element[0].scrollWidth ),\n			hasOverflowY = overflowY === "scroll" ||\n				( overflowY === "auto" && within.height < within.element[0].scrollHeight );\n		return {\n			width: hasOverflowY ? $.position.scrollbarWidth() : 0,\n			height: hasOverflowX ? $.position.scrollbarWidth() : 0\n		};\n	},\n	getWithinInfo: function( element ) {\n		var withinElement = $( element || window ),\n			isWindow = $.isWindow( withinElement[0] ),\n			isDocument = !!withinElement[ 0 ] && withinElement[ 0 ].nodeType === 9;\n		return {\n			element: withinElement,\n			isWindow: isWindow,\n			isDocument: isDocument,\n			offset: withinElement.offset() || { left: 0, top: 0 },\n			scrollLeft: withinElement.scrollLeft(),\n			scrollTop: withinElement.scrollTop(),\n			width: isWindow ? withinElement.width() : withinElement.outerWidth(),\n			height: isWindow ? withinElement.height() : withinElement.outerHeight()\n		};\n	}\n};\n\n$.fn.position = function( options ) {\n	if ( !options || !options.of ) {\n		return _position.apply( this, arguments );\n	}\n\n	// make a copy, we don\'t want to modify arguments\n	options = $.extend( {}, options );\n\n	var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\n		target = $( options.of ),\n		within = $.position.getWithinInfo( options.within ),\n		scrollInfo = $.position.getScrollInfo( within ),\n		collision = ( options.collision || "flip" ).split( " " ),\n		offsets = {};\n\n	dimensions = getDimensions( target );\n	if ( target[0].preventDefault ) {\n		// force left top to allow flipping\n		options.at = "left top";\n	}\n	targetWidth = dimensions.width;\n	targetHeight = dimensions.height;\n	targetOffset = dimensions.offset;\n	// clone to reuse original targetOffset later\n	basePosition = $.extend( {}, targetOffset );\n\n	// force my and at to have valid horizontal and vertical positions\n	// if a value is missing or invalid, it will be converted to center\n	$.each( [ "my", "at" ], function() {\n		var pos = ( options[ this ] || "" ).split( " " ),\n			horizontalOffset,\n			verticalOffset;\n\n		if ( pos.length === 1) {\n			pos = rhorizontal.test( pos[ 0 ] ) ?\n				pos.concat( [ "center" ] ) :\n				rvertical.test( pos[ 0 ] ) ?\n					[ "center" ].concat( pos ) :\n					[ "center", "center" ];\n		}\n		pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : "center";\n		pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : "center";\n\n		// calculate offsets\n		horizontalOffset = roffset.exec( pos[ 0 ] );\n		verticalOffset = roffset.exec( pos[ 1 ] );\n		offsets[ this ] = [\n			horizontalOffset ? horizontalOffset[ 0 ] : 0,\n			verticalOffset ? verticalOffset[ 0 ] : 0\n		];\n\n		// reduce to just the positions without the offsets\n		options[ this ] = [\n			rposition.exec( pos[ 0 ] )[ 0 ],\n			rposition.exec( pos[ 1 ] )[ 0 ]\n		];\n	});\n\n	// normalize collision option\n	if ( collision.length === 1 ) {\n		collision[ 1 ] = collision[ 0 ];\n	}\n\n	if ( options.at[ 0 ] === "right" ) {\n		basePosition.left += targetWidth;\n	} else if ( options.at[ 0 ] === "center" ) {\n		basePosition.left += targetWidth / 2;\n	}\n\n	if ( options.at[ 1 ] === "bottom" ) {\n		basePosition.top += targetHeight;\n	} else if ( options.at[ 1 ] === "center" ) {\n		basePosition.top += targetHeight / 2;\n	}\n\n	atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\n	basePosition.left += atOffset[ 0 ];\n	basePosition.top += atOffset[ 1 ];\n\n	return this.each(function() {\n		var collisionPosition, using,\n			elem = $( this ),\n			elemWidth = elem.outerWidth(),\n			elemHeight = elem.outerHeight(),\n			marginLeft = parseCss( this, "marginLeft" ),\n			marginTop = parseCss( this, "marginTop" ),\n			collisionWidth = elemWidth + marginLeft + parseCss( this, "marginRight" ) + scrollInfo.width,\n			collisionHeight = elemHeight + marginTop + parseCss( this, "marginBottom" ) + scrollInfo.height,\n			position = $.extend( {}, basePosition ),\n			myOffset = getOffsets( offsets.my, elem.outerWidth(), elem.outerHeight() );\n\n		if ( options.my[ 0 ] === "right" ) {\n			position.left -= elemWidth;\n		} else if ( options.my[ 0 ] === "center" ) {\n			position.left -= elemWidth / 2;\n		}\n\n		if ( options.my[ 1 ] === "bottom" ) {\n			position.top -= elemHeight;\n		} else if ( options.my[ 1 ] === "center" ) {\n			position.top -= elemHeight / 2;\n		}\n\n		position.left += myOffset[ 0 ];\n		position.top += myOffset[ 1 ];\n\n		// if the browser doesn\'t support fractions, then round for consistent results\n		if ( !$.support.offsetFractions ) {\n			position.left = round( position.left );\n			position.top = round( position.top );\n		}\n\n		collisionPosition = {\n			marginLeft: marginLeft,\n			marginTop: marginTop\n		};\n\n		$.each( [ "left", "top" ], function( i, dir ) {\n			if ( $.ui.position[ collision[ i ] ] ) {\n				$.ui.position[ collision[ i ] ][ dir ]( position, {\n					targetWidth: targetWidth,\n					targetHeight: targetHeight,\n					elemWidth: elemWidth,\n					elemHeight: elemHeight,\n					collisionPosition: collisionPosition,\n					collisionWidth: collisionWidth,\n					collisionHeight: collisionHeight,\n					offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\n					my: options.my,\n					at: options.at,\n					within: within,\n					elem : elem\n				});\n			}\n		});\n\n		if ( options.using ) {\n			// adds feedback as second argument to using callback, if present\n			using = function( props ) {\n				var left = targetOffset.left - position.left,\n					right = left + targetWidth - elemWidth,\n					top = targetOffset.top - position.top,\n					bottom = top + targetHeight - elemHeight,\n					feedback = {\n						target: {\n							element: target,\n							left: targetOffset.left,\n							top: targetOffset.top,\n							width: targetWidth,\n							height: targetHeight\n						},\n						element: {\n							element: elem,\n							left: position.left,\n							top: position.top,\n							width: elemWidth,\n							height: elemHeight\n						},\n						horizontal: right < 0 ? "left" : left > 0 ? "right" : "center",\n						vertical: bottom < 0 ? "top" : top > 0 ? "bottom" : "middle"\n					};\n				if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\n					feedback.horizontal = "center";\n				}\n				if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\n					feedback.vertical = "middle";\n				}\n				if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\n					feedback.important = "horizontal";\n				} else {\n					feedback.important = "vertical";\n				}\n				options.using.call( this, props, feedback );\n			};\n		}\n\n		elem.offset( $.extend( position, { using: using } ) );\n	});\n};\n\n$.ui.position = {\n	fit: {\n		left: function( position, data ) {\n			var within = data.within,\n				withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\n				outerWidth = within.width,\n				collisionPosLeft = position.left - data.collisionPosition.marginLeft,\n				overLeft = withinOffset - collisionPosLeft,\n				overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\n				newOverRight;\n\n			// element is wider than within\n			if ( data.collisionWidth > outerWidth ) {\n				// element is initially over the left side of within\n				if ( overLeft > 0 && overRight <= 0 ) {\n					newOverRight = position.left + overLeft + data.collisionWidth - outerWidth - withinOffset;\n					position.left += overLeft - newOverRight;\n				// element is initially over right side of within\n				} else if ( overRight > 0 && overLeft <= 0 ) {\n					position.left = withinOffset;\n				// element is initially over both left and right sides of within\n				} else {\n					if ( overLeft > overRight ) {\n						position.left = withinOffset + outerWidth - data.collisionWidth;\n					} else {\n						position.left = withinOffset;\n					}\n				}\n			// too far left -> align with left edge\n			} else if ( overLeft > 0 ) {\n				position.left += overLeft;\n			// too far right -> align with right edge\n			} else if ( overRight > 0 ) {\n				position.left -= overRight;\n			// adjust based on position and margin\n			} else {\n				position.left = max( position.left - collisionPosLeft, position.left );\n			}\n		},\n		top: function( position, data ) {\n			var within = data.within,\n				withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\n				outerHeight = data.within.height,\n				collisionPosTop = position.top - data.collisionPosition.marginTop,\n				overTop = withinOffset - collisionPosTop,\n				overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\n				newOverBottom;\n\n			// element is taller than within\n			if ( data.collisionHeight > outerHeight ) {\n				// element is initially over the top of within\n				if ( overTop > 0 && overBottom <= 0 ) {\n					newOverBottom = position.top + overTop + data.collisionHeight - outerHeight - withinOffset;\n					position.top += overTop - newOverBottom;\n				// element is initially over bottom of within\n				} else if ( overBottom > 0 && overTop <= 0 ) {\n					position.top = withinOffset;\n				// element is initially over both top and bottom of within\n				} else {\n					if ( overTop > overBottom ) {\n						position.top = withinOffset + outerHeight - data.collisionHeight;\n					} else {\n						position.top = withinOffset;\n					}\n				}\n			// too far up -> align with top\n			} else if ( overTop > 0 ) {\n				position.top += overTop;\n			// too far down -> align with bottom edge\n			} else if ( overBottom > 0 ) {\n				position.top -= overBottom;\n			// adjust based on position and margin\n			} else {\n				position.top = max( position.top - collisionPosTop, position.top );\n			}\n		}\n	},\n	flip: {\n		left: function( position, data ) {\n			var within = data.within,\n				withinOffset = within.offset.left + within.scrollLeft,\n				outerWidth = within.width,\n				offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\n				collisionPosLeft = position.left - data.collisionPosition.marginLeft,\n				overLeft = collisionPosLeft - offsetLeft,\n				overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\n				myOffset = data.my[ 0 ] === "left" ?\n					-data.elemWidth :\n					data.my[ 0 ] === "right" ?\n						data.elemWidth :\n						0,\n				atOffset = data.at[ 0 ] === "left" ?\n					data.targetWidth :\n					data.at[ 0 ] === "right" ?\n						-data.targetWidth :\n						0,\n				offset = -2 * data.offset[ 0 ],\n				newOverRight,\n				newOverLeft;\n\n			if ( overLeft < 0 ) {\n				newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth - outerWidth - withinOffset;\n				if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\n					position.left += myOffset + atOffset + offset;\n				}\n			}\n			else if ( overRight > 0 ) {\n				newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset + atOffset + offset - offsetLeft;\n				if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\n					position.left += myOffset + atOffset + offset;\n				}\n			}\n		},\n		top: function( position, data ) {\n			var within = data.within,\n				withinOffset = within.offset.top + within.scrollTop,\n				outerHeight = within.height,\n				offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\n				collisionPosTop = position.top - data.collisionPosition.marginTop,\n				overTop = collisionPosTop - offsetTop,\n				overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\n				top = data.my[ 1 ] === "top",\n				myOffset = top ?\n					-data.elemHeight :\n					data.my[ 1 ] === "bottom" ?\n						data.elemHeight :\n						0,\n				atOffset = data.at[ 1 ] === "top" ?\n					data.targetHeight :\n					data.at[ 1 ] === "bottom" ?\n						-data.targetHeight :\n						0,\n				offset = -2 * data.offset[ 1 ],\n				newOverTop,\n				newOverBottom;\n			if ( overTop < 0 ) {\n				newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight - outerHeight - withinOffset;\n				if ( ( position.top + myOffset + atOffset + offset) > overTop && ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) ) {\n					position.top += myOffset + atOffset + offset;\n				}\n			}\n			else if ( overBottom > 0 ) {\n				newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset + offset - offsetTop;\n				if ( ( position.top + myOffset + atOffset + offset) > overBottom && ( newOverTop > 0 || abs( newOverTop ) < overBottom ) ) {\n					position.top += myOffset + atOffset + offset;\n				}\n			}\n		}\n	},\n	flipfit: {\n		left: function() {\n			$.ui.position.flip.left.apply( this, arguments );\n			$.ui.position.fit.left.apply( this, arguments );\n		},\n		top: function() {\n			$.ui.position.flip.top.apply( this, arguments );\n			$.ui.position.fit.top.apply( this, arguments );\n		}\n	}\n};\n\n// fraction support test\n(function () {\n	var testElement, testElementParent, testElementStyle, offsetLeft, i,\n		body = document.getElementsByTagName( "body" )[ 0 ],\n		div = document.createElement( "div" );\n\n	//Create a "fake body" for testing based on method used in jQuery.support\n	testElement = document.createElement( body ? "div" : "body" );\n	testElementStyle = {\n		visibility: "hidden",\n		width: 0,\n		height: 0,\n		border: 0,\n		margin: 0,\n		background: "none"\n	};\n	if ( body ) {\n		$.extend( testElementStyle, {\n			position: "absolute",\n			left: "-1000px",\n			top: "-1000px"\n		});\n	}\n	for ( i in testElementStyle ) {\n		testElement.style[ i ] = testElementStyle[ i ];\n	}\n	testElement.appendChild( div );\n	testElementParent = body || document.documentElement;\n	testElementParent.insertBefore( testElement, testElementParent.firstChild );\n\n	div.style.cssText = "position: absolute; left: 10.7432222px;";\n\n	offsetLeft = $( div ).offset().left;\n	$.support.offsetFractions = offsetLeft > 10 && offsetLeft < 11;\n\n	testElement.innerHTML = "";\n	testElementParent.removeChild( testElement );\n})();\n\n}( jQuery ) );\n(function( $, undefined ) {\n\n$.widget("ui.draggable", $.ui.mouse, {\n	version: "1.10.4",\n	widgetEventPrefix: "drag",\n	options: {\n		addClasses: true,\n		appendTo: "parent",\n		axis: false,\n		connectToSortable: false,\n		containment: false,\n		cursor: "auto",\n		cursorAt: false,\n		grid: false,\n		handle: false,\n		helper: "original",\n		iframeFix: false,\n		opacity: false,\n		refreshPositions: false,\n		revert: false,\n		revertDuration: 500,\n		scope: "default",\n		scroll: true,\n		scrollSensitivity: 20,\n		scrollSpeed: 20,\n		snap: false,\n		snapMode: "both",\n		snapTolerance: 20,\n		stack: false,\n		zIndex: false,\n\n		// callbacks\n		drag: null,\n		start: null,\n		stop: null\n	},\n	_create: function() {\n\n		if (this.options.helper === "original" && !(/^(?:r|a|f)/).test(this.element.css("position"))) {\n			this.element[0].style.position = "relative";\n		}\n		if (this.options.addClasses){\n			this.element.addClass("ui-draggable");\n		}\n		if (this.options.disabled){\n			this.element.addClass("ui-draggable-disabled");\n		}\n\n		this._mouseInit();\n\n	},\n\n	_destroy: function() {\n		this.element.removeClass( "ui-draggable ui-draggable-dragging ui-draggable-disabled" );\n		this._mouseDestroy();\n	},\n\n	_mouseCapture: function(event) {\n\n		var o = this.options;\n\n		// among others, prevent a drag on a resizable-handle\n		if (this.helper || o.disabled || $(event.target).closest(".ui-resizable-handle").length > 0) {\n			return false;\n		}\n\n		//Quit if we\'re not on a valid handle\n		this.handle = this._getHandle(event);\n		if (!this.handle) {\n			return false;\n		}\n\n		$(o.iframeFix === true ? "iframe" : o.iframeFix).each(function() {\n			$("<div class=\'ui-draggable-iframeFix\' style=\'background: #fff;\'></div>")\n			.css({\n				width: this.offsetWidth+"px", height: this.offsetHeight+"px",\n				position: "absolute", opacity: "0.001", zIndex: 1000\n			})\n			.css($(this).offset())\n			.appendTo("body");\n		});\n\n		return true;\n\n	},\n\n	_mouseStart: function(event) {\n\n		var o = this.options;\n\n		//Create and append the visible helper\n		this.helper = this._createHelper(event);\n\n		this.helper.addClass("ui-draggable-dragging");\n\n		//Cache the helper size\n		this._cacheHelperProportions();\n\n		//If ddmanager is used for droppables, set the global draggable\n		if($.ui.ddmanager) {\n			$.ui.ddmanager.current = this;\n		}\n\n		/*\n		 * - Position generation -\n		 * This block generates everything position related - it\'s the core of draggables.\n		 */\n\n		//Cache the margins of the original element\n		this._cacheMargins();\n\n		//Store the helper\'s css position\n		this.cssPosition = this.helper.css( "position" );\n		this.scrollParent = this.helper.scrollParent();\n		this.offsetParent = this.helper.offsetParent();\n		this.offsetParentCssPosition = this.offsetParent.css( "position" );\n\n		//The element\'s absolute position on the page minus margins\n		this.offset = this.positionAbs = this.element.offset();\n		this.offset = {\n			top: this.offset.top - this.margins.top,\n			left: this.offset.left - this.margins.left\n		};\n\n		//Reset scroll cache\n		this.offset.scroll = false;\n\n		$.extend(this.offset, {\n			click: { //Where the click happened, relative to the element\n				left: event.pageX - this.offset.left,\n				top: event.pageY - this.offset.top\n			},\n			parent: this._getParentOffset(),\n			relative: this._getRelativeOffset() //This is a relative to absolute position minus the actual position calculation - only used for relative positioned helper\n		});\n\n		//Generate the original position\n		this.originalPosition = this.position = this._generatePosition(event);\n		this.originalPageX = event.pageX;\n		this.originalPageY = event.pageY;\n\n		//Adjust the mouse offset relative to the helper if "cursorAt" is supplied\n		(o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt));\n\n		//Set a containment if given in the options\n		this._setContainment();\n\n		//Trigger event + callbacks\n		if(this._trigger("start", event) === false) {\n			this._clear();\n			return false;\n		}\n\n		//Recache the helper size\n		this._cacheHelperProportions();\n\n		//Prepare the droppable offsets\n		if ($.ui.ddmanager && !o.dropBehaviour) {\n			$.ui.ddmanager.prepareOffsets(this, event);\n		}\n\n\n		this._mouseDrag(event, true); //Execute the drag once - this causes the helper not to be visible before getting its correct position\n\n		//If the ddmanager is used for droppables, inform the manager that dragging has started (see #5003)\n		if ( $.ui.ddmanager ) {\n			$.ui.ddmanager.dragStart(this, event);\n		}\n\n		return true;\n	},\n\n	_mouseDrag: function(event, noPropagation) {\n		// reset any necessary cached properties (see #5009)\n		if ( this.offsetParentCssPosition === "fixed" ) {\n			this.offset.parent = this._getParentOffset();\n		}\n\n		//Compute the helpers position\n		this.position = this._generatePosition(event);\n		this.positionAbs = this._convertPositionTo("absolute");\n\n		//Call plugins and callbacks and use the resulting position if something is returned\n		if (!noPropagation) {\n			var ui = this._uiHash();\n			if(this._trigger("drag", event, ui) === false) {\n				this._mouseUp({});\n				return false;\n			}\n			this.position = ui.position;\n		}\n\n		if(!this.options.axis || this.options.axis !== "y") {\n			this.helper[0].style.left = this.position.left+"px";\n		}\n		if(!this.options.axis || this.options.axis !== "x") {\n			this.helper[0].style.top = this.position.top+"px";\n		}\n		if($.ui.ddmanager) {\n			$.ui.ddmanager.drag(this, event);\n		}\n\n		return false;\n	},\n\n	_mouseStop: function(event) {\n\n		//If we are using droppables, inform the manager about the drop\n		var that = this,\n			dropped = false;\n		if ($.ui.ddmanager && !this.options.dropBehaviour) {\n			dropped = $.ui.ddmanager.drop(this, event);\n		}\n\n		//if a drop comes from outside (a sortable)\n		if(this.dropped) {\n			dropped = this.dropped;\n			this.dropped = false;\n		}\n\n		//if the original element is no longer in the DOM don\'t bother to continue (see #8269)\n		if ( this.options.helper === "original" && !$.contains( this.element[ 0 ].ownerDocument, this.element[ 0 ] ) ) {\n			return false;\n		}\n\n		if((this.options.revert === "invalid" && !dropped) || (this.options.revert === "valid" && dropped) || this.options.revert === true || ($.isFunction(this.options.revert) && this.options.revert.call(this.element, dropped))) {\n			$(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {\n				if(that._trigger("stop", event) !== false) {\n					that._clear();\n				}\n			});\n		} else {\n			if(this._trigger("stop", event) !== false) {\n				this._clear();\n			}\n		}\n\n		return false;\n	},\n\n	_mouseUp: function(event) {\n		//Remove frame helpers\n		$("div.ui-draggable-iframeFix").each(function() {\n			this.parentNode.removeChild(this);\n		});\n\n		//If the ddmanager is used for droppables, inform the manager that dragging has stopped (see #5003)\n		if( $.ui.ddmanager ) {\n			$.ui.ddmanager.dragStop(this, event);\n		}\n\n		return $.ui.mouse.prototype._mouseUp.call(this, event);\n	},\n\n	cancel: function() {\n\n		if(this.helper.is(".ui-draggable-dragging")) {\n			this._mouseUp({});\n		} else {\n			this._clear();\n		}\n\n		return this;\n\n	},\n\n	_getHandle: function(event) {\n		return this.options.handle ?\n			!!$( event.target ).closest( this.element.find( this.options.handle ) ).length :\n			true;\n	},\n\n	_createHelper: function(event) {\n\n		var o = this.options,\n			helper = $.isFunction(o.helper) ? $(o.helper.apply(this.element[0], [event])) : (o.helper === "clone" ? this.element.clone().removeAttr("id") : this.element);\n\n		if(!helper.parents("body").length) {\n			helper.appendTo((o.appendTo === "parent" ? this.element[0].parentNode : o.appendTo));\n		}\n\n		if(helper[0] !== this.element[0] && !(/(fixed|absolute)/).test(helper.css("position"))) {\n			helper.css("position", "absolute");\n		}\n\n		return helper;\n\n	},\n\n	_adjustOffsetFromHelper: function(obj) {\n		if (typeof obj === "string") {\n			obj = obj.split(" ");\n		}\n		if ($.isArray(obj)) {\n			obj = {left: +obj[0], top: +obj[1] || 0};\n		}\n		if ("left" in obj) {\n			this.offset.click.left = obj.left + this.margins.left;\n		}\n		if ("right" in obj) {\n			this.offset.click.left = this.helperProportions.width - obj.right + this.margins.left;\n		}\n		if ("top" in obj) {\n			this.offset.click.top = obj.top + this.margins.top;\n		}\n		if ("bottom" in obj) {\n			this.offset.click.top = this.helperProportions.height - obj.bottom + this.margins.top;\n		}\n	},\n\n	_getParentOffset: function() {\n\n		//Get the offsetParent and cache its position\n		var po = this.offsetParent.offset();\n\n		// This is a special case where we need to modify a offset calculated on start, since the following happened:\n		// 1. The position of the helper is absolute, so it\'s position is calculated based on the next positioned parent\n		// 2. The actual offset parent is a child of the scroll parent, and the scroll parent isn\'t the document, which means that\n		//    the scroll is included in the initial calculation of the offset of the parent, and never recalculated upon drag\n		if(this.cssPosition === "absolute" && this.scrollParent[0] !== document && $.contains(this.scrollParent[0], this.offsetParent[0])) {\n			po.left += this.scrollParent.scrollLeft();\n			po.top += this.scrollParent.scrollTop();\n		}\n\n		//This needs to be actually done for all browsers, since pageX/pageY includes this information\n		//Ugly IE fix\n		if((this.offsetParent[0] === document.body) ||\n			(this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() === "html" && $.ui.ie)) {\n			po = { top: 0, left: 0 };\n		}\n\n		return {\n			top: po.top + (parseInt(this.offsetParent.css("borderTopWidth"),10) || 0),\n			left: po.left + (parseInt(this.offsetParent.css("borderLeftWidth"),10) || 0)\n		};\n\n	},\n\n	_getRelativeOffset: function() {\n\n		if(this.cssPosition === "relative") {\n			var p = this.element.position();\n			return {\n				top: p.top - (parseInt(this.helper.css("top"),10) || 0) + this.scrollParent.scrollTop(),\n				left: p.left - (parseInt(this.helper.css("left"),10) || 0) + this.scrollParent.scrollLeft()\n			};\n		} else {\n			return { top: 0, left: 0 };\n		}\n\n	},\n\n	_cacheMargins: function() {\n		this.margins = {\n			left: (parseInt(this.element.css("marginLeft"),10) || 0),\n			top: (parseInt(this.element.css("marginTop"),10) || 0),\n			right: (parseInt(this.element.css("marginRight"),10) || 0),\n			bottom: (parseInt(this.element.css("marginBottom"),10) || 0)\n		};\n	},\n\n	_cacheHelperProportions: function() {\n		this.helperProportions = {\n			width: this.helper.outerWidth(),\n			height: this.helper.outerHeight()\n		};\n	},\n\n	_setContainment: function() {\n\n		var over, c, ce,\n			o = this.options;\n\n		if ( !o.containment ) {\n			this.containment = null;\n			return;\n		}\n\n		if ( o.containment === "window" ) {\n			this.containment = [\n				$( window ).scrollLeft() - this.offset.relative.left - this.offset.parent.left,\n				$( window ).scrollTop() - this.offset.relative.top - this.offset.parent.top,\n				$( window ).scrollLeft() + $( window ).width() - this.helperProportions.width - this.margins.left,\n				$( window ).scrollTop() + ( $( window ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top\n			];\n			return;\n		}\n\n		if ( o.containment === "document") {\n			this.containment = [\n				0,\n				0,\n				$( document ).width() - this.helperProportions.width - this.margins.left,\n				( $( document ).height() || document.body.parentNode.scrollHeight ) - this.helperProportions.height - this.margins.top\n			];\n			return;\n		}\n\n		if ( o.containment.constructor === Array ) {\n			this.containment = o.containment;\n			return;\n		}\n\n		if ( o.containment === "parent" ) {\n			o.containment = this.helper[ 0 ].parentNode;\n		}\n\n		c = $( o.containment );\n		ce = c[ 0 ];\n\n		if( !ce ) {\n			return;\n		}\n\n		over = c.css( "overflow" ) !== "hidden";\n\n		this.containment = [\n			( parseInt( c.css( "borderLeftWidth" ), 10 ) || 0 ) + ( parseInt( c.css( "paddingLeft" ), 10 ) || 0 ),\n			( parseInt( c.css( "borderTopWidth" ), 10 ) || 0 ) + ( parseInt( c.css( "paddingTop" ), 10 ) || 0 ) ,\n			( over ? Math.max( ce.scrollWidth, ce.offsetWidth ) : ce.offsetWidth ) - ( parseInt( c.css( "borderRightWidth" ), 10 ) || 0 ) - ( parseInt( c.css( "paddingRight" ), 10 ) || 0 ) - this.helperProportions.width - this.margins.left - this.margins.right,\n			( over ? Math.max( ce.scrollHeight, ce.offsetHeight ) : ce.offsetHeight ) - ( parseInt( c.css( "borderBottomWidth" ), 10 ) || 0 ) - ( parseInt( c.css( "paddingBottom" ), 10 ) || 0 ) - this.helperProportions.height - this.margins.top  - this.margins.bottom\n		];\n		this.relative_container = c;\n	},\n\n	_convertPositionTo: function(d, pos) {\n\n		if(!pos) {\n			pos = this.position;\n		}\n\n		var mod = d === "absolute" ? 1 : -1,\n			scroll = this.cssPosition === "absolute" && !( this.scrollParent[ 0 ] !== document && $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ? this.offsetParent : this.scrollParent;\n\n		//Cache the scroll\n		if (!this.offset.scroll) {\n			this.offset.scroll = {top : scroll.scrollTop(), left : scroll.scrollLeft()};\n		}\n\n		return {\n			top: (\n				pos.top	+																// The absolute mouse position\n				this.offset.relative.top * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent\n				this.offset.parent.top * mod -										// The offsetParent\'s offset without borders (offset + border)\n				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top ) * mod )\n			),\n			left: (\n				pos.left +																// The absolute mouse position\n				this.offset.relative.left * mod +										// Only for relative positioned nodes: Relative offset from element to offset parent\n				this.offset.parent.left * mod	-										// The offsetParent\'s offset without borders (offset + border)\n				( ( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left ) * mod )\n			)\n		};\n\n	},\n\n	_generatePosition: function(event) {\n\n		var containment, co, top, left,\n			o = this.options,\n			scroll = this.cssPosition === "absolute" && !( this.scrollParent[ 0 ] !== document && $.contains( this.scrollParent[ 0 ], this.offsetParent[ 0 ] ) ) ? this.offsetParent : this.scrollParent,\n			pageX = event.pageX,\n			pageY = event.pageY;\n\n		//Cache the scroll\n		if (!this.offset.scroll) {\n			this.offset.scroll = {top : scroll.scrollTop(), left : scroll.scrollLeft()};\n		}\n\n		/*\n		 * - Position constraining -\n		 * Constrain the position to a mix of grid, containment.\n		 */\n\n		// If we are not dragging yet, we won\'t check for options\n		if ( this.originalPosition ) {\n			if ( this.containment ) {\n				if ( this.relative_container ){\n					co = this.relative_container.offset();\n					containment = [\n						this.containment[ 0 ] + co.left,\n						this.containment[ 1 ] + co.top,\n						this.containment[ 2 ] + co.left,\n						this.containment[ 3 ] + co.top\n					];\n				}\n				else {\n					containment = this.containment;\n				}\n\n				if(event.pageX - this.offset.click.left < containment[0]) {\n					pageX = containment[0] + this.offset.click.left;\n				}\n				if(event.pageY - this.offset.click.top < containment[1]) {\n					pageY = containment[1] + this.offset.click.top;\n				}\n				if(event.pageX - this.offset.click.left > containment[2]) {\n					pageX = containment[2] + this.offset.click.left;\n				}\n				if(event.pageY - this.offset.click.top > containment[3]) {\n					pageY = containment[3] + this.offset.click.top;\n				}\n			}\n\n			if(o.grid) {\n				//Check for grid elements set to 0 to prevent divide by 0 error causing invalid argument errors in IE (see ticket #6950)\n				top = o.grid[1] ? this.originalPageY + Math.round((pageY - this.originalPageY) / o.grid[1]) * o.grid[1] : this.originalPageY;\n				pageY = containment ? ((top - this.offset.click.top >= containment[1] || top - this.offset.click.top > containment[3]) ? top : ((top - this.offset.click.top >= containment[1]) ? top - o.grid[1] : top + o.grid[1])) : top;\n\n				left = o.grid[0] ? this.originalPageX + Math.round((pageX - this.originalPageX) / o.grid[0]) * o.grid[0] : this.originalPageX;\n				pageX = containment ? ((left - this.offset.click.left >= containment[0] || left - this.offset.click.left > containment[2]) ? left : ((left - this.offset.click.left >= containment[0]) ? left - o.grid[0] : left + o.grid[0])) : left;\n			}\n\n		}\n\n		return {\n			top: (\n				pageY -																	// The absolute mouse position\n				this.offset.click.top	-												// Click offset (relative to the element)\n				this.offset.relative.top -												// Only for relative positioned nodes: Relative offset from element to offset parent\n				this.offset.parent.top +												// The offsetParent\'s offset without borders (offset + border)\n				( this.cssPosition === "fixed" ? -this.scrollParent.scrollTop() : this.offset.scroll.top )\n			),\n			left: (\n				pageX -																	// The absolute mouse position\n				this.offset.click.left -												// Click offset (relative to the element)\n				this.offset.relative.left -												// Only for relative positioned nodes: Relative offset from element to offset parent\n				this.offset.parent.left +												// The offsetParent\'s offset without borders (offset + border)\n				( this.cssPosition === "fixed" ? -this.scrollParent.scrollLeft() : this.offset.scroll.left )\n			)\n		};\n\n	},\n\n	_clear: function() {\n		this.helper.removeClass("ui-draggable-dragging");\n		if(this.helper[0] !== this.element[0] && !this.cancelHelperRemoval) {\n			this.helper.remove();\n		}\n		this.helper = null;\n		this.cancelHelperRemoval = false;\n	},\n\n	// From now on bulk stuff - mainly helpers\n\n	_trigger: function(type, event, ui) {\n		ui = ui || this._uiHash();\n		$.ui.plugin.call(this, type, [event, ui]);\n		//The absolute position has to be recalculated after plugins\n		if(type === "drag") {\n			this.positionAbs = this._convertPositionTo("absolute");\n		}\n		return $.Widget.prototype._trigger.call(this, type, event, ui);\n	},\n\n	plugins: {},\n\n	_uiHash: function() {\n		return {\n			helper: this.helper,\n			position: this.position,\n			originalPosition: this.originalPosition,\n			offset: this.positionAbs\n		};\n	}\n\n});\n\n$.ui.plugin.add("draggable", "connectToSortable", {\n	start: function(event, ui) {\n\n		var inst = $(this).data("ui-draggable"), o = inst.options,\n			uiSortable = $.extend({}, ui, { item: inst.element });\n		inst.sortables = [];\n		$(o.connectToSortable).each(function() {\n			var sortable = $.data(this, "ui-sortable");\n			if (sortable && !sortable.options.disabled) {\n				inst.sortables.push({\n					instance: sortable,\n					shouldRevert: sortable.options.revert\n				});\n				sortable.refreshPositions();	// Call the sortable\'s refreshPositions at drag start to refresh the containerCache since the sortable container cache is used in drag and needs to be up to date (this will ensure it\'s initialised as well as being kept in step with any changes that might have happened on the page).\n				sortable._trigger("activate", event, uiSortable);\n			}\n		});\n\n	},\n	stop: function(event, ui) {\n\n		//If we are still over the sortable, we fake the stop event of the sortable, but also remove helper\n		var inst = $(this).data("ui-draggable"),\n			uiSortable = $.extend({}, ui, { item: inst.element });\n\n		$.each(inst.sortables, function() {\n			if(this.instance.isOver) {\n\n				this.instance.isOver = 0;\n\n				inst.cancelHelperRemoval = true; //Don\'t remove the helper in the draggable instance\n				this.instance.cancelHelperRemoval = false; //Remove it in the sortable instance (so sortable plugins like revert still work)\n\n				//The sortable revert is supported, and we have to set a temporary dropped variable on the draggable to support revert: "valid/invalid"\n				if(this.shouldRevert) {\n					this.instance.options.revert = this.shouldRevert;\n				}\n\n				//Trigger the stop of the sortable\n				this.instance._mouseStop(event);\n\n				this.instance.options.helper = this.instance.options._helper;\n\n				//If the helper has been the original item, restore properties in the sortable\n				if(inst.options.helper === "original") {\n					this.instance.currentItem.css({ top: "auto", left: "auto" });\n				}\n\n			} else {\n				this.instance.cancelHelperRemoval = false; //Remove the helper in the sortable instance\n				this.instance._trigger("deactivate", event, uiSortable);\n			}\n\n		});\n\n	},\n	drag: function(event, ui) {\n\n		var inst = $(this).data("ui-draggable"), that = this;\n\n		$.each(inst.sortables, function() {\n\n			var innermostIntersecting = false,\n				thisSortable = this;\n\n			//Copy over some variables to allow calling the sortable\'s native _intersectsWith\n			this.instance.positionAbs = inst.positionAbs;\n			this.instance.helperProportions = inst.helperProportions;\n			this.instance.offset.click = inst.offset.click;\n\n			if(this.instance._intersectsWith(this.instance.containerCache)) {\n				innermostIntersecting = true;\n				$.each(inst.sortables, function () {\n					this.instance.positionAbs = inst.positionAbs;\n					this.instance.helperProportions = inst.helperProportions;\n					this.instance.offset.click = inst.offset.click;\n					if (this !== thisSortable &&\n						this.instance._intersectsWith(this.instance.containerCache) &&\n						$.contains(thisSortable.instance.element[0], this.instance.element[0])\n					) {\n						innermostIntersecting = false;\n					}\n					return innermostIntersecting;\n				});\n			}\n\n\n			if(innermostIntersecting) {\n				//If it intersects, we use a little isOver variable and set it once, so our move-in stuff gets fired only once\n				if(!this.instance.isOver) {\n\n					this.instance.isOver = 1;\n					//Now we fake the start of dragging for the sortable instance,\n					//by cloning the list group item, appending it to the sortable and using it as inst.currentItem\n					//We can then fire the start event of the sortable with our passed browser event, and our own helper (so it doesn\'t create a new one)\n					this.instance.currentItem = $(that).clone().removeAttr("id").appendTo(this.instance.element).data("ui-sortable-item", true);\n					this.instance.options._helper = this.instance.options.helper; //Store helper option to later restore it\n					this.instance.options.helper = function() { return ui.helper[0]; };\n\n					event.target = this.instance.currentItem[0];\n					this.instance._mouseCapture(event, true);\n					this.instance._mouseStart(event, true, true);\n\n					//Because the browser event is way off the new appended portlet, we modify a couple of variables to reflect the changes\n					this.instance.offset.click.top = inst.offset.click.top;\n					this.instance.offset.click.left = inst.offset.click.left;\n					this.instance.offset.parent.left -= inst.offset.parent.left - this.instance.offset.parent.left;\n					this.instance.offset.parent.top -= inst.offset.parent.top - this.instance.offset.parent.top;\n\n					inst._trigger("toSortable", event);\n					inst.dropped = this.instance.element; //draggable revert needs that\n					//hack so receive/update callbacks work (mostly)\n					inst.currentItem = inst.element;\n					this.instance.fromOutside = inst;\n\n				}\n\n				//Provided we did all the previous steps, we can fire the drag event of the sortable on every draggable drag, when it intersects with the sortable\n				if(this.instance.currentItem) {\n					this.instance._mouseDrag(event);\n				}\n\n			} else {\n\n				//If it doesn\'t intersect with the sortable, and it intersected before,\n				//we fake the drag stop of the sortable, but make sure it doesn\'t remove the helper by using cancelHelperRemoval\n				if(this.instance.isOver) {\n\n					this.instance.isOver = 0;\n					this.instance.cancelHelperRemoval = true;\n\n					//Prevent reverting on this forced stop\n					this.instance.options.revert = false;\n\n					// The out event needs to be triggered independently\n					this.instance._trigger("out", event, this.instance._uiHash(this.instance));\n\n					this.instance._mouseStop(event, true);\n					this.instance.options.helper = this.instance.options._helper;\n\n					//Now we remove our currentItem, the list group clone again, and the placeholder, and animate the helper back to it\'s original size\n					this.instance.currentItem.remove();\n					if(this.instance.placeholder) {\n						this.instance.placeholder.remove();\n					}\n\n					inst._trigger("fromSortable", event);\n					inst.dropped = false; //draggable revert needs that\n				}\n\n			}\n\n		});\n\n	}\n});\n\n$.ui.plugin.add("draggable", "cursor", {\n	start: function() {\n		var t = $("body"), o = $(this).data("ui-draggable").options;\n		if (t.css("cursor")) {\n			o._cursor = t.css("cursor");\n		}\n		t.css("cursor", o.cursor);\n	},\n	stop: function() {\n		var o = $(this).data("ui-draggable").options;\n		if (o._cursor) {\n			$("body").css("cursor", o._cursor);\n		}\n	}\n});\n\n$.ui.plugin.add("draggable", "opacity", {\n	start: function(event, ui) {\n		var t = $(ui.helper), o = $(this).data("ui-draggable").options;\n		if(t.css("opacity")) {\n			o._opacity = t.css("opacity");\n		}\n		t.css("opacity", o.opacity);\n	},\n	stop: function(event, ui) {\n		var o = $(this).data("ui-draggable").options;\n		if(o._opacity) {\n			$(ui.helper).css("opacity", o._opacity);\n		}\n	}\n});\n\n$.ui.plugin.add("draggable", "scroll", {\n	start: function() {\n		var i = $(this).data("ui-draggable");\n		if(i.scrollParent[0] !== document && i.scrollParent[0].tagName !== "HTML") {\n			i.overflowOffset = i.scrollParent.offset();\n		}\n	},\n	drag: function( event ) {\n\n		var i = $(this).data("ui-draggable"), o = i.options, scrolled = false;\n\n		if(i.scrollParent[0] !== document && i.scrollParent[0].tagName !== "HTML") {\n\n			if(!o.axis || o.axis !== "x") {\n				if((i.overflowOffset.top + i.scrollParent[0].offsetHeight) - event.pageY < o.scrollSensitivity) {\n					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop + o.scrollSpeed;\n				} else if(event.pageY - i.overflowOffset.top < o.scrollSensitivity) {\n					i.scrollParent[0].scrollTop = scrolled = i.scrollParent[0].scrollTop - o.scrollSpeed;\n				}\n			}\n\n			if(!o.axis || o.axis !== "y") {\n				if((i.overflowOffset.left + i.scrollParent[0].offsetWidth) - event.pageX < o.scrollSensitivity) {\n					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft + o.scrollSpeed;\n				} else if(event.pageX - i.overflowOffset.left < o.scrollSensitivity) {\n					i.scrollParent[0].scrollLeft = scrolled = i.scrollParent[0].scrollLeft - o.scrollSpeed;\n				}\n			}\n\n		} else {\n\n			if(!o.axis || o.axis !== "x") {\n				if(event.pageY - $(document).scrollTop() < o.scrollSensitivity) {\n					scrolled = $(document).scrollTop($(document).scrollTop() - o.scrollSpeed);\n				} else if($(window).height() - (event.pageY - $(document).scrollTop()) < o.scrollSensitivity) {\n					scrolled = $(document).scrollTop($(document).scrollTop() + o.scrollSpeed);\n				}\n			}\n\n			if(!o.axis || o.axis !== "y") {\n				if(event.pageX - $(document).scrollLeft() < o.scrollSensitivity) {\n					scrolled = $(document).scrollLeft($(document).scrollLeft() - o.scrollSpeed);\n				} else if($(window).width() - (event.pageX - $(document).scrollLeft()) < o.scrollSensitivity) {\n					scrolled = $(document).scrollLeft($(document).scrollLeft() + o.scrollSpeed);\n				}\n			}\n\n		}\n\n		if(scrolled !== false && $.ui.ddmanager && !o.dropBehaviour) {\n			$.ui.ddmanager.prepareOffsets(i, event);\n		}\n\n	}\n});\n\n$.ui.plugin.add("draggable", "snap", {\n	start: function() {\n\n		var i = $(this).data("ui-draggable"),\n			o = i.options;\n\n		i.snapElements = [];\n\n		$(o.snap.constructor !== String ? ( o.snap.items || ":data(ui-draggable)" ) : o.snap).each(function() {\n			var $t = $(this),\n				$o = $t.offset();\n			if(this !== i.element[0]) {\n				i.snapElements.push({\n					item: this,\n					width: $t.outerWidth(), height: $t.outerHeight(),\n					top: $o.top, left: $o.left\n				});\n			}\n		});\n\n	},\n	drag: function(event, ui) {\n\n		var ts, bs, ls, rs, l, r, t, b, i, first,\n			inst = $(this).data("ui-draggable"),\n			o = inst.options,\n			d = o.snapTolerance,\n			x1 = ui.offset.left, x2 = x1 + inst.helperProportions.width,\n			y1 = ui.offset.top, y2 = y1 + inst.helperProportions.height;\n\n		for (i = inst.snapElements.length - 1; i >= 0; i--){\n\n			l = inst.snapElements[i].left;\n			r = l + inst.snapElements[i].width;\n			t = inst.snapElements[i].top;\n			b = t + inst.snapElements[i].height;\n\n			if ( x2 < l - d || x1 > r + d || y2 < t - d || y1 > b + d || !$.contains( inst.snapElements[ i ].item.ownerDocument, inst.snapElements[ i ].item ) ) {\n				if(inst.snapElements[i].snapping) {\n					(inst.options.snap.release && inst.options.snap.release.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));\n				}\n				inst.snapElements[i].snapping = false;\n				continue;\n			}\n\n			if(o.snapMode !== "inner") {\n				ts = Math.abs(t - y2) <= d;\n				bs = Math.abs(b - y1) <= d;\n				ls = Math.abs(l - x2) <= d;\n				rs = Math.abs(r - x1) <= d;\n				if(ts) {\n					ui.position.top = inst._convertPositionTo("relative", { top: t - inst.helperProportions.height, left: 0 }).top - inst.margins.top;\n				}\n				if(bs) {\n					ui.position.top = inst._convertPositionTo("relative", { top: b, left: 0 }).top - inst.margins.top;\n				}\n				if(ls) {\n					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l - inst.helperProportions.width }).left - inst.margins.left;\n				}\n				if(rs) {\n					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r }).left - inst.margins.left;\n				}\n			}\n\n			first = (ts || bs || ls || rs);\n\n			if(o.snapMode !== "outer") {\n				ts = Math.abs(t - y1) <= d;\n				bs = Math.abs(b - y2) <= d;\n				ls = Math.abs(l - x1) <= d;\n				rs = Math.abs(r - x2) <= d;\n				if(ts) {\n					ui.position.top = inst._convertPositionTo("relative", { top: t, left: 0 }).top - inst.margins.top;\n				}\n				if(bs) {\n					ui.position.top = inst._convertPositionTo("relative", { top: b - inst.helperProportions.height, left: 0 }).top - inst.margins.top;\n				}\n				if(ls) {\n					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: l }).left - inst.margins.left;\n				}\n				if(rs) {\n					ui.position.left = inst._convertPositionTo("relative", { top: 0, left: r - inst.helperProportions.width }).left - inst.margins.left;\n				}\n			}\n\n			if(!inst.snapElements[i].snapping && (ts || bs || ls || rs || first)) {\n				(inst.options.snap.snap && inst.options.snap.snap.call(inst.element, event, $.extend(inst._uiHash(), { snapItem: inst.snapElements[i].item })));\n			}\n			inst.snapElements[i].snapping = (ts || bs || ls || rs || first);\n\n		}\n\n	}\n});\n\n$.ui.plugin.add("draggable", "stack", {\n	start: function() {\n		var min,\n			o = this.data("ui-draggable").options,\n			group = $.makeArray($(o.stack)).sort(function(a,b) {\n				return (parseInt($(a).css("zIndex"),10) || 0) - (parseInt($(b).css("zIndex"),10) || 0);\n			});\n\n		if (!group.length) { return; }\n\n		min = parseInt($(group[0]).css("zIndex"), 10) || 0;\n		$(group).each(function(i) {\n			$(this).css("zIndex", min + i);\n		});\n		this.css("zIndex", (min + group.length));\n	}\n});\n\n$.ui.plugin.add("draggable", "zIndex", {\n	start: function(event, ui) {\n		var t = $(ui.helper), o = $(this).data("ui-draggable").options;\n		if(t.css("zIndex")) {\n			o._zIndex = t.css("zIndex");\n		}\n		t.css("zIndex", o.zIndex);\n	},\n	stop: function(event, ui) {\n		var o = $(this).data("ui-draggable").options;\n		if(o._zIndex) {\n			$(ui.helper).css("zIndex", o._zIndex);\n		}\n	}\n});\n\n})(jQuery);\n(function( $, undefined ) {\n\nfunction num(v) {\n	return parseInt(v, 10) || 0;\n}\n\nfunction isNumber(value) {\n	return !isNaN(parseInt(value, 10));\n}\n\n$.widget("ui.resizable", $.ui.mouse, {\n	version: "1.10.4",\n	widgetEventPrefix: "resize",\n	options: {\n		alsoResize: false,\n		animate: false,\n		animateDuration: "slow",\n		animateEasing: "swing",\n		aspectRatio: false,\n		autoHide: false,\n		containment: false,\n		ghost: false,\n		grid: false,\n		handles: "e,s,se",\n		helper: false,\n		maxHeight: null,\n		maxWidth: null,\n		minHeight: 10,\n		minWidth: 10,\n		// See #7960\n		zIndex: 90,\n\n		// callbacks\n		resize: null,\n		start: null,\n		stop: null\n	},\n	_create: function() {\n\n		var n, i, handle, axis, hname,\n			that = this,\n			o = this.options;\n		this.element.addClass("ui-resizable");\n\n		$.extend(this, {\n			_aspectRatio: !!(o.aspectRatio),\n			aspectRatio: o.aspectRatio,\n			originalElement: this.element,\n			_proportionallyResizeElements: [],\n			_helper: o.helper || o.ghost || o.animate ? o.helper || "ui-resizable-helper" : null\n		});\n\n		//Wrap the element if it cannot hold child nodes\n		if(this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {\n\n			//Create a wrapper element and set the wrapper to the new current internal element\n			this.element.wrap(\n				$("<div class=\'ui-wrapper\' style=\'overflow: hidden;\'></div>").css({\n					position: this.element.css("position"),\n					width: this.element.outerWidth(),\n					height: this.element.outerHeight(),\n					top: this.element.css("top"),\n					left: this.element.css("left")\n				})\n			);\n\n			//Overwrite the original this.element\n			this.element = this.element.parent().data(\n				"ui-resizable", this.element.data("ui-resizable")\n			);\n\n			this.elementIsWrapper = true;\n\n			//Move margins to the wrapper\n			this.element.css({ marginLeft: this.originalElement.css("marginLeft"), marginTop: this.originalElement.css("marginTop"), marginRight: this.originalElement.css("marginRight"), marginBottom: this.originalElement.css("marginBottom") });\n			this.originalElement.css({ marginLeft: 0, marginTop: 0, marginRight: 0, marginBottom: 0});\n\n			//Prevent Safari textarea resize\n			this.originalResizeStyle = this.originalElement.css("resize");\n			this.originalElement.css("resize", "none");\n\n			//Push the actual element to our proportionallyResize internal array\n			this._proportionallyResizeElements.push(this.originalElement.css({ position: "static", zoom: 1, display: "block" }));\n\n			// avoid IE jump (hard set the margin)\n			this.originalElement.css({ margin: this.originalElement.css("margin") });\n\n			// fix handlers offset\n			this._proportionallyResize();\n\n		}\n\n		this.handles = o.handles || (!$(".ui-resizable-handle", this.element).length ? "e,s,se" : { n: ".ui-resizable-n", e: ".ui-resizable-e", s: ".ui-resizable-s", w: ".ui-resizable-w", se: ".ui-resizable-se", sw: ".ui-resizable-sw", ne: ".ui-resizable-ne", nw: ".ui-resizable-nw" });\n		if(this.handles.constructor === String) {\n\n			if ( this.handles === "all") {\n				this.handles = "n,e,s,w,se,sw,ne,nw";\n			}\n\n			n = this.handles.split(",");\n			this.handles = {};\n\n			for(i = 0; i < n.length; i++) {\n\n				handle = $.trim(n[i]);\n				hname = "ui-resizable-"+handle;\n				axis = $("<div class=\'ui-resizable-handle " + hname + "\'></div>");\n\n				// Apply zIndex to all handles - see #7960\n				axis.css({ zIndex: o.zIndex });\n\n				//TODO : What\'s going on here?\n				if ("se" === handle) {\n					axis.addClass("ui-icon ui-icon-gripsmall-diagonal-se");\n				}\n\n				//Insert into internal handles object and append to element\n				this.handles[handle] = ".ui-resizable-"+handle;\n				this.element.append(axis);\n			}\n\n		}\n\n		this._renderAxis = function(target) {\n\n			var i, axis, padPos, padWrapper;\n\n			target = target || this.element;\n\n			for(i in this.handles) {\n\n				if(this.handles[i].constructor === String) {\n					this.handles[i] = $(this.handles[i], this.element).show();\n				}\n\n				//Apply pad to wrapper element, needed to fix axis position (textarea, inputs, scrolls)\n				if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {\n\n					axis = $(this.handles[i], this.element);\n\n					//Checking the correct pad and border\n					padWrapper = /sw|ne|nw|se|n|s/.test(i) ? axis.outerHeight() : axis.outerWidth();\n\n					//The padding type i have to apply...\n					padPos = [ "padding",\n						/ne|nw|n/.test(i) ? "Top" :\n						/se|sw|s/.test(i) ? "Bottom" :\n						/^e$/.test(i) ? "Right" : "Left" ].join("");\n\n					target.css(padPos, padWrapper);\n\n					this._proportionallyResize();\n\n				}\n\n				//TODO: What\'s that good for? There\'s not anything to be executed left\n				if(!$(this.handles[i]).length) {\n					continue;\n				}\n			}\n		};\n\n		//TODO: make renderAxis a prototype function\n		this._renderAxis(this.element);\n\n		this._handles = $(".ui-resizable-handle", this.element)\n			.disableSelection();\n\n		//Matching axis name\n		this._handles.mouseover(function() {\n			if (!that.resizing) {\n				if (this.className) {\n					axis = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i);\n				}\n				//Axis, default = se\n				that.axis = axis && axis[1] ? axis[1] : "se";\n			}\n		});\n\n		//If we want to auto hide the elements\n		if (o.autoHide) {\n			this._handles.hide();\n			$(this.element)\n				.addClass("ui-resizable-autohide")\n				.mouseenter(function() {\n					if (o.disabled) {\n						return;\n					}\n					$(this).removeClass("ui-resizable-autohide");\n					that._handles.show();\n				})\n				.mouseleave(function(){\n					if (o.disabled) {\n						return;\n					}\n					if (!that.resizing) {\n						$(this).addClass("ui-resizable-autohide");\n						that._handles.hide();\n					}\n				});\n		}\n\n		//Initialize the mouse interaction\n		this._mouseInit();\n\n	},\n\n	_destroy: function() {\n\n		this._mouseDestroy();\n\n		var wrapper,\n			_destroy = function(exp) {\n				$(exp).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing")\n					.removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove();\n			};\n\n		//TODO: Unwrap at same DOM position\n		if (this.elementIsWrapper) {\n			_destroy(this.element);\n			wrapper = this.element;\n			this.originalElement.css({\n				position: wrapper.css("position"),\n				width: wrapper.outerWidth(),\n				height: wrapper.outerHeight(),\n				top: wrapper.css("top"),\n				left: wrapper.css("left")\n			}).insertAfter( wrapper );\n			wrapper.remove();\n		}\n\n		this.originalElement.css("resize", this.originalResizeStyle);\n		_destroy(this.originalElement);\n\n		return this;\n	},\n\n	_mouseCapture: function(event) {\n		var i, handle,\n			capture = false;\n\n		for (i in this.handles) {\n			handle = $(this.handles[i])[0];\n			if (handle === event.target || $.contains(handle, event.target)) {\n				capture = true;\n			}\n		}\n\n		return !this.options.disabled && capture;\n	},\n\n	_mouseStart: function(event) {\n\n		var curleft, curtop, cursor,\n			o = this.options,\n			iniPos = this.element.position(),\n			el = this.element;\n\n		this.resizing = true;\n\n		// bugfix for http://dev.jquery.com/ticket/1749\n		if ( (/absolute/).test( el.css("position") ) ) {\n			el.css({ position: "absolute", top: el.css("top"), left: el.css("left") });\n		} else if (el.is(".ui-draggable")) {\n			el.css({ position: "absolute", top: iniPos.top, left: iniPos.left });\n		}\n\n		this._renderProxy();\n\n		curleft = num(this.helper.css("left"));\n		curtop = num(this.helper.css("top"));\n\n		if (o.containment) {\n			curleft += $(o.containment).scrollLeft() || 0;\n			curtop += $(o.containment).scrollTop() || 0;\n		}\n\n		//Store needed variables\n		this.offset = this.helper.offset();\n		this.position = { left: curleft, top: curtop };\n		this.size = this._helper ? { width: this.helper.width(), height: this.helper.height() } : { width: el.width(), height: el.height() };\n		this.originalSize = this._helper ? { width: el.outerWidth(), height: el.outerHeight() } : { width: el.width(), height: el.height() };\n		this.originalPosition = { left: curleft, top: curtop };\n		this.sizeDiff = { width: el.outerWidth() - el.width(), height: el.outerHeight() - el.height() };\n		this.originalMousePosition = { left: event.pageX, top: event.pageY };\n\n		//Aspect Ratio\n		this.aspectRatio = (typeof o.aspectRatio === "number") ? o.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);\n\n		cursor = $(".ui-resizable-" + this.axis).css("cursor");\n		$("body").css("cursor", cursor === "auto" ? this.axis + "-resize" : cursor);\n\n		el.addClass("ui-resizable-resizing");\n		this._propagate("start", event);\n		return true;\n	},\n\n	_mouseDrag: function(event) {\n\n		//Increase performance, avoid regex\n		var data,\n			el = this.helper, props = {},\n			smp = this.originalMousePosition,\n			a = this.axis,\n			prevTop = this.position.top,\n			prevLeft = this.position.left,\n			prevWidth = this.size.width,\n			prevHeight = this.size.height,\n			dx = (event.pageX-smp.left)||0,\n			dy = (event.pageY-smp.top)||0,\n			trigger = this._change[a];\n\n		if (!trigger) {\n			return false;\n		}\n\n		// Calculate the attrs that will be change\n		data = trigger.apply(this, [event, dx, dy]);\n\n		// Put this in the mouseDrag handler since the user can start pressing shift while resizing\n		this._updateVirtualBoundaries(event.shiftKey);\n		if (this._aspectRatio || event.shiftKey) {\n			data = this._updateRatio(data, event);\n		}\n\n		data = this._respectSize(data, event);\n\n		this._updateCache(data);\n\n		// plugins callbacks need to be called first\n		this._propagate("resize", event);\n\n		if (this.position.top !== prevTop) {\n			props.top = this.position.top + "px";\n		}\n		if (this.position.left !== prevLeft) {\n			props.left = this.position.left + "px";\n		}\n		if (this.size.width !== prevWidth) {\n			props.width = this.size.width + "px";\n		}\n		if (this.size.height !== prevHeight) {\n			props.height = this.size.height + "px";\n		}\n		el.css(props);\n\n		if (!this._helper && this._proportionallyResizeElements.length) {\n			this._proportionallyResize();\n		}\n\n		// Call the user callback if the element was resized\n		if ( ! $.isEmptyObject(props) ) {\n			this._trigger("resize", event, this.ui());\n		}\n\n		return false;\n	},\n\n	_mouseStop: function(event) {\n\n		this.resizing = false;\n		var pr, ista, soffseth, soffsetw, s, left, top,\n			o = this.options, that = this;\n\n		if(this._helper) {\n\n			pr = this._proportionallyResizeElements;\n			ista = pr.length && (/textarea/i).test(pr[0].nodeName);\n			soffseth = ista && $.ui.hasScroll(pr[0], "left") /* TODO - jump height */ ? 0 : that.sizeDiff.height;\n			soffsetw = ista ? 0 : that.sizeDiff.width;\n\n			s = { width: (that.helper.width()  - soffsetw), height: (that.helper.height() - soffseth) };\n			left = (parseInt(that.element.css("left"), 10) + (that.position.left - that.originalPosition.left)) || null;\n			top = (parseInt(that.element.css("top"), 10) + (that.position.top - that.originalPosition.top)) || null;\n\n			if (!o.animate) {\n				this.element.css($.extend(s, { top: top, left: left }));\n			}\n\n			that.helper.height(that.size.height);\n			that.helper.width(that.size.width);\n\n			if (this._helper && !o.animate) {\n				this._proportionallyResize();\n			}\n		}\n\n		$("body").css("cursor", "auto");\n\n		this.element.removeClass("ui-resizable-resizing");\n\n		this._propagate("stop", event);\n\n		if (this._helper) {\n			this.helper.remove();\n		}\n\n		return false;\n\n	},\n\n	_updateVirtualBoundaries: function(forceAspectRatio) {\n		var pMinWidth, pMaxWidth, pMinHeight, pMaxHeight, b,\n			o = this.options;\n\n		b = {\n			minWidth: isNumber(o.minWidth) ? o.minWidth : 0,\n			maxWidth: isNumber(o.maxWidth) ? o.maxWidth : Infinity,\n			minHeight: isNumber(o.minHeight) ? o.minHeight : 0,\n			maxHeight: isNumber(o.maxHeight) ? o.maxHeight : Infinity\n		};\n\n		if(this._aspectRatio || forceAspectRatio) {\n			// We want to create an enclosing box whose aspect ration is the requested one\n			// First, compute the "projected" size for each dimension based on the aspect ratio and other dimension\n			pMinWidth = b.minHeight * this.aspectRatio;\n			pMinHeight = b.minWidth / this.aspectRatio;\n			pMaxWidth = b.maxHeight * this.aspectRatio;\n			pMaxHeight = b.maxWidth / this.aspectRatio;\n\n			if(pMinWidth > b.minWidth) {\n				b.minWidth = pMinWidth;\n			}\n			if(pMinHeight > b.minHeight) {\n				b.minHeight = pMinHeight;\n			}\n			if(pMaxWidth < b.maxWidth) {\n				b.maxWidth = pMaxWidth;\n			}\n			if(pMaxHeight < b.maxHeight) {\n				b.maxHeight = pMaxHeight;\n			}\n		}\n		this._vBoundaries = b;\n	},\n\n	_updateCache: function(data) {\n		this.offset = this.helper.offset();\n		if (isNumber(data.left)) {\n			this.position.left = data.left;\n		}\n		if (isNumber(data.top)) {\n			this.position.top = data.top;\n		}\n		if (isNumber(data.height)) {\n			this.size.height = data.height;\n		}\n		if (isNumber(data.width)) {\n			this.size.width = data.width;\n		}\n	},\n\n	_updateRatio: function( data ) {\n\n		var cpos = this.position,\n			csize = this.size,\n			a = this.axis;\n\n		if (isNumber(data.height)) {\n			data.width = (data.height * this.aspectRatio);\n		} else if (isNumber(data.width)) {\n			data.height = (data.width / this.aspectRatio);\n		}\n\n		if (a === "sw") {\n			data.left = cpos.left + (csize.width - data.width);\n			data.top = null;\n		}\n		if (a === "nw") {\n			data.top = cpos.top + (csize.height - data.height);\n			data.left = cpos.left + (csize.width - data.width);\n		}\n\n		return data;\n	},\n\n	_respectSize: function( data ) {\n\n		var o = this._vBoundaries,\n			a = this.axis,\n			ismaxw = isNumber(data.width) && o.maxWidth && (o.maxWidth < data.width), ismaxh = isNumber(data.height) && o.maxHeight && (o.maxHeight < data.height),\n			isminw = isNumber(data.width) && o.minWidth && (o.minWidth > data.width), isminh = isNumber(data.height) && o.minHeight && (o.minHeight > data.height),\n			dw = this.originalPosition.left + this.originalSize.width,\n			dh = this.position.top + this.size.height,\n			cw = /sw|nw|w/.test(a), ch = /nw|ne|n/.test(a);\n		if (isminw) {\n			data.width = o.minWidth;\n		}\n		if (isminh) {\n			data.height = o.minHeight;\n		}\n		if (ismaxw) {\n			data.width = o.maxWidth;\n		}\n		if (ismaxh) {\n			data.height = o.maxHeight;\n		}\n\n		if (isminw && cw) {\n			data.left = dw - o.minWidth;\n		}\n		if (ismaxw && cw) {\n			data.left = dw - o.maxWidth;\n		}\n		if (isminh && ch) {\n			data.top = dh - o.minHeight;\n		}\n		if (ismaxh && ch) {\n			data.top = dh - o.maxHeight;\n		}\n\n		// fixing jump error on top/left - bug #2330\n		if (!data.width && !data.height && !data.left && data.top) {\n			data.top = null;\n		} else if (!data.width && !data.height && !data.top && data.left) {\n			data.left = null;\n		}\n\n		return data;\n	},\n\n	_proportionallyResize: function() {\n\n		if (!this._proportionallyResizeElements.length) {\n			return;\n		}\n\n		var i, j, borders, paddings, prel,\n			element = this.helper || this.element;\n\n		for ( i=0; i < this._proportionallyResizeElements.length; i++) {\n\n			prel = this._proportionallyResizeElements[i];\n\n			if (!this.borderDif) {\n				this.borderDif = [];\n				borders = [prel.css("borderTopWidth"), prel.css("borderRightWidth"), prel.css("borderBottomWidth"), prel.css("borderLeftWidth")];\n				paddings = [prel.css("paddingTop"), prel.css("paddingRight"), prel.css("paddingBottom"), prel.css("paddingLeft")];\n\n				for ( j = 0; j < borders.length; j++ ) {\n					this.borderDif[ j ] = ( parseInt( borders[ j ], 10 ) || 0 ) + ( parseInt( paddings[ j ], 10 ) || 0 );\n				}\n			}\n\n			prel.css({\n				height: (element.height() - this.borderDif[0] - this.borderDif[2]) || 0,\n				width: (element.width() - this.borderDif[1] - this.borderDif[3]) || 0\n			});\n\n		}\n\n	},\n\n	_renderProxy: function() {\n\n		var el = this.element, o = this.options;\n		this.elementOffset = el.offset();\n\n		if(this._helper) {\n\n			this.helper = this.helper || $("<div style=\'overflow:hidden;\'></div>");\n\n			this.helper.addClass(this._helper).css({\n				width: this.element.outerWidth() - 1,\n				height: this.element.outerHeight() - 1,\n				position: "absolute",\n				left: this.elementOffset.left +"px",\n				top: this.elementOffset.top +"px",\n				zIndex: ++o.zIndex //TODO: Don\'t modify option\n			});\n\n			this.helper\n				.appendTo("body")\n				.disableSelection();\n\n		} else {\n			this.helper = this.element;\n		}\n\n	},\n\n	_change: {\n		e: function(event, dx) {\n			return { width: this.originalSize.width + dx };\n		},\n		w: function(event, dx) {\n			var cs = this.originalSize, sp = this.originalPosition;\n			return { left: sp.left + dx, width: cs.width - dx };\n		},\n		n: function(event, dx, dy) {\n			var cs = this.originalSize, sp = this.originalPosition;\n			return { top: sp.top + dy, height: cs.height - dy };\n		},\n		s: function(event, dx, dy) {\n			return { height: this.originalSize.height + dy };\n		},\n		se: function(event, dx, dy) {\n			return $.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));\n		},\n		sw: function(event, dx, dy) {\n			return $.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));\n		},\n		ne: function(event, dx, dy) {\n			return $.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [event, dx, dy]));\n		},\n		nw: function(event, dx, dy) {\n			return $.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [event, dx, dy]));\n		}\n	},\n\n	_propagate: function(n, event) {\n		$.ui.plugin.call(this, n, [event, this.ui()]);\n		(n !== "resize" && this._trigger(n, event, this.ui()));\n	},\n\n	plugins: {},\n\n	ui: function() {\n		return {\n			originalElement: this.originalElement,\n			element: this.element,\n			helper: this.helper,\n			position: this.position,\n			size: this.size,\n			originalSize: this.originalSize,\n			originalPosition: this.originalPosition\n		};\n	}\n\n});\n\n/*\n * Resizable Extensions\n */\n\n$.ui.plugin.add("resizable", "animate", {\n\n	stop: function( event ) {\n		var that = $(this).data("ui-resizable"),\n			o = that.options,\n			pr = that._proportionallyResizeElements,\n			ista = pr.length && (/textarea/i).test(pr[0].nodeName),\n			soffseth = ista && $.ui.hasScroll(pr[0], "left") /* TODO - jump height */ ? 0 : that.sizeDiff.height,\n			soffsetw = ista ? 0 : that.sizeDiff.width,\n			style = { width: (that.size.width - soffsetw), height: (that.size.height - soffseth) },\n			left = (parseInt(that.element.css("left"), 10) + (that.position.left - that.originalPosition.left)) || null,\n			top = (parseInt(that.element.css("top"), 10) + (that.position.top - that.originalPosition.top)) || null;\n\n		that.element.animate(\n			$.extend(style, top && left ? { top: top, left: left } : {}), {\n				duration: o.animateDuration,\n				easing: o.animateEasing,\n				step: function() {\n\n					var data = {\n						width: parseInt(that.element.css("width"), 10),\n						height: parseInt(that.element.css("height"), 10),\n						top: parseInt(that.element.css("top"), 10),\n						left: parseInt(that.element.css("left"), 10)\n					};\n\n					if (pr && pr.length) {\n						$(pr[0]).css({ width: data.width, height: data.height });\n					}\n\n					// propagating resize, and updating values for each animation step\n					that._updateCache(data);\n					that._propagate("resize", event);\n\n				}\n			}\n		);\n	}\n\n});\n\n$.ui.plugin.add("resizable", "containment", {\n\n	start: function() {\n		var element, p, co, ch, cw, width, height,\n			that = $(this).data("ui-resizable"),\n			o = that.options,\n			el = that.element,\n			oc = o.containment,\n			ce = (oc instanceof $) ? oc.get(0) : (/parent/.test(oc)) ? el.parent().get(0) : oc;\n\n		if (!ce) {\n			return;\n		}\n\n		that.containerElement = $(ce);\n\n		if (/document/.test(oc) || oc === document) {\n			that.containerOffset = { left: 0, top: 0 };\n			that.containerPosition = { left: 0, top: 0 };\n\n			that.parentData = {\n				element: $(document), left: 0, top: 0,\n				width: $(document).width(), height: $(document).height() || document.body.parentNode.scrollHeight\n			};\n		}\n\n		// i\'m a node, so compute top, left, right, bottom\n		else {\n			element = $(ce);\n			p = [];\n			$([ "Top", "Right", "Left", "Bottom" ]).each(function(i, name) { p[i] = num(element.css("padding" + name)); });\n\n			that.containerOffset = element.offset();\n			that.containerPosition = element.position();\n			that.containerSize = { height: (element.innerHeight() - p[3]), width: (element.innerWidth() - p[1]) };\n\n			co = that.containerOffset;\n			ch = that.containerSize.height;\n			cw = that.containerSize.width;\n			width = ($.ui.hasScroll(ce, "left") ? ce.scrollWidth : cw );\n			height = ($.ui.hasScroll(ce) ? ce.scrollHeight : ch);\n\n			that.parentData = {\n				element: ce, left: co.left, top: co.top, width: width, height: height\n			};\n		}\n	},\n\n	resize: function( event ) {\n		var woset, hoset, isParent, isOffsetRelative,\n			that = $(this).data("ui-resizable"),\n			o = that.options,\n			co = that.containerOffset, cp = that.position,\n			pRatio = that._aspectRatio || event.shiftKey,\n			cop = { top:0, left:0 }, ce = that.containerElement;\n\n		if (ce[0] !== document && (/static/).test(ce.css("position"))) {\n			cop = co;\n		}\n\n		if (cp.left < (that._helper ? co.left : 0)) {\n			that.size.width = that.size.width + (that._helper ? (that.position.left - co.left) : (that.position.left - cop.left));\n			if (pRatio) {\n				that.size.height = that.size.width / that.aspectRatio;\n			}\n			that.position.left = o.helper ? co.left : 0;\n		}\n\n		if (cp.top < (that._helper ? co.top : 0)) {\n			that.size.height = that.size.height + (that._helper ? (that.position.top - co.top) : that.position.top);\n			if (pRatio) {\n				that.size.width = that.size.height * that.aspectRatio;\n			}\n			that.position.top = that._helper ? co.top : 0;\n		}\n\n		that.offset.left = that.parentData.left+that.position.left;\n		that.offset.top = that.parentData.top+that.position.top;\n\n		woset = Math.abs( (that._helper ? that.offset.left - cop.left : (that.offset.left - cop.left)) + that.sizeDiff.width );\n		hoset = Math.abs( (that._helper ? that.offset.top - cop.top : (that.offset.top - co.top)) + that.sizeDiff.height );\n\n		isParent = that.containerElement.get(0) === that.element.parent().get(0);\n		isOffsetRelative = /relative|absolute/.test(that.containerElement.css("position"));\n\n		if ( isParent && isOffsetRelative ) {\n			woset -= Math.abs( that.parentData.left );\n		}\n\n		if (woset + that.size.width >= that.parentData.width) {\n			that.size.width = that.parentData.width - woset;\n			if (pRatio) {\n				that.size.height = that.size.width / that.aspectRatio;\n			}\n		}\n\n		if (hoset + that.size.height >= that.parentData.height) {\n			that.size.height = that.parentData.height - hoset;\n			if (pRatio) {\n				that.size.width = that.size.height * that.aspectRatio;\n			}\n		}\n	},\n\n	stop: function(){\n		var that = $(this).data("ui-resizable"),\n			o = that.options,\n			co = that.containerOffset,\n			cop = that.containerPosition,\n			ce = that.containerElement,\n			helper = $(that.helper),\n			ho = helper.offset(),\n			w = helper.outerWidth() - that.sizeDiff.width,\n			h = helper.outerHeight() - that.sizeDiff.height;\n\n		if (that._helper && !o.animate && (/relative/).test(ce.css("position"))) {\n			$(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });\n		}\n\n		if (that._helper && !o.animate && (/static/).test(ce.css("position"))) {\n			$(this).css({ left: ho.left - cop.left - co.left, width: w, height: h });\n		}\n\n	}\n});\n\n$.ui.plugin.add("resizable", "alsoResize", {\n\n	start: function () {\n		var that = $(this).data("ui-resizable"),\n			o = that.options,\n			_store = function (exp) {\n				$(exp).each(function() {\n					var el = $(this);\n					el.data("ui-resizable-alsoresize", {\n						width: parseInt(el.width(), 10), height: parseInt(el.height(), 10),\n						left: parseInt(el.css("left"), 10), top: parseInt(el.css("top"), 10)\n					});\n				});\n			};\n\n		if (typeof(o.alsoResize) === "object" && !o.alsoResize.parentNode) {\n			if (o.alsoResize.length) { o.alsoResize = o.alsoResize[0]; _store(o.alsoResize); }\n			else { $.each(o.alsoResize, function (exp) { _store(exp); }); }\n		}else{\n			_store(o.alsoResize);\n		}\n	},\n\n	resize: function (event, ui) {\n		var that = $(this).data("ui-resizable"),\n			o = that.options,\n			os = that.originalSize,\n			op = that.originalPosition,\n			delta = {\n				height: (that.size.height - os.height) || 0, width: (that.size.width - os.width) || 0,\n				top: (that.position.top - op.top) || 0, left: (that.position.left - op.left) || 0\n			},\n\n			_alsoResize = function (exp, c) {\n				$(exp).each(function() {\n					var el = $(this), start = $(this).data("ui-resizable-alsoresize"), style = {},\n						css = c && c.length ? c : el.parents(ui.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];\n\n					$.each(css, function (i, prop) {\n						var sum = (start[prop]||0) + (delta[prop]||0);\n						if (sum && sum >= 0) {\n							style[prop] = sum || null;\n						}\n					});\n\n					el.css(style);\n				});\n			};\n\n		if (typeof(o.alsoResize) === "object" && !o.alsoResize.nodeType) {\n			$.each(o.alsoResize, function (exp, c) { _alsoResize(exp, c); });\n		}else{\n			_alsoResize(o.alsoResize);\n		}\n	},\n\n	stop: function () {\n		$(this).removeData("resizable-alsoresize");\n	}\n});\n\n$.ui.plugin.add("resizable", "ghost", {\n\n	start: function() {\n\n		var that = $(this).data("ui-resizable"), o = that.options, cs = that.size;\n\n		that.ghost = that.originalElement.clone();\n		that.ghost\n			.css({ opacity: 0.25, display: "block", position: "relative", height: cs.height, width: cs.width, margin: 0, left: 0, top: 0 })\n			.addClass("ui-resizable-ghost")\n			.addClass(typeof o.ghost === "string" ? o.ghost : "");\n\n		that.ghost.appendTo(that.helper);\n\n	},\n\n	resize: function(){\n		var that = $(this).data("ui-resizable");\n		if (that.ghost) {\n			that.ghost.css({ position: "relative", height: that.size.height, width: that.size.width });\n		}\n	},\n\n	stop: function() {\n		var that = $(this).data("ui-resizable");\n		if (that.ghost && that.helper) {\n			that.helper.get(0).removeChild(that.ghost.get(0));\n		}\n	}\n\n});\n\n$.ui.plugin.add("resizable", "grid", {\n\n	resize: function() {\n		var that = $(this).data("ui-resizable"),\n			o = that.options,\n			cs = that.size,\n			os = that.originalSize,\n			op = that.originalPosition,\n			a = that.axis,\n			grid = typeof o.grid === "number" ? [o.grid, o.grid] : o.grid,\n			gridX = (grid[0]||1),\n			gridY = (grid[1]||1),\n			ox = Math.round((cs.width - os.width) / gridX) * gridX,\n			oy = Math.round((cs.height - os.height) / gridY) * gridY,\n			newWidth = os.width + ox,\n			newHeight = os.height + oy,\n			isMaxWidth = o.maxWidth && (o.maxWidth < newWidth),\n			isMaxHeight = o.maxHeight && (o.maxHeight < newHeight),\n			isMinWidth = o.minWidth && (o.minWidth > newWidth),\n			isMinHeight = o.minHeight && (o.minHeight > newHeight);\n\n		o.grid = grid;\n\n		if (isMinWidth) {\n			newWidth = newWidth + gridX;\n		}\n		if (isMinHeight) {\n			newHeight = newHeight + gridY;\n		}\n		if (isMaxWidth) {\n			newWidth = newWidth - gridX;\n		}\n		if (isMaxHeight) {\n			newHeight = newHeight - gridY;\n		}\n\n		if (/^(se|s|e)$/.test(a)) {\n			that.size.width = newWidth;\n			that.size.height = newHeight;\n		} else if (/^(ne)$/.test(a)) {\n			that.size.width = newWidth;\n			that.size.height = newHeight;\n			that.position.top = op.top - oy;\n		} else if (/^(sw)$/.test(a)) {\n			that.size.width = newWidth;\n			that.size.height = newHeight;\n			that.position.left = op.left - ox;\n		} else {\n			if ( newHeight - gridY > 0 ) {\n				that.size.height = newHeight;\n				that.position.top = op.top - oy;\n			} else {\n				that.size.height = gridY;\n				that.position.top = op.top + os.height - gridY;\n			}\n			if ( newWidth - gridX > 0 ) {\n				that.size.width = newWidth;\n				that.position.left = op.left - ox;\n			} else {\n				that.size.width = gridX;\n				that.position.left = op.left + os.width - gridX;\n			}\n		}\n	}\n\n});\n\n})(jQuery);\n(function( $, undefined ) {\n\nvar lastActive,\n	baseClasses = "ui-button ui-widget ui-state-default ui-corner-all",\n	typeClasses = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only",\n	formResetHandler = function() {\n		var form = $( this );\n		setTimeout(function() {\n			form.find( ":ui-button" ).button( "refresh" );\n		}, 1 );\n	},\n	radioGroup = function( radio ) {\n		var name = radio.name,\n			form = radio.form,\n			radios = $( [] );\n		if ( name ) {\n			name = name.replace( /\'/g, "\\\\\'" );\n			if ( form ) {\n				radios = $( form ).find( "[name=\'" + name + "\']" );\n			} else {\n				radios = $( "[name=\'" + name + "\']", radio.ownerDocument )\n					.filter(function() {\n						return !this.form;\n					});\n			}\n		}\n		return radios;\n	};\n\n$.widget( "ui.button", {\n	version: "1.10.4",\n	defaultElement: "<button>",\n	options: {\n		disabled: null,\n		text: true,\n		label: null,\n		icons: {\n			primary: null,\n			secondary: null\n		}\n	},\n	_create: function() {\n		this.element.closest( "form" )\n			.unbind( "reset" + this.eventNamespace )\n			.bind( "reset" + this.eventNamespace, formResetHandler );\n\n		if ( typeof this.options.disabled !== "boolean" ) {\n			this.options.disabled = !!this.element.prop( "disabled" );\n		} else {\n			this.element.prop( "disabled", this.options.disabled );\n		}\n\n		this._determineButtonType();\n		this.hasTitle = !!this.buttonElement.attr( "title" );\n\n		var that = this,\n			options = this.options,\n			toggleButton = this.type === "checkbox" || this.type === "radio",\n			activeClass = !toggleButton ? "ui-state-active" : "";\n\n		if ( options.label === null ) {\n			options.label = (this.type === "input" ? this.buttonElement.val() : this.buttonElement.html());\n		}\n\n		this._hoverable( this.buttonElement );\n\n		this.buttonElement\n			.addClass( baseClasses )\n			.attr( "role", "button" )\n			.bind( "mouseenter" + this.eventNamespace, function() {\n				if ( options.disabled ) {\n					return;\n				}\n				if ( this === lastActive ) {\n					$( this ).addClass( "ui-state-active" );\n				}\n			})\n			.bind( "mouseleave" + this.eventNamespace, function() {\n				if ( options.disabled ) {\n					return;\n				}\n				$( this ).removeClass( activeClass );\n			})\n			.bind( "click" + this.eventNamespace, function( event ) {\n				if ( options.disabled ) {\n					event.preventDefault();\n					event.stopImmediatePropagation();\n				}\n			});\n\n		// Can\'t use _focusable() because the element that receives focus\n		// and the element that gets the ui-state-focus class are different\n		this._on({\n			focus: function() {\n				this.buttonElement.addClass( "ui-state-focus" );\n			},\n			blur: function() {\n				this.buttonElement.removeClass( "ui-state-focus" );\n			}\n		});\n\n		if ( toggleButton ) {\n			this.element.bind( "change" + this.eventNamespace, function() {\n				that.refresh();\n			});\n		}\n\n		if ( this.type === "checkbox" ) {\n			this.buttonElement.bind( "click" + this.eventNamespace, function() {\n				if ( options.disabled ) {\n					return false;\n				}\n			});\n		} else if ( this.type === "radio" ) {\n			this.buttonElement.bind( "click" + this.eventNamespace, function() {\n				if ( options.disabled ) {\n					return false;\n				}\n				$( this ).addClass( "ui-state-active" );\n				that.buttonElement.attr( "aria-pressed", "true" );\n\n				var radio = that.element[ 0 ];\n				radioGroup( radio )\n					.not( radio )\n					.map(function() {\n						return $( this ).button( "widget" )[ 0 ];\n					})\n					.removeClass( "ui-state-active" )\n					.attr( "aria-pressed", "false" );\n			});\n		} else {\n			this.buttonElement\n				.bind( "mousedown" + this.eventNamespace, function() {\n					if ( options.disabled ) {\n						return false;\n					}\n					$( this ).addClass( "ui-state-active" );\n					lastActive = this;\n					that.document.one( "mouseup", function() {\n						lastActive = null;\n					});\n				})\n				.bind( "mouseup" + this.eventNamespace, function() {\n					if ( options.disabled ) {\n						return false;\n					}\n					$( this ).removeClass( "ui-state-active" );\n				})\n				.bind( "keydown" + this.eventNamespace, function(event) {\n					if ( options.disabled ) {\n						return false;\n					}\n					if ( event.keyCode === $.ui.keyCode.SPACE || event.keyCode === $.ui.keyCode.ENTER ) {\n						$( this ).addClass( "ui-state-active" );\n					}\n				})\n				// see #8559, we bind to blur here in case the button element loses\n				// focus between keydown and keyup, it would be left in an "active" state\n				.bind( "keyup" + this.eventNamespace + " blur" + this.eventNamespace, function() {\n					$( this ).removeClass( "ui-state-active" );\n				});\n\n			if ( this.buttonElement.is("a") ) {\n				this.buttonElement.keyup(function(event) {\n					if ( event.keyCode === $.ui.keyCode.SPACE ) {\n						// TODO pass through original event correctly (just as 2nd argument doesn\'t work)\n						$( this ).click();\n					}\n				});\n			}\n		}\n\n		// TODO: pull out $.Widget\'s handling for the disabled option into\n		// $.Widget.prototype._setOptionDisabled so it\'s easy to proxy and can\n		// be overridden by individual plugins\n		this._setOption( "disabled", options.disabled );\n		this._resetButton();\n	},\n\n	_determineButtonType: function() {\n		var ancestor, labelSelector, checked;\n\n		if ( this.element.is("[type=checkbox]") ) {\n			this.type = "checkbox";\n		} else if ( this.element.is("[type=radio]") ) {\n			this.type = "radio";\n		} else if ( this.element.is("input") ) {\n			this.type = "input";\n		} else {\n			this.type = "button";\n		}\n\n		if ( this.type === "checkbox" || this.type === "radio" ) {\n			// we don\'t search against the document in case the element\n			// is disconnected from the DOM\n			ancestor = this.element.parents().last();\n			labelSelector = "label[for=\'" + this.element.attr("id") + "\']";\n			this.buttonElement = ancestor.find( labelSelector );\n			if ( !this.buttonElement.length ) {\n				ancestor = ancestor.length ? ancestor.siblings() : this.element.siblings();\n				this.buttonElement = ancestor.filter( labelSelector );\n				if ( !this.buttonElement.length ) {\n					this.buttonElement = ancestor.find( labelSelector );\n				}\n			}\n			this.element.addClass( "ui-helper-hidden-accessible" );\n\n			checked = this.element.is( ":checked" );\n			if ( checked ) {\n				this.buttonElement.addClass( "ui-state-active" );\n			}\n			this.buttonElement.prop( "aria-pressed", checked );\n		} else {\n			this.buttonElement = this.element;\n		}\n	},\n\n	widget: function() {\n		return this.buttonElement;\n	},\n\n	_destroy: function() {\n		this.element\n			.removeClass( "ui-helper-hidden-accessible" );\n		this.buttonElement\n			.removeClass( baseClasses + " ui-state-active " + typeClasses )\n			.removeAttr( "role" )\n			.removeAttr( "aria-pressed" )\n			.html( this.buttonElement.find(".ui-button-text").html() );\n\n		if ( !this.hasTitle ) {\n			this.buttonElement.removeAttr( "title" );\n		}\n	},\n\n	_setOption: function( key, value ) {\n		this._super( key, value );\n		if ( key === "disabled" ) {\n			this.element.prop( "disabled", !!value );\n			if ( value ) {\n				this.buttonElement.removeClass( "ui-state-focus" );\n			}\n			return;\n		}\n		this._resetButton();\n	},\n\n	refresh: function() {\n		//See #8237 & #8828\n		var isDisabled = this.element.is( "input, button" ) ? this.element.is( ":disabled" ) : this.element.hasClass( "ui-button-disabled" );\n\n		if ( isDisabled !== this.options.disabled ) {\n			this._setOption( "disabled", isDisabled );\n		}\n		if ( this.type === "radio" ) {\n			radioGroup( this.element[0] ).each(function() {\n				if ( $( this ).is( ":checked" ) ) {\n					$( this ).button( "widget" )\n						.addClass( "ui-state-active" )\n						.attr( "aria-pressed", "true" );\n				} else {\n					$( this ).button( "widget" )\n						.removeClass( "ui-state-active" )\n						.attr( "aria-pressed", "false" );\n				}\n			});\n		} else if ( this.type === "checkbox" ) {\n			if ( this.element.is( ":checked" ) ) {\n				this.buttonElement\n					.addClass( "ui-state-active" )\n					.attr( "aria-pressed", "true" );\n			} else {\n				this.buttonElement\n					.removeClass( "ui-state-active" )\n					.attr( "aria-pressed", "false" );\n			}\n		}\n	},\n\n	_resetButton: function() {\n		if ( this.type === "input" ) {\n			if ( this.options.label ) {\n				this.element.val( this.options.label );\n			}\n			return;\n		}\n		var buttonElement = this.buttonElement.removeClass( typeClasses ),\n			buttonText = $( "<span></span>", this.document[0] )\n				.addClass( "ui-button-text" )\n				.html( this.options.label )\n				.appendTo( buttonElement.empty() )\n				.text(),\n			icons = this.options.icons,\n			multipleIcons = icons.primary && icons.secondary,\n			buttonClasses = [];\n\n		if ( icons.primary || icons.secondary ) {\n			if ( this.options.text ) {\n				buttonClasses.push( "ui-button-text-icon" + ( multipleIcons ? "s" : ( icons.primary ? "-primary" : "-secondary" ) ) );\n			}\n\n			if ( icons.primary ) {\n				buttonElement.prepend( "<span class=\'ui-button-icon-primary ui-icon " + icons.primary + "\'></span>" );\n			}\n\n			if ( icons.secondary ) {\n				buttonElement.append( "<span class=\'ui-button-icon-secondary ui-icon " + icons.secondary + "\'></span>" );\n			}\n\n			if ( !this.options.text ) {\n				buttonClasses.push( multipleIcons ? "ui-button-icons-only" : "ui-button-icon-only" );\n\n				if ( !this.hasTitle ) {\n					buttonElement.attr( "title", $.trim( buttonText ) );\n				}\n			}\n		} else {\n			buttonClasses.push( "ui-button-text-only" );\n		}\n		buttonElement.addClass( buttonClasses.join( " " ) );\n	}\n});\n\n$.widget( "ui.buttonset", {\n	version: "1.10.4",\n	options: {\n		items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"\n	},\n\n	_create: function() {\n		this.element.addClass( "ui-buttonset" );\n	},\n\n	_init: function() {\n		this.refresh();\n	},\n\n	_setOption: function( key, value ) {\n		if ( key === "disabled" ) {\n			this.buttons.button( "option", key, value );\n		}\n\n		this._super( key, value );\n	},\n\n	refresh: function() {\n		var rtl = this.element.css( "direction" ) === "rtl";\n\n		this.buttons = this.element.find( this.options.items )\n			.filter( ":ui-button" )\n				.button( "refresh" )\n			.end()\n			.not( ":ui-button" )\n				.button()\n			.end()\n			.map(function() {\n				return $( this ).button( "widget" )[ 0 ];\n			})\n				.removeClass( "ui-corner-all ui-corner-left ui-corner-right" )\n				.filter( ":first" )\n					.addClass( rtl ? "ui-corner-right" : "ui-corner-left" )\n				.end()\n				.filter( ":last" )\n					.addClass( rtl ? "ui-corner-left" : "ui-corner-right" )\n				.end()\n			.end();\n	},\n\n	_destroy: function() {\n		this.element.removeClass( "ui-buttonset" );\n		this.buttons\n			.map(function() {\n				return $( this ).button( "widget" )[ 0 ];\n			})\n				.removeClass( "ui-corner-left ui-corner-right" )\n			.end()\n			.button( "destroy" );\n	}\n});\n\n}( jQuery ) );\n(function( $, undefined ) {\n\n$.extend($.ui, { datepicker: { version: "1.10.4" } });\n\nvar PROP_NAME = "datepicker",\n	instActive;\n\n/* Date picker manager.\n   Use the singleton instance of this class, $.datepicker, to interact with the date picker.\n   Settings for (groups of) date pickers are maintained in an instance object,\n   allowing multiple different settings on the same page. */\n\nfunction Datepicker() {\n	this._curInst = null; // The current instance in use\n	this._keyEvent = false; // If the last event was a key event\n	this._disabledInputs = []; // List of date picker inputs that have been disabled\n	this._datepickerShowing = false; // True if the popup picker is showing , false if not\n	this._inDialog = false; // True if showing within a "dialog", false if not\n	this._mainDivId = "ui-datepicker-div"; // The ID of the main datepicker division\n	this._inlineClass = "ui-datepicker-inline"; // The name of the inline marker class\n	this._appendClass = "ui-datepicker-append"; // The name of the append marker class\n	this._triggerClass = "ui-datepicker-trigger"; // The name of the trigger marker class\n	this._dialogClass = "ui-datepicker-dialog"; // The name of the dialog marker class\n	this._disableClass = "ui-datepicker-disabled"; // The name of the disabled covering marker class\n	this._unselectableClass = "ui-datepicker-unselectable"; // The name of the unselectable cell marker class\n	this._currentClass = "ui-datepicker-current-day"; // The name of the current day marker class\n	this._dayOverClass = "ui-datepicker-days-cell-over"; // The name of the day hover marker class\n	this.regional = []; // Available regional settings, indexed by language code\n	this.regional[""] = { // Default regional settings\n		closeText: "Done", // Display text for close link\n		prevText: "Prev", // Display text for previous month link\n		nextText: "Next", // Display text for next month link\n		currentText: "Today", // Display text for current month link\n		monthNames: ["January","February","March","April","May","June",\n			"July","August","September","October","November","December"], // Names of months for drop-down and formatting\n		monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], // For formatting\n		dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], // For formatting\n		dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], // For formatting\n		dayNamesMin: ["Su","Mo","Tu","We","Th","Fr","Sa"], // Column headings for days starting at Sunday\n		weekHeader: "Wk", // Column header for week of the year\n		dateFormat: "mm/dd/yy", // See format options on parseDate\n		firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...\n		isRTL: false, // True if right-to-left language, false if left-to-right\n		showMonthAfterYear: false, // True if the year select precedes month, false for month then year\n		yearSuffix: "" // Additional text to append to the year in the month headers\n	};\n	this._defaults = { // Global defaults for all the date picker instances\n		showOn: "focus", // "focus" for popup on focus,\n			// "button" for trigger button, or "both" for either\n		showAnim: "fadeIn", // Name of jQuery animation for popup\n		showOptions: {}, // Options for enhanced animations\n		defaultDate: null, // Used when field is blank: actual date,\n			// +/-number for offset from today, null for today\n		appendText: "", // Display text following the input box, e.g. showing the format\n		buttonText: "...", // Text for trigger button\n		buttonImage: "", // URL for trigger button image\n		buttonImageOnly: false, // True if the image appears alone, false if it appears on a button\n		hideIfNoPrevNext: false, // True to hide next/previous month links\n			// if not applicable, false to just disable them\n		navigationAsDateFormat: false, // True if date formatting applied to prev/today/next links\n		gotoCurrent: false, // True if today link goes back to current selection instead\n		changeMonth: false, // True if month can be selected directly, false if only prev/next\n		changeYear: false, // True if year can be selected directly, false if only prev/next\n		yearRange: "c-10:c+10", // Range of years to display in drop-down,\n			// either relative to today\'s year (-nn:+nn), relative to currently displayed year\n			// (c-nn:c+nn), absolute (nnnn:nnnn), or a combination of the above (nnnn:-n)\n		showOtherMonths: false, // True to show dates in other months, false to leave blank\n		selectOtherMonths: false, // True to allow selection of dates in other months, false for unselectable\n		showWeek: false, // True to show week of the year, false to not show it\n		calculateWeek: this.iso8601Week, // How to calculate the week of the year,\n			// takes a Date and returns the number of the week for it\n		shortYearCutoff: "+10", // Short year values < this are in the current century,\n			// > this are in the previous century,\n			// string value starting with "+" for current year + value\n		minDate: null, // The earliest selectable date, or null for no limit\n		maxDate: null, // The latest selectable date, or null for no limit\n		duration: "fast", // Duration of display/closure\n		beforeShowDay: null, // Function that takes a date and returns an array with\n			// [0] = true if selectable, false if not, [1] = custom CSS class name(s) or "",\n			// [2] = cell title (optional), e.g. $.datepicker.noWeekends\n		beforeShow: null, // Function that takes an input field and\n			// returns a set of custom settings for the date picker\n		onSelect: null, // Define a callback function when a date is selected\n		onChangeMonthYear: null, // Define a callback function when the month or year is changed\n		onClose: null, // Define a callback function when the datepicker is closed\n		numberOfMonths: 1, // Number of months to show at a time\n		showCurrentAtPos: 0, // The position in multipe months at which to show the current month (starting at 0)\n		stepMonths: 1, // Number of months to step back/forward\n		stepBigMonths: 12, // Number of months to step back/forward for the big links\n		altField: "", // Selector for an alternate field to store selected dates into\n		altFormat: "", // The date format to use for the alternate field\n		constrainInput: true, // The input is constrained by the current date format\n		showButtonPanel: false, // True to show button panel, false to not show it\n		autoSize: false, // True to size the input for the date format, false to leave as is\n		disabled: false // The initial disabled state\n	};\n	$.extend(this._defaults, this.regional[""]);\n	this.dpDiv = bindHover($("<div id=\'" + this._mainDivId + "\' class=\'ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all\'></div>"));\n  this.dpDiv.on(\'click\', function(e) { e.stopPropagation(); });\n}\n\n$.extend(Datepicker.prototype, {\n	/* Class name added to elements to indicate already configured with a date picker. */\n	markerClassName: "hasDatepicker",\n\n	//Keep track of the maximum number of rows displayed (see #7043)\n	maxRows: 4,\n\n	// TODO rename to "widget" when switching to widget factory\n	_widgetDatepicker: function() {\n		return this.dpDiv;\n	},\n\n	/* Override the default settings for all instances of the date picker.\n	 * @param  settings  object - the new settings to use as defaults (anonymous object)\n	 * @return the manager object\n	 */\n	setDefaults: function(settings) {\n		extendRemove(this._defaults, settings || {});\n		return this;\n	},\n\n	/* Attach the date picker to a jQuery selection.\n	 * @param  target	element - the target input field or division or span\n	 * @param  settings  object - the new settings to use for this date picker instance (anonymous)\n	 */\n	_attachDatepicker: function(target, settings) {\n		var nodeName, inline, inst;\n		nodeName = target.nodeName.toLowerCase();\n		inline = (nodeName === "div" || nodeName === "span");\n		if (!target.id) {\n			this.uuid += 1;\n			target.id = "dp" + this.uuid;\n		}\n		inst = this._newInst($(target), inline);\n		inst.settings = $.extend({}, settings || {});\n		if (nodeName === "input") {\n			this._connectDatepicker(target, inst);\n		} else if (inline) {\n			this._inlineDatepicker(target, inst);\n		}\n	},\n\n	/* Create a new instance object. */\n	_newInst: function(target, inline) {\n		var id = target[0].id.replace(/([^A-Za-z0-9_\\-])/g, "\\\\\\\\$1"); // escape jQuery meta chars\n		return {id: id, input: target, // associated target\n			selectedDay: 0, selectedMonth: 0, selectedYear: 0, // current selection\n			drawMonth: 0, drawYear: 0, // month being drawn\n			inline: inline, // is datepicker inline or not\n			dpDiv: (!inline ? this.dpDiv : // presentation div\n			bindHover($("<div class=\'" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all\'></div>")))};\n	},\n\n	/* Attach the date picker to an input field. */\n	_connectDatepicker: function(target, inst) {\n		var input = $(target);\n		inst.append = $([]);\n		inst.trigger = $([]);\n		if (input.hasClass(this.markerClassName)) {\n			return;\n		}\n		this._attachments(input, inst);\n		input.addClass(this.markerClassName).keydown(this._doKeyDown).\n			keypress(this._doKeyPress).keyup(this._doKeyUp);\n		this._autoSize(inst);\n		$.data(target, PROP_NAME, inst);\n		//If disabled option is true, disable the datepicker once it has been attached to the input (see ticket #5665)\n		if( inst.settings.disabled ) {\n			this._disableDatepicker( target );\n		}\n	},\n\n	/* Make attachments based on settings. */\n	_attachments: function(input, inst) {\n		var showOn, buttonText, buttonImage,\n			appendText = this._get(inst, "appendText"),\n			isRTL = this._get(inst, "isRTL");\n\n		if (inst.append) {\n			inst.append.remove();\n		}\n		if (appendText) {\n			inst.append = $("<span class=\'" + this._appendClass + "\'>" + appendText + "</span>");\n			input[isRTL ? "before" : "after"](inst.append);\n		}\n\n		input.unbind("focus", this._showDatepicker);\n\n		if (inst.trigger) {\n			inst.trigger.remove();\n		}\n\n		showOn = this._get(inst, "showOn");\n		if (showOn === "focus" || showOn === "both") { // pop-up date picker when in the marked field\n			input.focus(this._showDatepicker);\n		}\n		if (showOn === "button" || showOn === "both") { // pop-up date picker when button clicked\n			buttonText = this._get(inst, "buttonText");\n			buttonImage = this._get(inst, "buttonImage");\n			inst.trigger = $(this._get(inst, "buttonImageOnly") ?\n				$("<img/>").addClass(this._triggerClass).\n					attr({ src: buttonImage, alt: buttonText, title: buttonText }) :\n				$("<button type=\'button\'></button>").addClass(this._triggerClass).\n					html(!buttonImage ? buttonText : $("<img/>").attr(\n					{ src:buttonImage, alt:buttonText, title:buttonText })));\n			input[isRTL ? "before" : "after"](inst.trigger);\n			inst.trigger.click(function() {\n				if ($.datepicker._datepickerShowing && $.datepicker._lastInput === input[0]) {\n					$.datepicker._hideDatepicker();\n				} else if ($.datepicker._datepickerShowing && $.datepicker._lastInput !== input[0]) {\n					$.datepicker._hideDatepicker();\n					$.datepicker._showDatepicker(input[0]);\n				} else {\n					$.datepicker._showDatepicker(input[0]);\n				}\n				return false;\n			});\n		}\n	},\n\n	/* Apply the maximum length for the date format. */\n	_autoSize: function(inst) {\n		if (this._get(inst, "autoSize") && !inst.inline) {\n			var findMax, max, maxI, i,\n				date = new Date(2009, 12 - 1, 20), // Ensure double digits\n				dateFormat = this._get(inst, "dateFormat");\n\n			if (dateFormat.match(/[DM]/)) {\n				findMax = function(names) {\n					max = 0;\n					maxI = 0;\n					for (i = 0; i < names.length; i++) {\n						if (names[i].length > max) {\n							max = names[i].length;\n							maxI = i;\n						}\n					}\n					return maxI;\n				};\n				date.setMonth(findMax(this._get(inst, (dateFormat.match(/MM/) ?\n					"monthNames" : "monthNamesShort"))));\n				date.setDate(findMax(this._get(inst, (dateFormat.match(/DD/) ?\n					"dayNames" : "dayNamesShort"))) + 20 - date.getDay());\n			}\n			inst.input.attr("size", this._formatDate(inst, date).length);\n		}\n	},\n\n	/* Attach an inline date picker to a div. */\n	_inlineDatepicker: function(target, inst) {\n		var divSpan = $(target);\n		if (divSpan.hasClass(this.markerClassName)) {\n			return;\n		}\n		divSpan.addClass(this.markerClassName).append(inst.dpDiv);\n		$.data(target, PROP_NAME, inst);\n		this._setDate(inst, this._getDefaultDate(inst), true);\n		this._updateDatepicker(inst);\n		this._updateAlternate(inst);\n		//If disabled option is true, disable the datepicker before showing it (see ticket #5665)\n		if( inst.settings.disabled ) {\n			this._disableDatepicker( target );\n		}\n		// Set display:block in place of inst.dpDiv.show() which won\'t work on disconnected elements\n		// http://bugs.jqueryui.com/ticket/7552 - A Datepicker created on a detached div has zero height\n		inst.dpDiv.css( "display", "block" );\n	},\n\n	/* Pop-up the date picker in a "dialog" box.\n	 * @param  input element - ignored\n	 * @param  date	string or Date - the initial date to display\n	 * @param  onSelect  function - the function to call when a date is selected\n	 * @param  settings  object - update the dialog date picker instance\'s settings (anonymous object)\n	 * @param  pos int[2] - coordinates for the dialog\'s position within the screen or\n	 *					event - with x/y coordinates or\n	 *					leave empty for default (screen centre)\n	 * @return the manager object\n	 */\n	_dialogDatepicker: function(input, date, onSelect, settings, pos) {\n		var id, browserWidth, browserHeight, scrollX, scrollY,\n			inst = this._dialogInst; // internal instance\n\n		if (!inst) {\n			this.uuid += 1;\n			id = "dp" + this.uuid;\n			this._dialogInput = $("<input type=\'text\' id=\'" + id +\n				"\' style=\'position: absolute; top: -100px; width: 0px;\'/>");\n			this._dialogInput.keydown(this._doKeyDown);\n			$("body").append(this._dialogInput);\n			inst = this._dialogInst = this._newInst(this._dialogInput, false);\n			inst.settings = {};\n			$.data(this._dialogInput[0], PROP_NAME, inst);\n		}\n		extendRemove(inst.settings, settings || {});\n		date = (date && date.constructor === Date ? this._formatDate(inst, date) : date);\n		this._dialogInput.val(date);\n\n		this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);\n		if (!this._pos) {\n			browserWidth = document.documentElement.clientWidth;\n			browserHeight = document.documentElement.clientHeight;\n			scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;\n			scrollY = document.documentElement.scrollTop || document.body.scrollTop;\n			this._pos = // should use actual width/height below\n				[(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY];\n		}\n\n		// move input on screen for focus, but hidden behind dialog\n		this._dialogInput.css("left", (this._pos[0] + 20) + "px").css("top", this._pos[1] + "px");\n		inst.settings.onSelect = onSelect;\n		this._inDialog = true;\n		this.dpDiv.addClass(this._dialogClass);\n		this._showDatepicker(this._dialogInput[0]);\n		if ($.blockUI) {\n			$.blockUI(this.dpDiv);\n		}\n		$.data(this._dialogInput[0], PROP_NAME, inst);\n		return this;\n	},\n\n	/* Detach a datepicker from its control.\n	 * @param  target	element - the target input field or division or span\n	 */\n	_destroyDatepicker: function(target) {\n		var nodeName,\n			$target = $(target),\n			inst = $.data(target, PROP_NAME);\n\n		if (!$target.hasClass(this.markerClassName)) {\n			return;\n		}\n\n		nodeName = target.nodeName.toLowerCase();\n		$.removeData(target, PROP_NAME);\n		if (nodeName === "input") {\n			inst.append.remove();\n			inst.trigger.remove();\n			$target.removeClass(this.markerClassName).\n				unbind("focus", this._showDatepicker).\n				unbind("keydown", this._doKeyDown).\n				unbind("keypress", this._doKeyPress).\n				unbind("keyup", this._doKeyUp);\n		} else if (nodeName === "div" || nodeName === "span") {\n			$target.removeClass(this.markerClassName).empty();\n		}\n	},\n\n	/* Enable the date picker to a jQuery selection.\n	 * @param  target	element - the target input field or division or span\n	 */\n	_enableDatepicker: function(target) {\n		var nodeName, inline,\n			$target = $(target),\n			inst = $.data(target, PROP_NAME);\n\n		if (!$target.hasClass(this.markerClassName)) {\n			return;\n		}\n\n		nodeName = target.nodeName.toLowerCase();\n		if (nodeName === "input") {\n			target.disabled = false;\n			inst.trigger.filter("button").\n				each(function() { this.disabled = false; }).end().\n				filter("img").css({opacity: "1.0", cursor: ""});\n		} else if (nodeName === "div" || nodeName === "span") {\n			inline = $target.children("." + this._inlineClass);\n			inline.children().removeClass("ui-state-disabled");\n			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").\n				prop("disabled", false);\n		}\n		this._disabledInputs = $.map(this._disabledInputs,\n			function(value) { return (value === target ? null : value); }); // delete entry\n	},\n\n	/* Disable the date picker to a jQuery selection.\n	 * @param  target	element - the target input field or division or span\n	 */\n	_disableDatepicker: function(target) {\n		var nodeName, inline,\n			$target = $(target),\n			inst = $.data(target, PROP_NAME);\n\n		if (!$target.hasClass(this.markerClassName)) {\n			return;\n		}\n\n		nodeName = target.nodeName.toLowerCase();\n		if (nodeName === "input") {\n			target.disabled = true;\n			inst.trigger.filter("button").\n				each(function() { this.disabled = true; }).end().\n				filter("img").css({opacity: "0.5", cursor: "default"});\n		} else if (nodeName === "div" || nodeName === "span") {\n			inline = $target.children("." + this._inlineClass);\n			inline.children().addClass("ui-state-disabled");\n			inline.find("select.ui-datepicker-month, select.ui-datepicker-year").\n				prop("disabled", true);\n		}\n		this._disabledInputs = $.map(this._disabledInputs,\n			function(value) { return (value === target ? null : value); }); // delete entry\n		this._disabledInputs[this._disabledInputs.length] = target;\n	},\n\n	/* Is the first field in a jQuery collection disabled as a datepicker?\n	 * @param  target	element - the target input field or division or span\n	 * @return boolean - true if disabled, false if enabled\n	 */\n	_isDisabledDatepicker: function(target) {\n		if (!target) {\n			return false;\n		}\n		for (var i = 0; i < this._disabledInputs.length; i++) {\n			if (this._disabledInputs[i] === target) {\n				return true;\n			}\n		}\n		return false;\n	},\n\n	/* Retrieve the instance data for the target control.\n	 * @param  target  element - the target input field or division or span\n	 * @return  object - the associated instance data\n	 * @throws  error if a jQuery problem getting data\n	 */\n	_getInst: function(target) {\n		try {\n			return $.data(target, PROP_NAME);\n		}\n		catch (err) {\n			throw "Missing instance data for this datepicker";\n		}\n	},\n\n	/* Update or retrieve the settings for a date picker attached to an input field or division.\n	 * @param  target  element - the target input field or division or span\n	 * @param  name	object - the new settings to update or\n	 *				string - the name of the setting to change or retrieve,\n	 *				when retrieving also "all" for all instance settings or\n	 *				"defaults" for all global defaults\n	 * @param  value   any - the new value for the setting\n	 *				(omit if above is an object or to retrieve a value)\n	 */\n	_optionDatepicker: function(target, name, value) {\n		var settings, date, minDate, maxDate,\n			inst = this._getInst(target);\n\n		if (arguments.length === 2 && typeof name === "string") {\n			return (name === "defaults" ? $.extend({}, $.datepicker._defaults) :\n				(inst ? (name === "all" ? $.extend({}, inst.settings) :\n				this._get(inst, name)) : null));\n		}\n\n		settings = name || {};\n		if (typeof name === "string") {\n			settings = {};\n			settings[name] = value;\n		}\n\n		if (inst) {\n			if (this._curInst === inst) {\n				this._hideDatepicker();\n			}\n\n			date = this._getDateDatepicker(target, true);\n			minDate = this._getMinMaxDate(inst, "min");\n			maxDate = this._getMinMaxDate(inst, "max");\n			extendRemove(inst.settings, settings);\n			// reformat the old minDate/maxDate values if dateFormat changes and a new minDate/maxDate isn\'t provided\n			if (minDate !== null && settings.dateFormat !== undefined && settings.minDate === undefined) {\n				inst.settings.minDate = this._formatDate(inst, minDate);\n			}\n			if (maxDate !== null && settings.dateFormat !== undefined && settings.maxDate === undefined) {\n				inst.settings.maxDate = this._formatDate(inst, maxDate);\n			}\n			if ( "disabled" in settings ) {\n				if ( settings.disabled ) {\n					this._disableDatepicker(target);\n				} else {\n					this._enableDatepicker(target);\n				}\n			}\n			this._attachments($(target), inst);\n			this._autoSize(inst);\n			this._setDate(inst, date);\n			this._updateAlternate(inst);\n			this._updateDatepicker(inst);\n		}\n	},\n\n	// change method deprecated\n	_changeDatepicker: function(target, name, value) {\n		this._optionDatepicker(target, name, value);\n	},\n\n	/* Redraw the date picker attached to an input field or division.\n	 * @param  target  element - the target input field or division or span\n	 */\n	_refreshDatepicker: function(target) {\n		var inst = this._getInst(target);\n		if (inst) {\n			this._updateDatepicker(inst);\n		}\n	},\n\n	/* Set the dates for a jQuery selection.\n	 * @param  target element - the target input field or division or span\n	 * @param  date	Date - the new date\n	 */\n	_setDateDatepicker: function(target, date) {\n		var inst = this._getInst(target);\n		if (inst) {\n			this._setDate(inst, date);\n			this._updateDatepicker(inst);\n			this._updateAlternate(inst);\n		}\n	},\n\n	/* Get the date(s) for the first entry in a jQuery selection.\n	 * @param  target element - the target input field or division or span\n	 * @param  noDefault boolean - true if no default date is to be used\n	 * @return Date - the current date\n	 */\n	_getDateDatepicker: function(target, noDefault) {\n		var inst = this._getInst(target);\n		if (inst && !inst.inline) {\n			this._setDateFromField(inst, noDefault);\n		}\n		return (inst ? this._getDate(inst) : null);\n	},\n\n	/* Handle keystrokes. */\n	_doKeyDown: function(event) {\n		var onSelect, dateStr, sel,\n			inst = $.datepicker._getInst(event.target),\n			handled = true,\n			isRTL = inst.dpDiv.is(".ui-datepicker-rtl");\n\n		inst._keyEvent = true;\n		if ($.datepicker._datepickerShowing) {\n			switch (event.keyCode) {\n				case 9: $.datepicker._hideDatepicker();\n						handled = false;\n						break; // hide on tab out\n				case 13: sel = $("td." + $.datepicker._dayOverClass + ":not(." +\n									$.datepicker._currentClass + ")", inst.dpDiv);\n						if (sel[0]) {\n							$.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0]);\n						}\n\n						onSelect = $.datepicker._get(inst, "onSelect");\n						if (onSelect) {\n							dateStr = $.datepicker._formatDate(inst);\n\n							// trigger custom callback\n							onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);\n						} else {\n							$.datepicker._hideDatepicker();\n						}\n\n						return false; // don\'t submit the form\n				case 27: $.datepicker._hideDatepicker();\n						break; // hide on escape\n				case 33: $.datepicker._adjustDate(event.target, (event.ctrlKey ?\n							-$.datepicker._get(inst, "stepBigMonths") :\n							-$.datepicker._get(inst, "stepMonths")), "M");\n						break; // previous month/year on page up/+ ctrl\n				case 34: $.datepicker._adjustDate(event.target, (event.ctrlKey ?\n							+$.datepicker._get(inst, "stepBigMonths") :\n							+$.datepicker._get(inst, "stepMonths")), "M");\n						break; // next month/year on page down/+ ctrl\n				case 35: if (event.ctrlKey || event.metaKey) {\n							$.datepicker._clearDate(event.target);\n						}\n						handled = event.ctrlKey || event.metaKey;\n						break; // clear on ctrl or command +end\n				case 36: if (event.ctrlKey || event.metaKey) {\n							$.datepicker._gotoToday(event.target);\n						}\n						handled = event.ctrlKey || event.metaKey;\n						break; // current on ctrl or command +home\n				case 37: if (event.ctrlKey || event.metaKey) {\n							$.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D");\n						}\n						handled = event.ctrlKey || event.metaKey;\n						// -1 day on ctrl or command +left\n						if (event.originalEvent.altKey) {\n							$.datepicker._adjustDate(event.target, (event.ctrlKey ?\n								-$.datepicker._get(inst, "stepBigMonths") :\n								-$.datepicker._get(inst, "stepMonths")), "M");\n						}\n						// next month/year on alt +left on Mac\n						break;\n				case 38: if (event.ctrlKey || event.metaKey) {\n							$.datepicker._adjustDate(event.target, -7, "D");\n						}\n						handled = event.ctrlKey || event.metaKey;\n						break; // -1 week on ctrl or command +up\n				case 39: if (event.ctrlKey || event.metaKey) {\n							$.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D");\n						}\n						handled = event.ctrlKey || event.metaKey;\n						// +1 day on ctrl or command +right\n						if (event.originalEvent.altKey) {\n							$.datepicker._adjustDate(event.target, (event.ctrlKey ?\n								+$.datepicker._get(inst, "stepBigMonths") :\n								+$.datepicker._get(inst, "stepMonths")), "M");\n						}\n						// next month/year on alt +right\n						break;\n				case 40: if (event.ctrlKey || event.metaKey) {\n							$.datepicker._adjustDate(event.target, +7, "D");\n						}\n						handled = event.ctrlKey || event.metaKey;\n						break; // +1 week on ctrl or command +down\n				default: handled = false;\n			}\n		} else if (event.keyCode === 36 && event.ctrlKey) { // display the date picker on ctrl+home\n			$.datepicker._showDatepicker(this);\n		} else {\n			handled = false;\n		}\n\n		if (handled) {\n			event.preventDefault();\n			event.stopPropagation();\n		}\n	},\n\n	/* Filter entered characters - based on date format. */\n	_doKeyPress: function(event) {\n		var chars, chr,\n			inst = $.datepicker._getInst(event.target);\n\n		if ($.datepicker._get(inst, "constrainInput")) {\n			chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));\n			chr = String.fromCharCode(event.charCode == null ? event.keyCode : event.charCode);\n			return event.ctrlKey || event.metaKey || (chr < " " || !chars || chars.indexOf(chr) > -1);\n		}\n	},\n\n	/* Synchronise manual entry and field/alternate field. */\n	_doKeyUp: function(event) {\n		var date,\n			inst = $.datepicker._getInst(event.target);\n\n		if (inst.input.val() !== inst.lastVal) {\n			try {\n				date = $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),\n					(inst.input ? inst.input.val() : null),\n					$.datepicker._getFormatConfig(inst));\n\n				if (date) { // only if valid\n					$.datepicker._setDateFromField(inst);\n					$.datepicker._updateAlternate(inst);\n					$.datepicker._updateDatepicker(inst);\n				}\n			}\n			catch (err) {\n			}\n		}\n		return true;\n	},\n\n	/* Pop-up the date picker for a given input field.\n	 * If false returned from beforeShow event handler do not show.\n	 * @param  input  element - the input field attached to the date picker or\n	 *					event - if triggered by focus\n	 */\n	_showDatepicker: function(input) {\n		input = input.target || input;\n		if (input.nodeName.toLowerCase() !== "input") { // find from button/image trigger\n			input = $("input", input.parentNode)[0];\n		}\n\n		if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput === input) { // already here\n			return;\n		}\n\n		var inst, beforeShow, beforeShowSettings, isFixed,\n			offset, showAnim, duration;\n\n		inst = $.datepicker._getInst(input);\n		if ($.datepicker._curInst && $.datepicker._curInst !== inst) {\n			$.datepicker._curInst.dpDiv.stop(true, true);\n			if ( inst && $.datepicker._datepickerShowing ) {\n				$.datepicker._hideDatepicker( $.datepicker._curInst.input[0] );\n			}\n		}\n\n		beforeShow = $.datepicker._get(inst, "beforeShow");\n		beforeShowSettings = beforeShow ? beforeShow.apply(input, [input, inst]) : {};\n		if(beforeShowSettings === false){\n			return;\n		}\n		extendRemove(inst.settings, beforeShowSettings);\n\n		inst.lastVal = null;\n		$.datepicker._lastInput = input;\n		$.datepicker._setDateFromField(inst);\n\n		if ($.datepicker._inDialog) { // hide cursor\n			input.value = "";\n		}\n		if (!$.datepicker._pos) { // position below input\n			$.datepicker._pos = $.datepicker._findPos(input);\n			$.datepicker._pos[1] += input.offsetHeight; // add the height\n		}\n\n		isFixed = false;\n		$(input).parents().each(function() {\n			isFixed |= $(this).css("position") === "fixed";\n			return !isFixed;\n		});\n\n		offset = {left: $.datepicker._pos[0], top: $.datepicker._pos[1]};\n		$.datepicker._pos = null;\n		//to avoid flashes on Firefox\n		inst.dpDiv.empty();\n		// determine sizing offscreen\n		inst.dpDiv.css({position: "absolute", display: "block", top: "-1000px"});\n		$.datepicker._updateDatepicker(inst);\n		// fix width for dynamic number of date pickers\n		// and adjust position before showing\n		offset = $.datepicker._checkOffset(inst, offset, isFixed);\n		inst.dpDiv.css({position: ($.datepicker._inDialog && $.blockUI ?\n			"static" : (isFixed ? "fixed" : "absolute")), display: "none",\n			left: offset.left + "px", top: offset.top + "px"});\n\n		if (!inst.inline) {\n			showAnim = $.datepicker._get(inst, "showAnim");\n			duration = $.datepicker._get(inst, "duration");\n			inst.dpDiv.zIndex($(input).zIndex()+1);\n			$.datepicker._datepickerShowing = true;\n\n			if ( $.effects && $.effects.effect[ showAnim ] ) {\n				inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration);\n			} else {\n				inst.dpDiv[showAnim || "show"](showAnim ? duration : null);\n			}\n\n			if ( $.datepicker._shouldFocusInput( inst ) ) {\n				inst.input.focus();\n			}\n\n			$.datepicker._curInst = inst;\n		}\n	},\n\n	/* Generate the date picker content. */\n	_updateDatepicker: function(inst) {\n		this.maxRows = 4; //Reset the max number of rows being displayed (see #7043)\n		instActive = inst; // for delegate hover events\n		inst.dpDiv.empty().append(this._generateHTML(inst));\n		this._attachHandlers(inst);\n		inst.dpDiv.find("." + this._dayOverClass + " a").mouseover();\n\n		var origyearshtml,\n			numMonths = this._getNumberOfMonths(inst),\n			cols = numMonths[1],\n			width = 17;\n\n		inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("");\n		if (cols > 1) {\n			inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em");\n		}\n		inst.dpDiv[(numMonths[0] !== 1 || numMonths[1] !== 1 ? "add" : "remove") +\n			"Class"]("ui-datepicker-multi");\n		inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") +\n			"Class"]("ui-datepicker-rtl");\n\n		if (inst === $.datepicker._curInst && $.datepicker._datepickerShowing && $.datepicker._shouldFocusInput( inst ) ) {\n			inst.input.focus();\n		}\n\n		// deffered render of the years select (to avoid flashes on Firefox)\n		if( inst.yearshtml ){\n			origyearshtml = inst.yearshtml;\n			setTimeout(function(){\n				//assure that inst.yearshtml didn\'t change.\n				if( origyearshtml === inst.yearshtml && inst.yearshtml ){\n					inst.dpDiv.find("select.ui-datepicker-year:first").replaceWith(inst.yearshtml);\n				}\n				origyearshtml = inst.yearshtml = null;\n			}, 0);\n		}\n	},\n\n	// #6694 - don\'t focus the input if it\'s already focused\n	// this breaks the change event in IE\n	// Support: IE and jQuery <1.9\n	_shouldFocusInput: function( inst ) {\n		return inst.input && inst.input.is( ":visible" ) && !inst.input.is( ":disabled" ) && !inst.input.is( ":focus" );\n	},\n\n	/* Check positioning to remain on screen. */\n	_checkOffset: function(inst, offset, isFixed) {\n		var dpWidth = inst.dpDiv.outerWidth(),\n			dpHeight = inst.dpDiv.outerHeight(),\n			inputWidth = inst.input ? inst.input.outerWidth() : 0,\n			inputHeight = inst.input ? inst.input.outerHeight() : 0,\n			viewWidth = document.documentElement.clientWidth + (isFixed ? 0 : $(document).scrollLeft()),\n			viewHeight = document.documentElement.clientHeight + (isFixed ? 0 : $(document).scrollTop());\n\n		offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0);\n		offset.left -= (isFixed && offset.left === inst.input.offset().left) ? $(document).scrollLeft() : 0;\n		offset.top -= (isFixed && offset.top === (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;\n\n		// now check if datepicker is showing outside window viewport - move to a better place if so.\n		offset.left -= Math.min(offset.left, (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ?\n			Math.abs(offset.left + dpWidth - viewWidth) : 0);\n		offset.top -= Math.min(offset.top, (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ?\n			Math.abs(dpHeight + inputHeight) : 0);\n\n		return offset;\n	},\n\n	/* Find an object\'s position on the screen. */\n	_findPos: function(obj) {\n		var position,\n			inst = this._getInst(obj),\n			isRTL = this._get(inst, "isRTL");\n\n		while (obj && (obj.type === "hidden" || obj.nodeType !== 1 || $.expr.filters.hidden(obj))) {\n			obj = obj[isRTL ? "previousSibling" : "nextSibling"];\n		}\n\n		position = $(obj).offset();\n		return [position.left, position.top];\n	},\n\n	/* Hide the date picker from view.\n	 * @param  input  element - the input field attached to the date picker\n	 */\n	_hideDatepicker: function(input) {\n		var showAnim, duration, postProcess, onClose,\n			inst = this._curInst;\n\n		if (!inst || (input && inst !== $.data(input, PROP_NAME))) {\n			return;\n		}\n\n		if (this._datepickerShowing) {\n			showAnim = this._get(inst, "showAnim");\n			duration = this._get(inst, "duration");\n			postProcess = function() {\n				$.datepicker._tidyDialog(inst);\n			};\n\n			// DEPRECATED: after BC for 1.8.x $.effects[ showAnim ] is not needed\n			if ( $.effects && ( $.effects.effect[ showAnim ] || $.effects[ showAnim ] ) ) {\n				inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess);\n			} else {\n				inst.dpDiv[(showAnim === "slideDown" ? "slideUp" :\n					(showAnim === "fadeIn" ? "fadeOut" : "hide"))]((showAnim ? duration : null), postProcess);\n			}\n\n			if (!showAnim) {\n				postProcess();\n			}\n			this._datepickerShowing = false;\n\n			onClose = this._get(inst, "onClose");\n			if (onClose) {\n				onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst]);\n			}\n\n			this._lastInput = null;\n			if (this._inDialog) {\n				this._dialogInput.css({ position: "absolute", left: "0", top: "-100px" });\n				if ($.blockUI) {\n					$.unblockUI();\n					$("body").append(this.dpDiv);\n				}\n			}\n			this._inDialog = false;\n		}\n	},\n\n	/* Tidy up after a dialog display. */\n	_tidyDialog: function(inst) {\n		inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar");\n	},\n\n	/* Close date picker if clicked elsewhere. */\n	_checkExternalClick: function(event) {\n		if (!$.datepicker._curInst) {\n			return;\n		}\n\n		var $target = $(event.target),\n			inst = $.datepicker._getInst($target[0]);\n\n		if ( ( ( $target[0].id !== $.datepicker._mainDivId &&\n				$target.parents("#" + $.datepicker._mainDivId).length === 0 &&\n				!$target.hasClass($.datepicker.markerClassName) &&\n				!$target.closest("." + $.datepicker._triggerClass).length &&\n				$.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI) ) ) ||\n			( $target.hasClass($.datepicker.markerClassName) && $.datepicker._curInst !== inst ) ) {\n				$.datepicker._hideDatepicker();\n		}\n	},\n\n	/* Adjust one of the date sub-fields. */\n	_adjustDate: function(id, offset, period) {\n		var target = $(id),\n			inst = this._getInst(target[0]);\n\n		if (this._isDisabledDatepicker(target[0])) {\n			return;\n		}\n		this._adjustInstDate(inst, offset +\n			(period === "M" ? this._get(inst, "showCurrentAtPos") : 0), // undo positioning\n			period);\n		this._updateDatepicker(inst);\n	},\n\n	/* Action for current link. */\n	_gotoToday: function(id) {\n		var date,\n			target = $(id),\n			inst = this._getInst(target[0]);\n\n		if (this._get(inst, "gotoCurrent") && inst.currentDay) {\n			inst.selectedDay = inst.currentDay;\n			inst.drawMonth = inst.selectedMonth = inst.currentMonth;\n			inst.drawYear = inst.selectedYear = inst.currentYear;\n		} else {\n			date = new Date();\n			inst.selectedDay = date.getDate();\n			inst.drawMonth = inst.selectedMonth = date.getMonth();\n			inst.drawYear = inst.selectedYear = date.getFullYear();\n		}\n		this._notifyChange(inst);\n		this._adjustDate(target);\n	},\n\n	/* Action for selecting a new month/year. */\n	_selectMonthYear: function(id, select, period) {\n		var target = $(id),\n			inst = this._getInst(target[0]);\n\n		inst["selected" + (period === "M" ? "Month" : "Year")] =\n		inst["draw" + (period === "M" ? "Month" : "Year")] =\n			parseInt(select.options[select.selectedIndex].value,10);\n\n		this._notifyChange(inst);\n		this._adjustDate(target);\n	},\n\n	/* Action for selecting a day. */\n	_selectDay: function(id, month, year, td) {\n		var inst,\n			target = $(id);\n\n		if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {\n			return;\n		}\n\n		inst = this._getInst(target[0]);\n		inst.selectedDay = inst.currentDay = $("a", td).html();\n		inst.selectedMonth = inst.currentMonth = month;\n		inst.selectedYear = inst.currentYear = year;\n		this._selectDate(id, this._formatDate(inst,\n			inst.currentDay, inst.currentMonth, inst.currentYear));\n	},\n\n	/* Erase the input field and hide the date picker. */\n	_clearDate: function(id) {\n		var target = $(id);\n		this._selectDate(target, "");\n	},\n\n	/* Update the input field with the selected date. */\n	_selectDate: function(id, dateStr) {\n		var onSelect,\n			target = $(id),\n			inst = this._getInst(target[0]);\n\n		dateStr = (dateStr != null ? dateStr : this._formatDate(inst));\n		if (inst.input) {\n			inst.input.val(dateStr);\n		}\n		this._updateAlternate(inst);\n\n		onSelect = this._get(inst, "onSelect");\n		if (onSelect) {\n			onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst]);  // trigger custom callback\n		} else if (inst.input) {\n			inst.input.trigger("change"); // fire the change event\n		}\n\n		if (inst.inline){\n			this._updateDatepicker(inst);\n		} else {\n			this._hideDatepicker();\n			this._lastInput = inst.input[0];\n			if (typeof(inst.input[0]) !== "object") {\n				inst.input.focus(); // restore focus\n			}\n			this._lastInput = null;\n		}\n	},\n\n	/* Update any alternate field to synchronise with the main field. */\n	_updateAlternate: function(inst) {\n		var altFormat, date, dateStr,\n			altField = this._get(inst, "altField");\n\n		if (altField) { // update alternate field too\n			altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");\n			date = this._getDate(inst);\n			dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));\n			$(altField).each(function() { $(this).val(dateStr); });\n		}\n	},\n\n	/* Set as beforeShowDay function to prevent selection of weekends.\n	 * @param  date  Date - the date to customise\n	 * @return [boolean, string] - is this date selectable?, what is its CSS class?\n	 */\n	noWeekends: function(date) {\n		var day = date.getDay();\n		return [(day > 0 && day < 6), ""];\n	},\n\n	/* Set as calculateWeek to determine the week of the year based on the ISO 8601 definition.\n	 * @param  date  Date - the date to get the week for\n	 * @return  number - the number of the week within the year that contains this date\n	 */\n	iso8601Week: function(date) {\n		var time,\n			checkDate = new Date(date.getTime());\n\n		// Find Thursday of this week starting on Monday\n		checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7));\n\n		time = checkDate.getTime();\n		checkDate.setMonth(0); // Compare with Jan 1\n		checkDate.setDate(1);\n		return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;\n	},\n\n	/* Parse a string value into a date object.\n	 * See formatDate below for the possible formats.\n	 *\n	 * @param  format string - the expected format of the date\n	 * @param  value string - the date in the above format\n	 * @param  settings Object - attributes include:\n	 *					shortYearCutoff  number - the cutoff year for determining the century (optional)\n	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)\n	 *					dayNames		string[7] - names of the days from Sunday (optional)\n	 *					monthNamesShort string[12] - abbreviated names of the months (optional)\n	 *					monthNames		string[12] - names of the months (optional)\n	 * @return  Date - the extracted date value or null if value is blank\n	 */\n	parseDate: function (format, value, settings) {\n		if (format == null || value == null) {\n			throw "Invalid arguments";\n		}\n\n		value = (typeof value === "object" ? value.toString() : value + "");\n		if (value === "") {\n			return null;\n		}\n\n		var iFormat, dim, extra,\n			iValue = 0,\n			shortYearCutoffTemp = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff,\n			shortYearCutoff = (typeof shortYearCutoffTemp !== "string" ? shortYearCutoffTemp :\n				new Date().getFullYear() % 100 + parseInt(shortYearCutoffTemp, 10)),\n			dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,\n			dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,\n			monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,\n			monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,\n			year = -1,\n			month = -1,\n			day = -1,\n			doy = -1,\n			literal = false,\n			date,\n			// Check whether a format character is doubled\n			lookAhead = function(match) {\n				var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n				if (matches) {\n					iFormat++;\n				}\n				return matches;\n			},\n			// Extract a number from the string value\n			getNumber = function(match) {\n				var isDoubled = lookAhead(match),\n					size = (match === "@" ? 14 : (match === "!" ? 20 :\n					(match === "y" && isDoubled ? 4 : (match === "o" ? 3 : 2)))),\n					digits = new RegExp("^\\\\d{1," + size + "}"),\n					num = value.substring(iValue).match(digits);\n				if (!num) {\n					throw "Missing number at position " + iValue;\n				}\n				iValue += num[0].length;\n				return parseInt(num[0], 10);\n			},\n			// Extract a name from the string value and convert to an index\n			getName = function(match, shortNames, longNames) {\n				var index = -1,\n					names = $.map(lookAhead(match) ? longNames : shortNames, function (v, k) {\n						return [ [k, v] ];\n					}).sort(function (a, b) {\n						return -(a[1].length - b[1].length);\n					});\n\n				$.each(names, function (i, pair) {\n					var name = pair[1];\n					if (value.substr(iValue, name.length).toLowerCase() === name.toLowerCase()) {\n						index = pair[0];\n						iValue += name.length;\n						return false;\n					}\n				});\n				if (index !== -1) {\n					return index + 1;\n				} else {\n					throw "Unknown name at position " + iValue;\n				}\n			},\n			// Confirm that a literal character matches the string value\n			checkLiteral = function() {\n				if (value.charAt(iValue) !== format.charAt(iFormat)) {\n					throw "Unexpected literal at position " + iValue;\n				}\n				iValue++;\n			};\n\n		for (iFormat = 0; iFormat < format.length; iFormat++) {\n			if (literal) {\n				if (format.charAt(iFormat) === "\'" && !lookAhead("\'")) {\n					literal = false;\n				} else {\n					checkLiteral();\n				}\n			} else {\n				switch (format.charAt(iFormat)) {\n					case "d":\n						day = getNumber("d");\n						break;\n					case "D":\n						getName("D", dayNamesShort, dayNames);\n						break;\n					case "o":\n						doy = getNumber("o");\n						break;\n					case "m":\n						month = getNumber("m");\n						break;\n					case "M":\n						month = getName("M", monthNamesShort, monthNames);\n						break;\n					case "y":\n						year = getNumber("y");\n						break;\n					case "@":\n						date = new Date(getNumber("@"));\n						year = date.getFullYear();\n						month = date.getMonth() + 1;\n						day = date.getDate();\n						break;\n					case "!":\n						date = new Date((getNumber("!") - this._ticksTo1970) / 10000);\n						year = date.getFullYear();\n						month = date.getMonth() + 1;\n						day = date.getDate();\n						break;\n					case "\'":\n						if (lookAhead("\'")){\n							checkLiteral();\n						} else {\n							literal = true;\n						}\n						break;\n					default:\n						checkLiteral();\n				}\n			}\n		}\n\n		if (iValue < value.length){\n			extra = value.substr(iValue);\n			if (!/^\\s+/.test(extra)) {\n				throw "Extra/unparsed characters found in date: " + extra;\n			}\n		}\n\n		if (year === -1) {\n			year = new Date().getFullYear();\n		} else if (year < 100) {\n			year += new Date().getFullYear() - new Date().getFullYear() % 100 +\n				(year <= shortYearCutoff ? 0 : -100);\n		}\n\n		if (doy > -1) {\n			month = 1;\n			day = doy;\n			do {\n				dim = this._getDaysInMonth(year, month - 1);\n				if (day <= dim) {\n					break;\n				}\n				month++;\n				day -= dim;\n			} while (true);\n		}\n\n		date = this._daylightSavingAdjust(new Date(year, month - 1, day));\n		if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {\n			throw "Invalid date"; // E.g. 31/02/00\n		}\n		return date;\n	},\n\n	/* Standard date formats. */\n	ATOM: "yy-mm-dd", // RFC 3339 (ISO 8601)\n	COOKIE: "D, dd M yy",\n	ISO_8601: "yy-mm-dd",\n	RFC_822: "D, d M y",\n	RFC_850: "DD, dd-M-y",\n	RFC_1036: "D, d M y",\n	RFC_1123: "D, d M yy",\n	RFC_2822: "D, d M yy",\n	RSS: "D, d M y", // RFC 822\n	TICKS: "!",\n	TIMESTAMP: "@",\n	W3C: "yy-mm-dd", // ISO 8601\n\n	_ticksTo1970: (((1970 - 1) * 365 + Math.floor(1970 / 4) - Math.floor(1970 / 100) +\n		Math.floor(1970 / 400)) * 24 * 60 * 60 * 10000000),\n\n	/* Format a date object into a string value.\n	 * The format can be combinations of the following:\n	 * d  - day of month (no leading zero)\n	 * dd - day of month (two digit)\n	 * o  - day of year (no leading zeros)\n	 * oo - day of year (three digit)\n	 * D  - day name short\n	 * DD - day name long\n	 * m  - month of year (no leading zero)\n	 * mm - month of year (two digit)\n	 * M  - month name short\n	 * MM - month name long\n	 * y  - year (two digit)\n	 * yy - year (four digit)\n	 * @ - Unix timestamp (ms since 01/01/1970)\n	 * ! - Windows ticks (100ns since 01/01/0001)\n	 * "..." - literal text\n	 * \'\' - single quote\n	 *\n	 * @param  format string - the desired format of the date\n	 * @param  date Date - the date value to format\n	 * @param  settings Object - attributes include:\n	 *					dayNamesShort	string[7] - abbreviated names of the days from Sunday (optional)\n	 *					dayNames		string[7] - names of the days from Sunday (optional)\n	 *					monthNamesShort string[12] - abbreviated names of the months (optional)\n	 *					monthNames		string[12] - names of the months (optional)\n	 * @return  string - the date in the above format\n	 */\n	formatDate: function (format, date, settings) {\n		if (!date) {\n			return "";\n		}\n\n		var iFormat,\n			dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort,\n			dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames,\n			monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort,\n			monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames,\n			// Check whether a format character is doubled\n			lookAhead = function(match) {\n				var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n				if (matches) {\n					iFormat++;\n				}\n				return matches;\n			},\n			// Format a number, with leading zero if necessary\n			formatNumber = function(match, value, len) {\n				var num = "" + value;\n				if (lookAhead(match)) {\n					while (num.length < len) {\n						num = "0" + num;\n					}\n				}\n				return num;\n			},\n			// Format a name, short or long as requested\n			formatName = function(match, value, shortNames, longNames) {\n				return (lookAhead(match) ? longNames[value] : shortNames[value]);\n			},\n			output = "",\n			literal = false;\n\n		if (date) {\n			for (iFormat = 0; iFormat < format.length; iFormat++) {\n				if (literal) {\n					if (format.charAt(iFormat) === "\'" && !lookAhead("\'")) {\n						literal = false;\n					} else {\n						output += format.charAt(iFormat);\n					}\n				} else {\n					switch (format.charAt(iFormat)) {\n						case "d":\n							output += formatNumber("d", date.getDate(), 2);\n							break;\n						case "D":\n							output += formatName("D", date.getDay(), dayNamesShort, dayNames);\n							break;\n						case "o":\n							output += formatNumber("o",\n								Math.round((new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime() - new Date(date.getFullYear(), 0, 0).getTime()) / 86400000), 3);\n							break;\n						case "m":\n							output += formatNumber("m", date.getMonth() + 1, 2);\n							break;\n						case "M":\n							output += formatName("M", date.getMonth(), monthNamesShort, monthNames);\n							break;\n						case "y":\n							output += (lookAhead("y") ? date.getFullYear() :\n								(date.getYear() % 100 < 10 ? "0" : "") + date.getYear() % 100);\n							break;\n						case "@":\n							output += date.getTime();\n							break;\n						case "!":\n							output += date.getTime() * 10000 + this._ticksTo1970;\n							break;\n						case "\'":\n							if (lookAhead("\'")) {\n								output += "\'";\n							} else {\n								literal = true;\n							}\n							break;\n						default:\n							output += format.charAt(iFormat);\n					}\n				}\n			}\n		}\n		return output;\n	},\n\n	/* Extract all possible characters from the date format. */\n	_possibleChars: function (format) {\n		var iFormat,\n			chars = "",\n			literal = false,\n			// Check whether a format character is doubled\n			lookAhead = function(match) {\n				var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) === match);\n				if (matches) {\n					iFormat++;\n				}\n				return matches;\n			};\n\n		for (iFormat = 0; iFormat < format.length; iFormat++) {\n			if (literal) {\n				if (format.charAt(iFormat) === "\'" && !lookAhead("\'")) {\n					literal = false;\n				} else {\n					chars += format.charAt(iFormat);\n				}\n			} else {\n				switch (format.charAt(iFormat)) {\n					case "d": case "m": case "y": case "@":\n						chars += "0123456789";\n						break;\n					case "D": case "M":\n						return null; // Accept anything\n					case "\'":\n						if (lookAhead("\'")) {\n							chars += "\'";\n						} else {\n							literal = true;\n						}\n						break;\n					default:\n						chars += format.charAt(iFormat);\n				}\n			}\n		}\n		return chars;\n	},\n\n	/* Get a setting value, defaulting if necessary. */\n	_get: function(inst, name) {\n		return inst.settings[name] !== undefined ?\n			inst.settings[name] : this._defaults[name];\n	},\n\n	/* Parse existing date and initialise date picker. */\n	_setDateFromField: function(inst, noDefault) {\n		if (inst.input.val() === inst.lastVal) {\n			return;\n		}\n\n		var dateFormat = this._get(inst, "dateFormat"),\n			dates = inst.lastVal = inst.input ? inst.input.val() : null,\n			defaultDate = this._getDefaultDate(inst),\n			date = defaultDate,\n			settings = this._getFormatConfig(inst);\n\n		try {\n			date = this.parseDate(dateFormat, dates, settings) || defaultDate;\n		} catch (event) {\n			dates = (noDefault ? "" : dates);\n		}\n		inst.selectedDay = date.getDate();\n		inst.drawMonth = inst.selectedMonth = date.getMonth();\n		inst.drawYear = inst.selectedYear = date.getFullYear();\n		inst.currentDay = (dates ? date.getDate() : 0);\n		inst.currentMonth = (dates ? date.getMonth() : 0);\n		inst.currentYear = (dates ? date.getFullYear() : 0);\n		this._adjustInstDate(inst);\n	},\n\n	/* Retrieve the default date shown on opening. */\n	_getDefaultDate: function(inst) {\n		return this._restrictMinMax(inst,\n			this._determineDate(inst, this._get(inst, "defaultDate"), new Date()));\n	},\n\n	/* A date may be specified as an exact value or a relative one. */\n	_determineDate: function(inst, date, defaultDate) {\n		var offsetNumeric = function(offset) {\n				var date = new Date();\n				date.setDate(date.getDate() + offset);\n				return date;\n			},\n			offsetString = function(offset) {\n				try {\n					return $.datepicker.parseDate($.datepicker._get(inst, "dateFormat"),\n						offset, $.datepicker._getFormatConfig(inst));\n				}\n				catch (e) {\n					// Ignore\n				}\n\n				var date = (offset.toLowerCase().match(/^c/) ?\n					$.datepicker._getDate(inst) : null) || new Date(),\n					year = date.getFullYear(),\n					month = date.getMonth(),\n					day = date.getDate(),\n					pattern = /([+\\-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g,\n					matches = pattern.exec(offset);\n\n				while (matches) {\n					switch (matches[2] || "d") {\n						case "d" : case "D" :\n							day += parseInt(matches[1],10); break;\n						case "w" : case "W" :\n							day += parseInt(matches[1],10) * 7; break;\n						case "m" : case "M" :\n							month += parseInt(matches[1],10);\n							day = Math.min(day, $.datepicker._getDaysInMonth(year, month));\n							break;\n						case "y": case "Y" :\n							year += parseInt(matches[1],10);\n							day = Math.min(day, $.datepicker._getDaysInMonth(year, month));\n							break;\n					}\n					matches = pattern.exec(offset);\n				}\n				return new Date(year, month, day);\n			},\n			newDate = (date == null || date === "" ? defaultDate : (typeof date === "string" ? offsetString(date) :\n				(typeof date === "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : new Date(date.getTime()))));\n\n		newDate = (newDate && newDate.toString() === "Invalid Date" ? defaultDate : newDate);\n		if (newDate) {\n			newDate.setHours(0);\n			newDate.setMinutes(0);\n			newDate.setSeconds(0);\n			newDate.setMilliseconds(0);\n		}\n		return this._daylightSavingAdjust(newDate);\n	},\n\n	/* Handle switch to/from daylight saving.\n	 * Hours may be non-zero on daylight saving cut-over:\n	 * > 12 when midnight changeover, but then cannot generate\n	 * midnight datetime, so jump to 1AM, otherwise reset.\n	 * @param  date  (Date) the date to check\n	 * @return  (Date) the corrected date\n	 */\n	_daylightSavingAdjust: function(date) {\n		if (!date) {\n			return null;\n		}\n		date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);\n		return date;\n	},\n\n	/* Set the date(s) directly. */\n	_setDate: function(inst, date, noChange) {\n		var clear = !date,\n			origMonth = inst.selectedMonth,\n			origYear = inst.selectedYear,\n			newDate = this._restrictMinMax(inst, this._determineDate(inst, date, new Date()));\n\n		inst.selectedDay = inst.currentDay = newDate.getDate();\n		inst.drawMonth = inst.selectedMonth = inst.currentMonth = newDate.getMonth();\n		inst.drawYear = inst.selectedYear = inst.currentYear = newDate.getFullYear();\n		if ((origMonth !== inst.selectedMonth || origYear !== inst.selectedYear) && !noChange) {\n			this._notifyChange(inst);\n		}\n		this._adjustInstDate(inst);\n		if (inst.input) {\n			inst.input.val(clear ? "" : this._formatDate(inst));\n		}\n	},\n\n	/* Retrieve the date(s) directly. */\n	_getDate: function(inst) {\n		var startDate = (!inst.currentYear || (inst.input && inst.input.val() === "") ? null :\n			this._daylightSavingAdjust(new Date(\n			inst.currentYear, inst.currentMonth, inst.currentDay)));\n			return startDate;\n	},\n\n	/* Attach the onxxx handlers.  These are declared statically so\n	 * they work with static code transformers like Caja.\n	 */\n	_attachHandlers: function(inst) {\n		var stepMonths = this._get(inst, "stepMonths"),\n			id = "#" + inst.id.replace( /\\\\\\\\/g, "\\\\" );\n		inst.dpDiv.find("[data-handler]").map(function () {\n			var handler = {\n				prev: function () {\n					$.datepicker._adjustDate(id, -stepMonths, "M");\n				},\n				next: function () {\n					$.datepicker._adjustDate(id, +stepMonths, "M");\n				},\n				hide: function () {\n					$.datepicker._hideDatepicker();\n				},\n				today: function () {\n					$.datepicker._gotoToday(id);\n				},\n				selectDay: function () {\n					$.datepicker._selectDay(id, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this);\n					return false;\n				},\n				selectMonth: function () {\n					$.datepicker._selectMonthYear(id, this, "M");\n					return false;\n				},\n				selectYear: function () {\n					$.datepicker._selectMonthYear(id, this, "Y");\n					return false;\n				}\n			};\n			$(this).bind(this.getAttribute("data-event"), handler[this.getAttribute("data-handler")]);\n		});\n	},\n\n	/* Generate the HTML for the current state of the date picker. */\n	_generateHTML: function(inst) {\n		var maxDraw, prevText, prev, nextText, next, currentText, gotoDate,\n			controls, buttonPanel, firstDay, showWeek, dayNames, dayNamesMin,\n			monthNames, monthNamesShort, beforeShowDay, showOtherMonths,\n			selectOtherMonths, defaultDate, html, dow, row, group, col, selectedDate,\n			cornerClass, calender, thead, day, daysInMonth, leadDays, curRows, numRows,\n			printDate, dRow, tbody, daySettings, otherMonth, unselectable,\n			tempDate = new Date(),\n			today = this._daylightSavingAdjust(\n				new Date(tempDate.getFullYear(), tempDate.getMonth(), tempDate.getDate())), // clear time\n			isRTL = this._get(inst, "isRTL"),\n			showButtonPanel = this._get(inst, "showButtonPanel"),\n			hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext"),\n			navigationAsDateFormat = this._get(inst, "navigationAsDateFormat"),\n			numMonths = this._getNumberOfMonths(inst),\n			showCurrentAtPos = this._get(inst, "showCurrentAtPos"),\n			stepMonths = this._get(inst, "stepMonths"),\n			isMultiMonth = (numMonths[0] !== 1 || numMonths[1] !== 1),\n			currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) :\n				new Date(inst.currentYear, inst.currentMonth, inst.currentDay))),\n			minDate = this._getMinMaxDate(inst, "min"),\n			maxDate = this._getMinMaxDate(inst, "max"),\n			drawMonth = inst.drawMonth - showCurrentAtPos,\n			drawYear = inst.drawYear;\n\n		if (drawMonth < 0) {\n			drawMonth += 12;\n			drawYear--;\n		}\n		if (maxDate) {\n			maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(),\n				maxDate.getMonth() - (numMonths[0] * numMonths[1]) + 1, maxDate.getDate()));\n			maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);\n			while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {\n				drawMonth--;\n				if (drawMonth < 0) {\n					drawMonth = 11;\n					drawYear--;\n				}\n			}\n		}\n		inst.drawMonth = drawMonth;\n		inst.drawYear = drawYear;\n\n		prevText = this._get(inst, "prevText");\n		prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText,\n			this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)),\n			this._getFormatConfig(inst)));\n\n		prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ?\n			"<a class=\'ui-datepicker-prev ui-corner-all\' data-handler=\'prev\' data-event=\'click\'" +\n			" title=\'" + t(prevText) + "\'><i class=\'icon-arrow-" + ( isRTL ? "right" : "left") + "\'></i> " + t(prevText) + "</a>" :\n			(hideIfNoPrevNext ? "" : "<a class=\'ui-datepicker-prev ui-corner-all ui-state-disabled\' title=\'"+ t(prevText) +"\'><span class=\'ui-icon ui-icon-circle-triangle-" + ( isRTL ? "e" : "w") + "\'>" + t(prevText) + "</span></a>"));\n\n		nextText = this._get(inst, "nextText");\n		nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText,\n			this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)),\n			this._getFormatConfig(inst)));\n\n		next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ?\n			"<a class=\'ui-datepicker-next ui-corner-all\' data-handler=\'next\' data-event=\'click\'" +\n			" title=\'" + t(nextText) + "\'>" + t(nextText) + " <i class=\'icon-arrow-" + ( isRTL ? "left" : "right") + "\'></i></a>" :\n			(hideIfNoPrevNext ? "" : "<a class=\'ui-datepicker-next ui-corner-all ui-state-disabled\' title=\'"+ t(nextText) + "\'><span class=\'ui-icon ui-icon-circle-triangle-" + ( isRTL ? "w" : "e") + "\'>" + t(nextText) + "</span></a>"));\n\n		currentText = this._get(inst, "currentText");\n		gotoDate = (this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today);\n		currentText = (!navigationAsDateFormat ? currentText :\n			this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));\n\n		controls = (!inst.inline ? "<button type=\'button\' class=\'ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all\' data-handler=\'hide\' data-event=\'click\'>" +\n			this._get(inst, "closeText") + "</button>" : "");\n\n		buttonPanel = (showButtonPanel) ? "<div class=\'ui-datepicker-buttonpane ui-widget-content\'>" + (isRTL ? controls : "") +\n			(this._isInRange(inst, gotoDate) ? "<button type=\'button\' class=\'ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all\' data-handler=\'today\' data-event=\'click\'" +\n			">" + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : "";\n\n		firstDay = parseInt(this._get(inst, "firstDay"),10);\n		firstDay = (isNaN(firstDay) ? 0 : firstDay);\n\n		showWeek = this._get(inst, "showWeek");\n		dayNames = this._get(inst, "dayNames");\n		dayNamesMin = this._get(inst, "dayNamesMin");\n		monthNames = this._get(inst, "monthNames");\n		monthNamesShort = this._get(inst, "monthNamesShort");\n		beforeShowDay = this._get(inst, "beforeShowDay");\n		showOtherMonths = this._get(inst, "showOtherMonths");\n		selectOtherMonths = this._get(inst, "selectOtherMonths");\n		defaultDate = this._getDefaultDate(inst);\n		html = "";\n		dow;\n		for (row = 0; row < numMonths[0]; row++) {\n			group = "";\n			this.maxRows = 4;\n			for (col = 0; col < numMonths[1]; col++) {\n				selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));\n				cornerClass = " ui-corner-all";\n				calender = "";\n				if (isMultiMonth) {\n					calender += "<div class=\'ui-datepicker-group";\n					if (numMonths[1] > 1) {\n						switch (col) {\n							case 0: calender += " ui-datepicker-group-first";\n								cornerClass = " ui-corner-" + (isRTL ? "right" : "left"); break;\n							case numMonths[1]-1: calender += " ui-datepicker-group-last";\n								cornerClass = " ui-corner-" + (isRTL ? "left" : "right"); break;\n							default: calender += " ui-datepicker-group-middle"; cornerClass = ""; break;\n						}\n					}\n					calender += "\'>";\n				}\n				calender += "<div class=\'ui-datepicker-header ui-widget-header ui-helper-clearfix" + cornerClass + "\'>" +\n					(/all|left/.test(cornerClass) && row === 0 ? (isRTL ? next : prev) : "") +\n					(/all|right/.test(cornerClass) && row === 0 ? (isRTL ? prev : next) : "") +\n					this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate,\n					row > 0 || col > 0, monthNames, monthNamesShort) + // draw month headers\n					"</div><table class=\'ui-datepicker-calendar\'><thead>" +\n					"<tr>";\n				thead = (showWeek ? "<th class=\'ui-datepicker-week-col\'>" + this._get(inst, "weekHeader") + "</th>" : "");\n				for (dow = 0; dow < 7; dow++) { // days of the week\n					day = (dow + firstDay) % 7;\n					thead += "<th" + ((dow + firstDay + 6) % 7 >= 5 ? " class=\'ui-datepicker-week-end\'" : "") + ">" +\n						"<span title=\'" + t(dayNames[day]) + "\'>" + t(dayNamesMin[day]) + "</span></th>";\n				}\n				calender += thead + "</tr></thead><tbody>";\n				daysInMonth = this._getDaysInMonth(drawYear, drawMonth);\n				if (drawYear === inst.selectedYear && drawMonth === inst.selectedMonth) {\n					inst.selectedDay = Math.min(inst.selectedDay, daysInMonth);\n				}\n				leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;\n				curRows = Math.ceil((leadDays + daysInMonth) / 7); // calculate the number of rows to generate\n				numRows = (isMultiMonth ? this.maxRows > curRows ? this.maxRows : curRows : curRows); //If multiple months, use the higher number of rows (see #7043)\n				this.maxRows = numRows;\n				printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));\n				for (dRow = 0; dRow < numRows; dRow++) { // create date picker rows\n					calender += "<tr>";\n					tbody = (!showWeek ? "" : "<td class=\'ui-datepicker-week-col\'>" +\n						this._get(inst, "calculateWeek")(printDate) + "</td>");\n					for (dow = 0; dow < 7; dow++) { // create date picker days\n						daySettings = (beforeShowDay ?\n							beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]);\n						otherMonth = (printDate.getMonth() !== drawMonth);\n						unselectable = (otherMonth && !selectOtherMonths) || !daySettings[0] ||\n							(minDate && printDate < minDate) || (maxDate && printDate > maxDate);\n						tbody += "<td class=\'" +\n							((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + // highlight weekends\n							(otherMonth ? " ui-datepicker-other-month" : "") + // highlight days from other months\n							((printDate.getTime() === selectedDate.getTime() && drawMonth === inst.selectedMonth && inst._keyEvent) || // user pressed key\n							(defaultDate.getTime() === printDate.getTime() && defaultDate.getTime() === selectedDate.getTime()) ?\n							// or defaultDate is current printedDate and defaultDate is selectedDate\n							" " + this._dayOverClass : "") + // highlight selected day\n							(unselectable ? " " + this._unselectableClass + " ui-state-disabled": "") +  // highlight unselectable days\n							(otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + // highlight custom dates\n							(printDate.getTime() === currentDate.getTime() ? " " + this._currentClass : "") + // highlight selected day\n							(printDate.getTime() === today.getTime() ? " ui-datepicker-today" : "")) + "\'" + // highlight today (if different)\n							((!otherMonth || showOtherMonths) && daySettings[2] ? " title=\'" + daySettings[2].replace(/\'/g, "&#39;") + "\'" : "") + // cell title\n							(unselectable ? "" : " data-handler=\'selectDay\' data-event=\'click\' data-month=\'" + printDate.getMonth() + "\' data-year=\'" + printDate.getFullYear() + "\'") + ">" + // actions\n							(otherMonth && !showOtherMonths ? "&#xa0;" : // display for other months\n							(unselectable ? "<span class=\'ui-state-default\'>" + printDate.getDate() + "</span>" : "<a class=\'ui-state-default" +\n							(printDate.getTime() === today.getTime() ? " ui-state-highlight" : "") +\n							(printDate.getTime() === currentDate.getTime() ? " ui-state-active" : "") + // highlight selected day\n							(otherMonth ? " ui-priority-secondary" : "") + // distinguish dates from other months\n							"\' href=\'#\'>" + printDate.getDate() + "</a>")) + "</td>"; // display selectable date\n						printDate.setDate(printDate.getDate() + 1);\n						printDate = this._daylightSavingAdjust(printDate);\n					}\n					calender += tbody + "</tr>";\n				}\n				drawMonth++;\n				if (drawMonth > 11) {\n					drawMonth = 0;\n					drawYear++;\n				}\n				calender += "</tbody></table>" + (isMultiMonth ? "</div>" +\n							((numMonths[0] > 0 && col === numMonths[1]-1) ? "<div class=\'ui-datepicker-row-break\'></div>" : "") : "");\n				group += calender;\n			}\n			html += group;\n		}\n		html += buttonPanel;\n		inst._keyEvent = false;\n		return html;\n	},\n\n	/* Generate the month and year header. */\n	_generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate,\n			secondary, monthNames, monthNamesShort) {\n\n		var inMinYear, inMaxYear, month, years, thisYear, determineYear, year, endYear,\n			changeMonth = this._get(inst, "changeMonth"),\n			changeYear = this._get(inst, "changeYear"),\n			showMonthAfterYear = this._get(inst, "showMonthAfterYear"),\n			html = "<div class=\'ui-datepicker-title\'>",\n			monthHtml = "";\n\n		// month selection\n		if (secondary || !changeMonth) {\n			monthHtml += "<span class=\'ui-datepicker-month\'>" + t(monthNames[drawMonth]) + "</span>";\n		} else {\n			inMinYear = (minDate && minDate.getFullYear() === drawYear);\n			inMaxYear = (maxDate && maxDate.getFullYear() === drawYear);\n			monthHtml += "<select class=\'ui-datepicker-month\' data-handler=\'selectMonth\' data-event=\'change\'>";\n			for ( month = 0; month < 12; month++) {\n				if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {\n					monthHtml += "<option value=\'" + month + "\'" +\n						(month === drawMonth ? " selected=\'selected\'" : "") +\n						">" + t(monthNamesShort[month]) + "</option>";\n				}\n			}\n			monthHtml += "</select>";\n		}\n\n		if (!showMonthAfterYear) {\n			html += monthHtml + (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "");\n		}\n\n		// year selection\n		if ( !inst.yearshtml ) {\n			inst.yearshtml = "";\n			if (secondary || !changeYear) {\n				html += "<span class=\'ui-datepicker-year\'>" + drawYear + "</span>";\n			} else {\n				// determine range of years to display\n				years = this._get(inst, "yearRange").split(":");\n				thisYear = new Date().getFullYear();\n				determineYear = function(value) {\n					var year = (value.match(/c[+\\-].*/) ? drawYear + parseInt(value.substring(1), 10) :\n						(value.match(/[+\\-].*/) ? thisYear + parseInt(value, 10) :\n						parseInt(value, 10)));\n					return (isNaN(year) ? thisYear : year);\n				};\n				year = determineYear(years[0]);\n				endYear = Math.max(year, determineYear(years[1] || ""));\n				year = (minDate ? Math.max(year, minDate.getFullYear()) : year);\n				endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);\n				inst.yearshtml += "<select class=\'ui-datepicker-year\' data-handler=\'selectYear\' data-event=\'change\'>";\n				for (; year <= endYear; year++) {\n					inst.yearshtml += "<option value=\'" + year + "\'" +\n						(year === drawYear ? " selected=\'selected\'" : "") +\n						">" + year + "</option>";\n				}\n				inst.yearshtml += "</select>";\n\n				html += inst.yearshtml;\n				inst.yearshtml = null;\n			}\n		}\n\n		html += this._get(inst, "yearSuffix");\n		if (showMonthAfterYear) {\n			html += (secondary || !(changeMonth && changeYear) ? "&#xa0;" : "") + monthHtml;\n		}\n		html += "</div>"; // Close datepicker_header\n		return html;\n	},\n\n	/* Adjust one of the date sub-fields. */\n	_adjustInstDate: function(inst, offset, period) {\n		var year = inst.drawYear + (period === "Y" ? offset : 0),\n			month = inst.drawMonth + (period === "M" ? offset : 0),\n			day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period === "D" ? offset : 0),\n			date = this._restrictMinMax(inst, this._daylightSavingAdjust(new Date(year, month, day)));\n\n		inst.selectedDay = date.getDate();\n		inst.drawMonth = inst.selectedMonth = date.getMonth();\n		inst.drawYear = inst.selectedYear = date.getFullYear();\n		if (period === "M" || period === "Y") {\n			this._notifyChange(inst);\n		}\n	},\n\n	/* Ensure a date is within any min/max bounds. */\n	_restrictMinMax: function(inst, date) {\n		var minDate = this._getMinMaxDate(inst, "min"),\n			maxDate = this._getMinMaxDate(inst, "max"),\n			newDate = (minDate && date < minDate ? minDate : date);\n		return (maxDate && newDate > maxDate ? maxDate : newDate);\n	},\n\n	/* Notify change of month/year. */\n	_notifyChange: function(inst) {\n		var onChange = this._get(inst, "onChangeMonthYear");\n		if (onChange) {\n			onChange.apply((inst.input ? inst.input[0] : null),\n				[inst.selectedYear, inst.selectedMonth + 1, inst]);\n		}\n	},\n\n	/* Determine the number of months to show. */\n	_getNumberOfMonths: function(inst) {\n		var numMonths = this._get(inst, "numberOfMonths");\n		return (numMonths == null ? [1, 1] : (typeof numMonths === "number" ? [1, numMonths] : numMonths));\n	},\n\n	/* Determine the current maximum date - ensure no time components are set. */\n	_getMinMaxDate: function(inst, minMax) {\n		return this._determineDate(inst, this._get(inst, minMax + "Date"), null);\n	},\n\n	/* Find the number of days in a given month. */\n	_getDaysInMonth: function(year, month) {\n		return 32 - this._daylightSavingAdjust(new Date(year, month, 32)).getDate();\n	},\n\n	/* Find the day of the week of the first of a month. */\n	_getFirstDayOfMonth: function(year, month) {\n		return new Date(year, month, 1).getDay();\n	},\n\n	/* Determines if we should allow a "next/prev" month display change. */\n	_canAdjustMonth: function(inst, offset, curYear, curMonth) {\n		var numMonths = this._getNumberOfMonths(inst),\n			date = this._daylightSavingAdjust(new Date(curYear,\n			curMonth + (offset < 0 ? offset : numMonths[0] * numMonths[1]), 1));\n\n		if (offset < 0) {\n			date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()));\n		}\n		return this._isInRange(inst, date);\n	},\n\n	/* Is the given date in the accepted range? */\n	_isInRange: function(inst, date) {\n		var yearSplit, currentYear,\n			minDate = this._getMinMaxDate(inst, "min"),\n			maxDate = this._getMinMaxDate(inst, "max"),\n			minYear = null,\n			maxYear = null,\n			years = this._get(inst, "yearRange");\n			if (years){\n				yearSplit = years.split(":");\n				currentYear = new Date().getFullYear();\n				minYear = parseInt(yearSplit[0], 10);\n				maxYear = parseInt(yearSplit[1], 10);\n				if ( yearSplit[0].match(/[+\\-].*/) ) {\n					minYear += currentYear;\n				}\n				if ( yearSplit[1].match(/[+\\-].*/) ) {\n					maxYear += currentYear;\n				}\n			}\n\n		return ((!minDate || date.getTime() >= minDate.getTime()) &&\n			(!maxDate || date.getTime() <= maxDate.getTime()) &&\n			(!minYear || date.getFullYear() >= minYear) &&\n			(!maxYear || date.getFullYear() <= maxYear));\n	},\n\n	/* Provide the configuration settings for formatting/parsing. */\n	_getFormatConfig: function(inst) {\n		var shortYearCutoff = this._get(inst, "shortYearCutoff");\n		shortYearCutoff = (typeof shortYearCutoff !== "string" ? shortYearCutoff :\n			new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));\n		return {shortYearCutoff: shortYearCutoff,\n			dayNamesShort: this._get(inst, "dayNamesShort"), dayNames: this._get(inst, "dayNames"),\n			monthNamesShort: this._get(inst, "monthNamesShort"), monthNames: this._get(inst, "monthNames")};\n	},\n\n	/* Format the given date for display. */\n	_formatDate: function(inst, day, month, year) {\n		if (!day) {\n			inst.currentDay = inst.selectedDay;\n			inst.currentMonth = inst.selectedMonth;\n			inst.currentYear = inst.selectedYear;\n		}\n		var date = (day ? (typeof day === "object" ? day :\n			this._daylightSavingAdjust(new Date(year, month, day))) :\n			this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));\n		return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst));\n	}\n});\n\n/*\n * Bind hover events for datepicker elements.\n * Done via delegate so the binding only occurs once in the lifetime of the parent div.\n * Global instActive, set by _updateDatepicker allows the handlers to find their way back to the active picker.\n */\nfunction bindHover(dpDiv) {\n	var selector = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";\n	return dpDiv.delegate(selector, "mouseout", function() {\n			$(this).removeClass("ui-state-hover");\n			if (this.className.indexOf("ui-datepicker-prev") !== -1) {\n				$(this).removeClass("ui-datepicker-prev-hover");\n			}\n			if (this.className.indexOf("ui-datepicker-next") !== -1) {\n				$(this).removeClass("ui-datepicker-next-hover");\n			}\n		})\n		.delegate(selector, "mouseover", function(){\n			if (!$.datepicker._isDisabledDatepicker( instActive.inline ? dpDiv.parent()[0] : instActive.input[0])) {\n				$(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");\n				$(this).addClass("ui-state-hover");\n				if (this.className.indexOf("ui-datepicker-prev") !== -1) {\n					$(this).addClass("ui-datepicker-prev-hover");\n				}\n				if (this.className.indexOf("ui-datepicker-next") !== -1) {\n					$(this).addClass("ui-datepicker-next-hover");\n				}\n			}\n		});\n}\n\n/* jQuery extend now ignores nulls! */\nfunction extendRemove(target, props) {\n	$.extend(target, props);\n	for (var name in props) {\n		if (props[name] == null) {\n			target[name] = props[name];\n		}\n	}\n	return target;\n}\n\n/* Invoke the datepicker functionality.\n   @param  options  string - a command, optionally followed by additional parameters or\n					Object - settings for attaching new datepicker functionality\n   @return  jQuery object */\n$.fn.datepicker = function(options){\n\n	/* Verify an empty collection wasn\'t passed - Fixes #6976 */\n	if ( !this.length ) {\n		return this;\n	}\n\n	/* Initialise the date picker. */\n	if (!$.datepicker.initialized) {\n		$(document).mousedown($.datepicker._checkExternalClick);\n		$.datepicker.initialized = true;\n	}\n\n	/* Append datepicker main container to body if not exist. */\n	if ($("#"+$.datepicker._mainDivId).length === 0) {\n		$("body").append($.datepicker.dpDiv);\n	}\n\n	var otherArgs = Array.prototype.slice.call(arguments, 1);\n	if (typeof options === "string" && (options === "isDisabled" || options === "getDate" || options === "widget")) {\n		return $.datepicker["_" + options + "Datepicker"].\n			apply($.datepicker, [this[0]].concat(otherArgs));\n	}\n	if (options === "option" && arguments.length === 2 && typeof arguments[1] === "string") {\n		return $.datepicker["_" + options + "Datepicker"].\n			apply($.datepicker, [this[0]].concat(otherArgs));\n	}\n	return this.each(function() {\n		typeof options === "string" ?\n			$.datepicker["_" + options + "Datepicker"].\n				apply($.datepicker, [this].concat(otherArgs)) :\n			$.datepicker._attachDatepicker(this, options);\n	});\n};\n\n$.datepicker = new Datepicker(); // singleton instance\n$.datepicker.initialized = false;\n$.datepicker.uuid = new Date().getTime();\n$.datepicker.version = "1.10.4";\n\n})(jQuery);\n(function( $, undefined ) {\n\nvar sizeRelatedOptions = {\n		buttons: true,\n		height: true,\n		maxHeight: true,\n		maxWidth: true,\n		minHeight: true,\n		minWidth: true,\n		width: true\n	},\n	resizableRelatedOptions = {\n		maxHeight: true,\n		maxWidth: true,\n		minHeight: true,\n		minWidth: true\n	};\n\n$.widget( "ui.dialog", {\n	version: "1.10.4",\n	options: {\n		appendTo: "body",\n		autoOpen: true,\n		buttons: [],\n		closeOnEscape: true,\n		closeText: "close",\n		dialogClass: "",\n		draggable: true,\n		hide: null,\n		height: "auto",\n		maxHeight: null,\n		maxWidth: null,\n		minHeight: 150,\n		minWidth: 150,\n		modal: false,\n		position: {\n			my: "center",\n			at: "center",\n			of: window,\n			collision: "fit",\n			// Ensure the titlebar is always visible\n			using: function( pos ) {\n				var topOffset = $( this ).css( pos ).offset().top;\n				if ( topOffset < 0 ) {\n					$( this ).css( "top", pos.top - topOffset );\n				}\n			}\n		},\n		resizable: true,\n		show: null,\n		title: null,\n		width: 300,\n\n		// callbacks\n		beforeClose: null,\n		close: null,\n		drag: null,\n		dragStart: null,\n		dragStop: null,\n		focus: null,\n		open: null,\n		resize: null,\n		resizeStart: null,\n		resizeStop: null\n	},\n\n	_create: function() {\n		this.originalCss = {\n			display: this.element[0].style.display,\n			width: this.element[0].style.width,\n			minHeight: this.element[0].style.minHeight,\n			maxHeight: this.element[0].style.maxHeight,\n			height: this.element[0].style.height\n		};\n		this.originalPosition = {\n			parent: this.element.parent(),\n			index: this.element.parent().children().index( this.element )\n		};\n		this.originalTitle = this.element.attr("title");\n		this.options.title = this.options.title || this.originalTitle;\n\n		this._createWrapper();\n\n		this.element\n			.show()\n			.removeAttr("title")\n			.addClass("ui-dialog-content ui-widget-content")\n			.appendTo( this.uiDialog );\n\n		this._createTitlebar();\n		this._createButtonPane();\n\n		if ( this.options.draggable && $.fn.draggable ) {\n			this._makeDraggable();\n		}\n		if ( this.options.resizable && $.fn.resizable ) {\n			this._makeResizable();\n		}\n\n		this._isOpen = false;\n	},\n\n	_init: function() {\n		if ( this.options.autoOpen ) {\n			this.open();\n		}\n	},\n\n	_appendTo: function() {\n		var element = this.options.appendTo;\n		if ( element && (element.jquery || element.nodeType) ) {\n			return $( element );\n		}\n		return this.document.find( element || "body" ).eq( 0 );\n	},\n\n	_destroy: function() {\n		var next,\n			originalPosition = this.originalPosition;\n\n		this._destroyOverlay();\n\n		this.element\n			.removeUniqueId()\n			.removeClass("ui-dialog-content ui-widget-content")\n			.css( this.originalCss )\n			// Without detaching first, the following becomes really slow\n			.detach();\n\n		this.uiDialog.stop( true, true ).remove();\n\n		if ( this.originalTitle ) {\n			this.element.attr( "title", this.originalTitle );\n		}\n\n		next = originalPosition.parent.children().eq( originalPosition.index );\n		// Don\'t try to place the dialog next to itself (#8613)\n		if ( next.length && next[0] !== this.element[0] ) {\n			next.before( this.element );\n		} else {\n			originalPosition.parent.append( this.element );\n		}\n	},\n\n	widget: function() {\n		return this.uiDialog;\n	},\n\n	disable: $.noop,\n	enable: $.noop,\n\n	close: function( event ) {\n		var activeElement,\n			that = this;\n\n		if ( !this._isOpen || this._trigger( "beforeClose", event ) === false ) {\n			return;\n		}\n\n		this._isOpen = false;\n		this._destroyOverlay();\n\n		if ( !this.opener.filter(":focusable").focus().length ) {\n\n			// support: IE9\n			// IE9 throws an "Unspecified error" accessing document.activeElement from an <iframe>\n			try {\n				activeElement = this.document[ 0 ].activeElement;\n\n				// Support: IE9, IE10\n				// If the <body> is blurred, IE will switch windows, see #4520\n				if ( activeElement && activeElement.nodeName.toLowerCase() !== "body" ) {\n\n					// Hiding a focused element doesn\'t trigger blur in WebKit\n					// so in case we have nothing to focus on, explicitly blur the active element\n					// https://bugs.webkit.org/show_bug.cgi?id=47182\n					$( activeElement ).blur();\n				}\n			} catch ( error ) {}\n		}\n\n		this._hide( this.uiDialog, this.options.hide, function() {\n			that._trigger( "close", event );\n		});\n	},\n\n	isOpen: function() {\n		return this._isOpen;\n	},\n\n	moveToTop: function() {\n		this._moveToTop();\n	},\n\n	_moveToTop: function( event, silent ) {\n		var moved = !!this.uiDialog.nextAll(":visible").insertBefore( this.uiDialog ).length;\n		if ( moved && !silent ) {\n			this._trigger( "focus", event );\n		}\n		return moved;\n	},\n\n	open: function() {\n		var that = this;\n		if ( this._isOpen ) {\n			if ( this._moveToTop() ) {\n				this._focusTabbable();\n			}\n			return;\n		}\n\n		this._isOpen = true;\n		this.opener = $( this.document[0].activeElement );\n\n		this._size();\n		this._position();\n		this._createOverlay();\n		this._moveToTop( null, true );\n		this._show( this.uiDialog, this.options.show, function() {\n			that._focusTabbable();\n			that._trigger("focus");\n		});\n\n		this._trigger("open");\n	},\n\n	_focusTabbable: function() {\n		// Set focus to the first match:\n		// 1. First element inside the dialog matching [autofocus]\n		// 2. Tabbable element inside the content element\n		// 3. Tabbable element inside the buttonpane\n		// 4. The close button\n		// 5. The dialog itself\n		var hasFocus = this.element.find("[autofocus]");\n		if ( !hasFocus.length ) {\n			hasFocus = this.element.find(":tabbable");\n		}\n		if ( !hasFocus.length ) {\n			hasFocus = this.uiDialogButtonPane.find(":tabbable");\n		}\n		if ( !hasFocus.length ) {\n			hasFocus = this.uiDialogTitlebarClose.filter(":tabbable");\n		}\n		if ( !hasFocus.length ) {\n			hasFocus = this.uiDialog;\n		}\n		hasFocus.eq( 0 ).focus();\n	},\n\n	_keepFocus: function( event ) {\n		function checkFocus() {\n			var activeElement = this.document[0].activeElement,\n				isActive = this.uiDialog[0] === activeElement ||\n					$.contains( this.uiDialog[0], activeElement );\n			if ( !isActive ) {\n				this._focusTabbable();\n			}\n		}\n		event.preventDefault();\n		checkFocus.call( this );\n		// support: IE\n		// IE <= 8 doesn\'t prevent moving focus even with event.preventDefault()\n		// so we check again later\n		this._delay( checkFocus );\n	},\n\n	_createWrapper: function() {\n		this.uiDialog = $("<div>")\n			.addClass( "ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " +\n				this.options.dialogClass )\n			.hide()\n			.attr({\n				// Setting tabIndex makes the div focusable\n				tabIndex: -1,\n				role: "dialog"\n			})\n			.appendTo( this._appendTo() );\n\n		this._on( this.uiDialog, {\n			keydown: function( event ) {\n				if ( this.options.closeOnEscape && !event.isDefaultPrevented() && event.keyCode &&\n						event.keyCode === $.ui.keyCode.ESCAPE ) {\n					event.preventDefault();\n					this.close( event );\n					return;\n				}\n\n				// prevent tabbing out of dialogs\n				if ( event.keyCode !== $.ui.keyCode.TAB ) {\n					return;\n				}\n				var tabbables = this.uiDialog.find(":tabbable"),\n					first = tabbables.filter(":first"),\n					last  = tabbables.filter(":last");\n\n				if ( ( event.target === last[0] || event.target === this.uiDialog[0] ) && !event.shiftKey ) {\n					first.focus( 1 );\n					event.preventDefault();\n				} else if ( ( event.target === first[0] || event.target === this.uiDialog[0] ) && event.shiftKey ) {\n					last.focus( 1 );\n					event.preventDefault();\n				}\n			},\n			mousedown: function( event ) {\n				if ( this._moveToTop( event ) ) {\n					this._focusTabbable();\n				}\n			}\n		});\n\n		// We assume that any existing aria-describedby attribute means\n		// that the dialog content is marked up properly\n		// otherwise we brute force the content as the description\n		if ( !this.element.find("[aria-describedby]").length ) {\n			this.uiDialog.attr({\n				"aria-describedby": this.element.uniqueId().attr("id")\n			});\n		}\n	},\n\n	_createTitlebar: function() {\n		var uiDialogTitle;\n\n		this.uiDialogTitlebar = $("<div>")\n			.addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix")\n			.prependTo( this.uiDialog );\n		this._on( this.uiDialogTitlebar, {\n			mousedown: function( event ) {\n				// Don\'t prevent click on close button (#8838)\n				// Focusing a dialog that is partially scrolled out of view\n				// causes the browser to scroll it into view, preventing the click event\n				if ( !$( event.target ).closest(".ui-dialog-titlebar-close") ) {\n					// Dialog isn\'t getting focus when dragging (#8063)\n					this.uiDialog.focus();\n				}\n			}\n		});\n\n		// support: IE\n		// Use type="button" to prevent enter keypresses in textboxes from closing the\n		// dialog in IE (#9312)\n		this.uiDialogTitlebarClose = $( "<button type=\'button\'></button>" )\n			.button({\n				label: this.options.closeText,\n				icons: {\n					primary: "ui-icon-closethick"\n				},\n				text: false\n			})\n			.addClass("ui-dialog-titlebar-close")\n			.appendTo( this.uiDialogTitlebar );\n		this._on( this.uiDialogTitlebarClose, {\n			click: function( event ) {\n				event.preventDefault();\n				this.close( event );\n			}\n		});\n\n		uiDialogTitle = $("<span>")\n			.uniqueId()\n			.addClass("ui-dialog-title")\n			.prependTo( this.uiDialogTitlebar );\n		this._title( uiDialogTitle );\n\n		this.uiDialog.attr({\n			"aria-labelledby": uiDialogTitle.attr("id")\n		});\n	},\n\n	_title: function( title ) {\n		if ( !this.options.title ) {\n			title.html("&#160;");\n		}\n		title.text( this.options.title );\n	},\n\n	_createButtonPane: function() {\n		this.uiDialogButtonPane = $("<div>")\n			.addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix");\n\n		this.uiButtonSet = $("<div>")\n			.addClass("ui-dialog-buttonset")\n			.appendTo( this.uiDialogButtonPane );\n\n		this._createButtons();\n	},\n\n	_createButtons: function() {\n		var that = this,\n			buttons = this.options.buttons;\n\n		// if we already have a button pane, remove it\n		this.uiDialogButtonPane.remove();\n		this.uiButtonSet.empty();\n\n		if ( $.isEmptyObject( buttons ) || ($.isArray( buttons ) && !buttons.length) ) {\n			this.uiDialog.removeClass("ui-dialog-buttons");\n			return;\n		}\n\n		$.each( buttons, function( name, props ) {\n			var click, buttonOptions;\n			props = $.isFunction( props ) ?\n				{ click: props, text: name } :\n				props;\n			// Default to a non-submitting button\n			props = $.extend( { type: "button" }, props );\n			// Change the context for the click callback to be the main element\n			click = props.click;\n			props.click = function() {\n				click.apply( that.element[0], arguments );\n			};\n			buttonOptions = {\n				icons: props.icons,\n				text: props.showText\n			};\n			delete props.icons;\n			delete props.showText;\n			$( "<button></button>", props )\n				.button( buttonOptions )\n				.appendTo( that.uiButtonSet );\n		});\n		this.uiDialog.addClass("ui-dialog-buttons");\n		this.uiDialogButtonPane.appendTo( this.uiDialog );\n	},\n\n	_makeDraggable: function() {\n		var that = this,\n			options = this.options;\n\n		function filteredUi( ui ) {\n			return {\n				position: ui.position,\n				offset: ui.offset\n			};\n		}\n\n		this.uiDialog.draggable({\n			cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",\n			handle: ".ui-dialog-titlebar",\n			containment: "document",\n			start: function( event, ui ) {\n				$( this ).addClass("ui-dialog-dragging");\n				that._blockFrames();\n				that._trigger( "dragStart", event, filteredUi( ui ) );\n			},\n			drag: function( event, ui ) {\n				that._trigger( "drag", event, filteredUi( ui ) );\n			},\n			stop: function( event, ui ) {\n				options.position = [\n					ui.position.left - that.document.scrollLeft(),\n					ui.position.top - that.document.scrollTop()\n				];\n				$( this ).removeClass("ui-dialog-dragging");\n				that._unblockFrames();\n				that._trigger( "dragStop", event, filteredUi( ui ) );\n			}\n		});\n	},\n\n	_makeResizable: function() {\n		var that = this,\n			options = this.options,\n			handles = options.resizable,\n			// .ui-resizable has position: relative defined in the stylesheet\n			// but dialogs have to use absolute or fixed positioning\n			position = this.uiDialog.css("position"),\n			resizeHandles = typeof handles === "string" ?\n				handles	:\n				"n,e,s,w,se,sw,ne,nw";\n\n		function filteredUi( ui ) {\n			return {\n				originalPosition: ui.originalPosition,\n				originalSize: ui.originalSize,\n				position: ui.position,\n				size: ui.size\n			};\n		}\n\n		this.uiDialog.resizable({\n			cancel: ".ui-dialog-content",\n			containment: "document",\n			alsoResize: this.element,\n			maxWidth: options.maxWidth,\n			maxHeight: options.maxHeight,\n			minWidth: options.minWidth,\n			minHeight: this._minHeight(),\n			handles: resizeHandles,\n			start: function( event, ui ) {\n				$( this ).addClass("ui-dialog-resizing");\n				that._blockFrames();\n				that._trigger( "resizeStart", event, filteredUi( ui ) );\n			},\n			resize: function( event, ui ) {\n				that._trigger( "resize", event, filteredUi( ui ) );\n			},\n			stop: function( event, ui ) {\n				options.height = $( this ).height();\n				options.width = $( this ).width();\n				$( this ).removeClass("ui-dialog-resizing");\n				that._unblockFrames();\n				that._trigger( "resizeStop", event, filteredUi( ui ) );\n			}\n		})\n		.css( "position", position );\n	},\n\n	_minHeight: function() {\n		var options = this.options;\n\n		return options.height === "auto" ?\n			options.minHeight :\n			Math.min( options.minHeight, options.height );\n	},\n\n	_position: function() {\n		// Need to show the dialog to get the actual offset in the position plugin\n		var isVisible = this.uiDialog.is(":visible");\n		if ( !isVisible ) {\n			this.uiDialog.show();\n		}\n		this.uiDialog.position( this.options.position );\n		if ( !isVisible ) {\n			this.uiDialog.hide();\n		}\n	},\n\n	_setOptions: function( options ) {\n		var that = this,\n			resize = false,\n			resizableOptions = {};\n\n		$.each( options, function( key, value ) {\n			that._setOption( key, value );\n\n			if ( key in sizeRelatedOptions ) {\n				resize = true;\n			}\n			if ( key in resizableRelatedOptions ) {\n				resizableOptions[ key ] = value;\n			}\n		});\n\n		if ( resize ) {\n			this._size();\n			this._position();\n		}\n		if ( this.uiDialog.is(":data(ui-resizable)") ) {\n			this.uiDialog.resizable( "option", resizableOptions );\n		}\n	},\n\n	_setOption: function( key, value ) {\n		var isDraggable, isResizable,\n			uiDialog = this.uiDialog;\n\n		if ( key === "dialogClass" ) {\n			uiDialog\n				.removeClass( this.options.dialogClass )\n				.addClass( value );\n		}\n\n		if ( key === "disabled" ) {\n			return;\n		}\n\n		this._super( key, value );\n\n		if ( key === "appendTo" ) {\n			this.uiDialog.appendTo( this._appendTo() );\n		}\n\n		if ( key === "buttons" ) {\n			this._createButtons();\n		}\n\n		if ( key === "closeText" ) {\n			this.uiDialogTitlebarClose.button({\n				// Ensure that we always pass a string\n				label: "" + value\n			});\n		}\n\n		if ( key === "draggable" ) {\n			isDraggable = uiDialog.is(":data(ui-draggable)");\n			if ( isDraggable && !value ) {\n				uiDialog.draggable("destroy");\n			}\n\n			if ( !isDraggable && value ) {\n				this._makeDraggable();\n			}\n		}\n\n		if ( key === "position" ) {\n			this._position();\n		}\n\n		if ( key === "resizable" ) {\n			// currently resizable, becoming non-resizable\n			isResizable = uiDialog.is(":data(ui-resizable)");\n			if ( isResizable && !value ) {\n				uiDialog.resizable("destroy");\n			}\n\n			// currently resizable, changing handles\n			if ( isResizable && typeof value === "string" ) {\n				uiDialog.resizable( "option", "handles", value );\n			}\n\n			// currently non-resizable, becoming resizable\n			if ( !isResizable && value !== false ) {\n				this._makeResizable();\n			}\n		}\n\n		if ( key === "title" ) {\n			this._title( this.uiDialogTitlebar.find(".ui-dialog-title") );\n		}\n	},\n\n	_size: function() {\n		// If the user has resized the dialog, the .ui-dialog and .ui-dialog-content\n		// divs will both have width and height set, so we need to reset them\n		var nonContentHeight, minContentHeight, maxContentHeight,\n			options = this.options;\n\n		// Reset content sizing\n		this.element.show().css({\n			width: "auto",\n			minHeight: 0,\n			maxHeight: "none",\n			height: 0\n		});\n\n		if ( options.minWidth > options.width ) {\n			options.width = options.minWidth;\n		}\n\n		// reset wrapper sizing\n		// determine the height of all the non-content elements\n		nonContentHeight = this.uiDialog.css({\n				height: "auto",\n				width: options.width\n			})\n			.outerHeight();\n		minContentHeight = Math.max( 0, options.minHeight - nonContentHeight );\n		maxContentHeight = typeof options.maxHeight === "number" ?\n			Math.max( 0, options.maxHeight - nonContentHeight ) :\n			"none";\n\n		if ( options.height === "auto" ) {\n			this.element.css({\n				minHeight: minContentHeight,\n				maxHeight: maxContentHeight,\n				height: "auto"\n			});\n		} else {\n			this.element.height( Math.max( 0, options.height - nonContentHeight ) );\n		}\n\n		if (this.uiDialog.is(":data(ui-resizable)") ) {\n			this.uiDialog.resizable( "option", "minHeight", this._minHeight() );\n		}\n	},\n\n	_blockFrames: function() {\n		this.iframeBlocks = this.document.find( "iframe" ).map(function() {\n			var iframe = $( this );\n\n			return $( "<div>" )\n				.css({\n					position: "absolute",\n					width: iframe.outerWidth(),\n					height: iframe.outerHeight()\n				})\n				.appendTo( iframe.parent() )\n				.offset( iframe.offset() )[0];\n		});\n	},\n\n	_unblockFrames: function() {\n		if ( this.iframeBlocks ) {\n			this.iframeBlocks.remove();\n			delete this.iframeBlocks;\n		}\n	},\n\n	_allowInteraction: function( event ) {\n		if ( $( event.target ).closest(".ui-dialog").length ) {\n			return true;\n		}\n\n		// TODO: Remove hack when datepicker implements\n		// the .ui-front logic (#8989)\n		return !!$( event.target ).closest(".ui-datepicker").length;\n	},\n\n	_createOverlay: function() {\n		if ( !this.options.modal ) {\n			return;\n		}\n\n		var that = this,\n			widgetFullName = this.widgetFullName;\n		if ( !$.ui.dialog.overlayInstances ) {\n			// Prevent use of anchors and inputs.\n			// We use a delay in case the overlay is created from an\n			// event that we\'re going to be cancelling. (#2804)\n			this._delay(function() {\n				// Handle .dialog().dialog("close") (#4065)\n				if ( $.ui.dialog.overlayInstances ) {\n					this.document.bind( "focusin.dialog", function( event ) {\n						if ( !that._allowInteraction( event ) ) {\n							event.preventDefault();\n							$(".ui-dialog:visible:last .ui-dialog-content")\n								.data( widgetFullName )._focusTabbable();\n						}\n					});\n				}\n			});\n		}\n\n		this.overlay = $("<div>")\n			.addClass("ui-widget-overlay ui-front")\n			.appendTo( this._appendTo() );\n		this._on( this.overlay, {\n			mousedown: "_keepFocus"\n		});\n		$.ui.dialog.overlayInstances++;\n	},\n\n	_destroyOverlay: function() {\n		if ( !this.options.modal ) {\n			return;\n		}\n\n		if ( this.overlay ) {\n			$.ui.dialog.overlayInstances--;\n\n			if ( !$.ui.dialog.overlayInstances ) {\n				this.document.unbind( "focusin.dialog" );\n			}\n			this.overlay.remove();\n			this.overlay = null;\n		}\n	}\n});\n\n$.ui.dialog.overlayInstances = 0;\n\n// DEPRECATED\nif ( $.uiBackCompat !== false ) {\n	// position option with array notation\n	// just override with old implementation\n	$.widget( "ui.dialog", $.ui.dialog, {\n		_position: function() {\n			var position = this.options.position,\n				myAt = [],\n				offset = [ 0, 0 ],\n				isVisible;\n\n			if ( position ) {\n				if ( typeof position === "string" || (typeof position === "object" && "0" in position ) ) {\n					myAt = position.split ? position.split(" ") : [ position[0], position[1] ];\n					if ( myAt.length === 1 ) {\n						myAt[1] = myAt[0];\n					}\n\n					$.each( [ "left", "top" ], function( i, offsetPosition ) {\n						if ( +myAt[ i ] === myAt[ i ] ) {\n							offset[ i ] = myAt[ i ];\n							myAt[ i ] = offsetPosition;\n						}\n					});\n\n					position = {\n						my: myAt[0] + (offset[0] < 0 ? offset[0] : "+" + offset[0]) + " " +\n							myAt[1] + (offset[1] < 0 ? offset[1] : "+" + offset[1]),\n						at: myAt.join(" ")\n					};\n				}\n\n				position = $.extend( {}, $.ui.dialog.prototype.options.position, position );\n			} else {\n				position = $.ui.dialog.prototype.options.position;\n			}\n\n			// need to show the dialog to get the actual offset in the position plugin\n			isVisible = this.uiDialog.is(":visible");\n			if ( !isVisible ) {\n				this.uiDialog.show();\n			}\n			this.uiDialog.position( position );\n			if ( !isVisible ) {\n				this.uiDialog.hide();\n			}\n		}\n	});\n}\n\n}( jQuery ) );\n(function( $, undefined ) {\n\nvar tabId = 0,\n	rhash = /#.*$/;\n\nfunction getNextTabId() {\n	return ++tabId;\n}\n\nfunction isLocal( anchor ) {\n	// support: IE7\n	// IE7 doesn\'t normalize the href property when set via script (#9317)\n	anchor = anchor.cloneNode( false );\n\n	return anchor.hash.length > 1 &&\n		decodeURIComponent( anchor.href.replace( rhash, "" ) ) ===\n			decodeURIComponent( location.href.replace( rhash, "" ) );\n}\n\n$.widget( "ui.tabs", {\n	version: "1.10.4",\n	delay: 300,\n	options: {\n		active: null,\n		collapsible: false,\n		event: "click",\n		heightStyle: "content",\n		hide: null,\n		show: null,\n\n		// callbacks\n		activate: null,\n		beforeActivate: null,\n		beforeLoad: null,\n		load: null\n	},\n\n	_create: function() {\n		var that = this,\n			options = this.options;\n\n		this.running = false;\n\n		this.element\n			.addClass( "ui-tabs ui-widget ui-widget-content ui-corner-all" )\n			.toggleClass( "ui-tabs-collapsible", options.collapsible )\n			// Prevent users from focusing disabled tabs via click\n			.delegate( ".ui-tabs-nav > li", "mousedown" + this.eventNamespace, function( event ) {\n				if ( $( this ).is( ".ui-state-disabled" ) ) {\n					event.preventDefault();\n				}\n			})\n			// support: IE <9\n			// Preventing the default action in mousedown doesn\'t prevent IE\n			// from focusing the element, so if the anchor gets focused, blur.\n			// We don\'t have to worry about focusing the previously focused\n			// element since clicking on a non-focusable element should focus\n			// the body anyway.\n			.delegate( ".ui-tabs-anchor", "focus" + this.eventNamespace, function() {\n				if ( $( this ).closest( "li" ).is( ".ui-state-disabled" ) ) {\n					this.blur();\n				}\n			});\n\n		this._processTabs();\n		options.active = this._initialActive();\n\n		// Take disabling tabs via class attribute from HTML\n		// into account and update option properly.\n		if ( $.isArray( options.disabled ) ) {\n			options.disabled = $.unique( options.disabled.concat(\n				$.map( this.tabs.filter( ".ui-state-disabled" ), function( li ) {\n					return that.tabs.index( li );\n				})\n			) ).sort();\n		}\n\n		// check for length avoids error when initializing empty list\n		if ( this.options.active !== false && this.anchors.length ) {\n			this.active = this._findActive( options.active );\n		} else {\n			this.active = $();\n		}\n\n		this._refresh();\n\n		if ( this.active.length ) {\n			this.load( options.active );\n		}\n	},\n\n	_initialActive: function() {\n		var active = this.options.active,\n			collapsible = this.options.collapsible,\n			locationHash = location.hash.substring( 1 );\n\n		if ( active === null ) {\n			// check the fragment identifier in the URL\n			if ( locationHash ) {\n				this.tabs.each(function( i, tab ) {\n					if ( $( tab ).attr( "aria-controls" ) === locationHash ) {\n						active = i;\n						return false;\n					}\n				});\n			}\n\n			// check for a tab marked active via a class\n			if ( active === null ) {\n				active = this.tabs.index( this.tabs.filter( ".ui-tabs-active" ) );\n			}\n\n			// no active tab, set to false\n			if ( active === null || active === -1 ) {\n				active = this.tabs.length ? 0 : false;\n			}\n		}\n\n		// handle numbers: negative, out of range\n		if ( active !== false ) {\n			active = this.tabs.index( this.tabs.eq( active ) );\n			if ( active === -1 ) {\n				active = collapsible ? false : 0;\n			}\n		}\n\n		// don\'t allow collapsible: false and active: false\n		if ( !collapsible && active === false && this.anchors.length ) {\n			active = 0;\n		}\n\n		return active;\n	},\n\n	_getCreateEventData: function() {\n		return {\n			tab: this.active,\n			panel: !this.active.length ? $() : this._getPanelForTab( this.active )\n		};\n	},\n\n	_tabKeydown: function( event ) {\n		var focusedTab = $( this.document[0].activeElement ).closest( "li" ),\n			selectedIndex = this.tabs.index( focusedTab ),\n			goingForward = true;\n\n		if ( this._handlePageNav( event ) ) {\n			return;\n		}\n\n		switch ( event.keyCode ) {\n			case $.ui.keyCode.RIGHT:\n			case $.ui.keyCode.DOWN:\n				selectedIndex++;\n				break;\n			case $.ui.keyCode.UP:\n			case $.ui.keyCode.LEFT:\n				goingForward = false;\n				selectedIndex--;\n				break;\n			case $.ui.keyCode.END:\n				selectedIndex = this.anchors.length - 1;\n				break;\n			case $.ui.keyCode.HOME:\n				selectedIndex = 0;\n				break;\n			case $.ui.keyCode.SPACE:\n				// Activate only, no collapsing\n				event.preventDefault();\n				clearTimeout( this.activating );\n				this._activate( selectedIndex );\n				return;\n			case $.ui.keyCode.ENTER:\n				// Toggle (cancel delayed activation, allow collapsing)\n				event.preventDefault();\n				clearTimeout( this.activating );\n				// Determine if we should collapse or activate\n				this._activate( selectedIndex === this.options.active ? false : selectedIndex );\n				return;\n			default:\n				return;\n		}\n\n		// Focus the appropriate tab, based on which key was pressed\n		event.preventDefault();\n		clearTimeout( this.activating );\n		selectedIndex = this._focusNextTab( selectedIndex, goingForward );\n\n		// Navigating with control key will prevent automatic activation\n		if ( !event.ctrlKey ) {\n			// Update aria-selected immediately so that AT think the tab is already selected.\n			// Otherwise AT may confuse the user by stating that they need to activate the tab,\n			// but the tab will already be activated by the time the announcement finishes.\n			focusedTab.attr( "aria-selected", "false" );\n			this.tabs.eq( selectedIndex ).attr( "aria-selected", "true" );\n\n			this.activating = this._delay(function() {\n				this.option( "active", selectedIndex );\n			}, this.delay );\n		}\n	},\n\n	_panelKeydown: function( event ) {\n		if ( this._handlePageNav( event ) ) {\n			return;\n		}\n\n		// Ctrl+up moves focus to the current tab\n		if ( event.ctrlKey && event.keyCode === $.ui.keyCode.UP ) {\n			event.preventDefault();\n			this.active.focus();\n		}\n	},\n\n	// Alt+page up/down moves focus to the previous/next tab (and activates)\n	_handlePageNav: function( event ) {\n		if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_UP ) {\n			this._activate( this._focusNextTab( this.options.active - 1, false ) );\n			return true;\n		}\n		if ( event.altKey && event.keyCode === $.ui.keyCode.PAGE_DOWN ) {\n			this._activate( this._focusNextTab( this.options.active + 1, true ) );\n			return true;\n		}\n	},\n\n	_findNextTab: function( index, goingForward ) {\n		var lastTabIndex = this.tabs.length - 1;\n\n		function constrain() {\n			if ( index > lastTabIndex ) {\n				index = 0;\n			}\n			if ( index < 0 ) {\n				index = lastTabIndex;\n			}\n			return index;\n		}\n\n		while ( $.inArray( constrain(), this.options.disabled ) !== -1 ) {\n			index = goingForward ? index + 1 : index - 1;\n		}\n\n		return index;\n	},\n\n	_focusNextTab: function( index, goingForward ) {\n		index = this._findNextTab( index, goingForward );\n		this.tabs.eq( index ).focus();\n		return index;\n	},\n\n	_setOption: function( key, value ) {\n		if ( key === "active" ) {\n			// _activate() will handle invalid values and update this.options\n			this._activate( value );\n			return;\n		}\n\n		if ( key === "disabled" ) {\n			// don\'t use the widget factory\'s disabled handling\n			this._setupDisabled( value );\n			return;\n		}\n\n		this._super( key, value);\n\n		if ( key === "collapsible" ) {\n			this.element.toggleClass( "ui-tabs-collapsible", value );\n			// Setting collapsible: false while collapsed; open first panel\n			if ( !value && this.options.active === false ) {\n				this._activate( 0 );\n			}\n		}\n\n		if ( key === "event" ) {\n			this._setupEvents( value );\n		}\n\n		if ( key === "heightStyle" ) {\n			this._setupHeightStyle( value );\n		}\n	},\n\n	_tabId: function( tab ) {\n		return tab.attr( "aria-controls" ) || "ui-tabs-" + getNextTabId();\n	},\n\n	_sanitizeSelector: function( hash ) {\n		return hash ? hash.replace( /[!"$%&\'()*+,.\\/:;<=>?@\\[\\]\\^`{|}~]/g, "\\\\$&" ) : "";\n	},\n\n	refresh: function() {\n		var options = this.options,\n			lis = this.tablist.children( ":has(a[href])" );\n\n		// get disabled tabs from class attribute from HTML\n		// this will get converted to a boolean if needed in _refresh()\n		options.disabled = $.map( lis.filter( ".ui-state-disabled" ), function( tab ) {\n			return lis.index( tab );\n		});\n\n		this._processTabs();\n\n		// was collapsed or no tabs\n		if ( options.active === false || !this.anchors.length ) {\n			options.active = false;\n			this.active = $();\n		// was active, but active tab is gone\n		} else if ( this.active.length && !$.contains( this.tablist[ 0 ], this.active[ 0 ] ) ) {\n			// all remaining tabs are disabled\n			if ( this.tabs.length === options.disabled.length ) {\n				options.active = false;\n				this.active = $();\n			// activate previous tab\n			} else {\n				this._activate( this._findNextTab( Math.max( 0, options.active - 1 ), false ) );\n			}\n		// was active, active tab still exists\n		} else {\n			// make sure active index is correct\n			options.active = this.tabs.index( this.active );\n		}\n\n		this._refresh();\n	},\n\n	_refresh: function() {\n		this._setupDisabled( this.options.disabled );\n		this._setupEvents( this.options.event );\n		this._setupHeightStyle( this.options.heightStyle );\n\n		this.tabs.not( this.active ).attr({\n			"aria-selected": "false",\n			tabIndex: -1\n		});\n		this.panels.not( this._getPanelForTab( this.active ) )\n			.hide()\n			.attr({\n				"aria-expanded": "false",\n				"aria-hidden": "true"\n			});\n\n		// Make sure one tab is in the tab order\n		if ( !this.active.length ) {\n			this.tabs.eq( 0 ).attr( "tabIndex", 0 );\n		} else {\n			this.active\n				.addClass( "ui-tabs-active ui-state-active" )\n				.attr({\n					"aria-selected": "true",\n					tabIndex: 0\n				});\n			this._getPanelForTab( this.active )\n				.show()\n				.attr({\n					"aria-expanded": "true",\n					"aria-hidden": "false"\n				});\n		}\n	},\n\n	_processTabs: function() {\n		var that = this;\n\n		this.tablist = this._getList()\n			.addClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )\n			.attr( "role", "tablist" );\n\n		this.tabs = this.tablist.find( "> li:has(a[href])" )\n			.addClass( "ui-state-default ui-corner-top" )\n			.attr({\n				role: "tab",\n				tabIndex: -1\n			});\n\n		this.anchors = this.tabs.map(function() {\n				return $( "a", this )[ 0 ];\n			})\n			.addClass( "ui-tabs-anchor" )\n			.attr({\n				role: "presentation",\n				tabIndex: -1\n			});\n\n		this.panels = $();\n\n		this.anchors.each(function( i, anchor ) {\n			var selector, panel, panelId,\n				anchorId = $( anchor ).uniqueId().attr( "id" ),\n				tab = $( anchor ).closest( "li" ),\n				originalAriaControls = tab.attr( "aria-controls" );\n\n			// inline tab\n			if ( isLocal( anchor ) ) {\n				selector = anchor.hash;\n				panel = that.element.find( that._sanitizeSelector( selector ) );\n			// remote tab\n			} else {\n				panelId = that._tabId( tab );\n				selector = "#" + panelId;\n				panel = that.element.find( selector );\n				if ( !panel.length ) {\n					panel = that._createPanel( panelId );\n					panel.insertAfter( that.panels[ i - 1 ] || that.tablist );\n				}\n				panel.attr( "aria-live", "polite" );\n			}\n\n			if ( panel.length) {\n				that.panels = that.panels.add( panel );\n			}\n			if ( originalAriaControls ) {\n				tab.data( "ui-tabs-aria-controls", originalAriaControls );\n			}\n			tab.attr({\n				"aria-controls": selector.substring( 1 ),\n				"aria-labelledby": anchorId\n			});\n			panel.attr( "aria-labelledby", anchorId );\n		});\n\n		this.panels\n			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )\n			.attr( "role", "tabpanel" );\n	},\n\n	// allow overriding how to find the list for rare usage scenarios (#7715)\n	_getList: function() {\n		return this.tablist || this.element.find( "ol,ul" ).eq( 0 );\n	},\n\n	_createPanel: function( id ) {\n		return $( "<div>" )\n			.attr( "id", id )\n			.addClass( "ui-tabs-panel ui-widget-content ui-corner-bottom" )\n			.data( "ui-tabs-destroy", true );\n	},\n\n	_setupDisabled: function( disabled ) {\n		if ( $.isArray( disabled ) ) {\n			if ( !disabled.length ) {\n				disabled = false;\n			} else if ( disabled.length === this.anchors.length ) {\n				disabled = true;\n			}\n		}\n\n		// disable tabs\n		for ( var i = 0, li; ( li = this.tabs[ i ] ); i++ ) {\n			if ( disabled === true || $.inArray( i, disabled ) !== -1 ) {\n				$( li )\n					.addClass( "ui-state-disabled" )\n					.attr( "aria-disabled", "true" );\n			} else {\n				$( li )\n					.removeClass( "ui-state-disabled" )\n					.removeAttr( "aria-disabled" );\n			}\n		}\n\n		this.options.disabled = disabled;\n	},\n\n	_setupEvents: function( event ) {\n		var events = {\n			click: function( event ) {\n				event.preventDefault();\n			}\n		};\n		if ( event ) {\n			$.each( event.split(" "), function( index, eventName ) {\n				events[ eventName ] = "_eventHandler";\n			});\n		}\n\n		this._off( this.anchors.add( this.tabs ).add( this.panels ) );\n		this._on( this.anchors, events );\n		this._on( this.tabs, { keydown: "_tabKeydown" } );\n		this._on( this.panels, { keydown: "_panelKeydown" } );\n\n		this._focusable( this.tabs );\n		this._hoverable( this.tabs );\n	},\n\n	_setupHeightStyle: function( heightStyle ) {\n		var maxHeight,\n			parent = this.element.parent();\n\n		if ( heightStyle === "fill" ) {\n			maxHeight = parent.height();\n			maxHeight -= this.element.outerHeight() - this.element.height();\n\n			this.element.siblings( ":visible" ).each(function() {\n				var elem = $( this ),\n					position = elem.css( "position" );\n\n				if ( position === "absolute" || position === "fixed" ) {\n					return;\n				}\n				maxHeight -= elem.outerHeight( true );\n			});\n\n			this.element.children().not( this.panels ).each(function() {\n				maxHeight -= $( this ).outerHeight( true );\n			});\n\n			this.panels.each(function() {\n				$( this ).height( Math.max( 0, maxHeight -\n					$( this ).innerHeight() + $( this ).height() ) );\n			})\n			.css( "overflow", "auto" );\n		} else if ( heightStyle === "auto" ) {\n			maxHeight = 0;\n			this.panels.each(function() {\n				maxHeight = Math.max( maxHeight, $( this ).height( "" ).height() );\n			}).height( maxHeight );\n		}\n	},\n\n	_eventHandler: function( event ) {\n		var options = this.options,\n			active = this.active,\n			anchor = $( event.currentTarget ),\n			tab = anchor.closest( "li" ),\n			clickedIsActive = tab[ 0 ] === active[ 0 ],\n			collapsing = clickedIsActive && options.collapsible,\n			toShow = collapsing ? $() : this._getPanelForTab( tab ),\n			toHide = !active.length ? $() : this._getPanelForTab( active ),\n			eventData = {\n				oldTab: active,\n				oldPanel: toHide,\n				newTab: collapsing ? $() : tab,\n				newPanel: toShow\n			};\n\n		event.preventDefault();\n\n		if ( tab.hasClass( "ui-state-disabled" ) ||\n				// tab is already loading\n				tab.hasClass( "ui-tabs-loading" ) ||\n				// can\'t switch durning an animation\n				this.running ||\n				// click on active header, but not collapsible\n				( clickedIsActive && !options.collapsible ) ||\n				// allow canceling activation\n				( this._trigger( "beforeActivate", event, eventData ) === false ) ) {\n			return;\n		}\n\n		options.active = collapsing ? false : this.tabs.index( tab );\n\n		this.active = clickedIsActive ? $() : tab;\n		if ( this.xhr ) {\n			this.xhr.abort();\n		}\n\n		if ( !toHide.length && !toShow.length ) {\n			$.error( "jQuery UI Tabs: Mismatching fragment identifier." );\n		}\n\n		if ( toShow.length ) {\n			this.load( this.tabs.index( tab ), event );\n		}\n		this._toggle( event, eventData );\n	},\n\n	// handles show/hide for selecting tabs\n	_toggle: function( event, eventData ) {\n		var that = this,\n			toShow = eventData.newPanel,\n			toHide = eventData.oldPanel;\n\n		this.running = true;\n\n		function complete() {\n			that.running = false;\n			that._trigger( "activate", event, eventData );\n		}\n\n		function show() {\n			eventData.newTab.closest( "li" ).addClass( "ui-tabs-active ui-state-active" );\n\n			if ( toShow.length && that.options.show ) {\n				that._show( toShow, that.options.show, complete );\n			} else {\n				toShow.show();\n				complete();\n			}\n		}\n\n		// start out by hiding, then showing, then completing\n		if ( toHide.length && this.options.hide ) {\n			this._hide( toHide, this.options.hide, function() {\n				eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );\n				show();\n			});\n		} else {\n			eventData.oldTab.closest( "li" ).removeClass( "ui-tabs-active ui-state-active" );\n			toHide.hide();\n			show();\n		}\n\n		toHide.attr({\n			"aria-expanded": "false",\n			"aria-hidden": "true"\n		});\n		eventData.oldTab.attr( "aria-selected", "false" );\n		// If we\'re switching tabs, remove the old tab from the tab order.\n		// If we\'re opening from collapsed state, remove the previous tab from the tab order.\n		// If we\'re collapsing, then keep the collapsing tab in the tab order.\n		if ( toShow.length && toHide.length ) {\n			eventData.oldTab.attr( "tabIndex", -1 );\n		} else if ( toShow.length ) {\n			this.tabs.filter(function() {\n				return $( this ).attr( "tabIndex" ) === 0;\n			})\n			.attr( "tabIndex", -1 );\n		}\n\n		toShow.attr({\n			"aria-expanded": "true",\n			"aria-hidden": "false"\n		});\n		eventData.newTab.attr({\n			"aria-selected": "true",\n			tabIndex: 0\n		});\n	},\n\n	_activate: function( index ) {\n		var anchor,\n			active = this._findActive( index );\n\n		// trying to activate the already active panel\n		if ( active[ 0 ] === this.active[ 0 ] ) {\n			return;\n		}\n\n		// trying to collapse, simulate a click on the current active header\n		if ( !active.length ) {\n			active = this.active;\n		}\n\n		anchor = active.find( ".ui-tabs-anchor" )[ 0 ];\n		this._eventHandler({\n			target: anchor,\n			currentTarget: anchor,\n			preventDefault: $.noop\n		});\n	},\n\n	_findActive: function( index ) {\n		return index === false ? $() : this.tabs.eq( index );\n	},\n\n	_getIndex: function( index ) {\n		// meta-function to give users option to provide a href string instead of a numerical index.\n		if ( typeof index === "string" ) {\n			index = this.anchors.index( this.anchors.filter( "[href$=\'" + index + "\']" ) );\n		}\n\n		return index;\n	},\n\n	_destroy: function() {\n		if ( this.xhr ) {\n			this.xhr.abort();\n		}\n\n		this.element.removeClass( "ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible" );\n\n		this.tablist\n			.removeClass( "ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all" )\n			.removeAttr( "role" );\n\n		this.anchors\n			.removeClass( "ui-tabs-anchor" )\n			.removeAttr( "role" )\n			.removeAttr( "tabIndex" )\n			.removeUniqueId();\n\n		this.tabs.add( this.panels ).each(function() {\n			if ( $.data( this, "ui-tabs-destroy" ) ) {\n				$( this ).remove();\n			} else {\n				$( this )\n					.removeClass( "ui-state-default ui-state-active ui-state-disabled " +\n						"ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel" )\n					.removeAttr( "tabIndex" )\n					.removeAttr( "aria-live" )\n					.removeAttr( "aria-busy" )\n					.removeAttr( "aria-selected" )\n					.removeAttr( "aria-labelledby" )\n					.removeAttr( "aria-hidden" )\n					.removeAttr( "aria-expanded" )\n					.removeAttr( "role" );\n			}\n		});\n\n		this.tabs.each(function() {\n			var li = $( this ),\n				prev = li.data( "ui-tabs-aria-controls" );\n			if ( prev ) {\n				li\n					.attr( "aria-controls", prev )\n					.removeData( "ui-tabs-aria-controls" );\n			} else {\n				li.removeAttr( "aria-controls" );\n			}\n		});\n\n		this.panels.show();\n\n		if ( this.options.heightStyle !== "content" ) {\n			this.panels.css( "height", "" );\n		}\n	},\n\n	enable: function( index ) {\n		var disabled = this.options.disabled;\n		if ( disabled === false ) {\n			return;\n		}\n\n		if ( index === undefined ) {\n			disabled = false;\n		} else {\n			index = this._getIndex( index );\n			if ( $.isArray( disabled ) ) {\n				disabled = $.map( disabled, function( num ) {\n					return num !== index ? num : null;\n				});\n			} else {\n				disabled = $.map( this.tabs, function( li, num ) {\n					return num !== index ? num : null;\n				});\n			}\n		}\n		this._setupDisabled( disabled );\n	},\n\n	disable: function( index ) {\n		var disabled = this.options.disabled;\n		if ( disabled === true ) {\n			return;\n		}\n\n		if ( index === undefined ) {\n			disabled = true;\n		} else {\n			index = this._getIndex( index );\n			if ( $.inArray( index, disabled ) !== -1 ) {\n				return;\n			}\n			if ( $.isArray( disabled ) ) {\n				disabled = $.merge( [ index ], disabled ).sort();\n			} else {\n				disabled = [ index ];\n			}\n		}\n		this._setupDisabled( disabled );\n	},\n\n	load: function( index, event ) {\n		index = this._getIndex( index );\n		var that = this,\n			tab = this.tabs.eq( index ),\n			anchor = tab.find( ".ui-tabs-anchor" ),\n			panel = this._getPanelForTab( tab ),\n			eventData = {\n				tab: tab,\n				panel: panel\n			};\n\n		// not remote\n		if ( isLocal( anchor[ 0 ] ) ) {\n			return;\n		}\n\n		this.xhr = $.ajax( this._ajaxSettings( anchor, event, eventData ) );\n\n		// support: jQuery <1.8\n		// jQuery <1.8 returns false if the request is canceled in beforeSend,\n		// but as of 1.8, $.ajax() always returns a jqXHR object.\n		if ( this.xhr && this.xhr.statusText !== "canceled" ) {\n			tab.addClass( "ui-tabs-loading" );\n			panel.attr( "aria-busy", "true" );\n\n			this.xhr\n				.success(function( response ) {\n					// support: jQuery <1.8\n					// http://bugs.jquery.com/ticket/11778\n					setTimeout(function() {\n						panel.html( response );\n						that._trigger( "load", event, eventData );\n					}, 1 );\n				})\n				.complete(function( jqXHR, status ) {\n					// support: jQuery <1.8\n					// http://bugs.jquery.com/ticket/11778\n					setTimeout(function() {\n						if ( status === "abort" ) {\n							that.panels.stop( false, true );\n						}\n\n						tab.removeClass( "ui-tabs-loading" );\n						panel.removeAttr( "aria-busy" );\n\n						if ( jqXHR === that.xhr ) {\n							delete that.xhr;\n						}\n					}, 1 );\n				});\n		}\n	},\n\n	_ajaxSettings: function( anchor, event, eventData ) {\n		var that = this;\n		return {\n			url: anchor.attr( "href" ),\n			beforeSend: function( jqXHR, settings ) {\n				return that._trigger( "beforeLoad", event,\n					$.extend( { jqXHR : jqXHR, ajaxSettings: settings }, eventData ) );\n			}\n		};\n	},\n\n	_getPanelForTab: function( tab ) {\n		var id = $( tab ).attr( "aria-controls" );\n		return this.element.find( this._sanitizeSelector( "#" + id ) );\n	}\n});\n\n})( jQuery );\n';
},1231:function(e,n,t){t(1229)(t(1232))},1232:function(e,n){e.exports='/*\n * SonarQube\n * Copyright (C) 2009-2016 SonarSource SA\n * mailto:contact AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/*\n Copyright 2012 Igor Vaynberg\n\n Version: 3.2 Timestamp: Mon Sep 10 10:38:04 PDT 2012\n\n Licensed under the Apache License, Version 2.0 (the "License"); you may not use this work except in\n compliance with the License. You may obtain a copy of the License in the LICENSE file, or at:\n\n http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software distributed under the License is\n distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and limitations under the License.\n */\n (function ($) {\n 	if(typeof $.fn.each2 == "undefined"){\n 		$.fn.extend({\n 			/*\n			* 4-10 times faster .each replacement\n			* use it carefully, as it overrides jQuery context of element on each iteration\n			*/\n			each2 : function (c) {\n				var j = $([0]), i = -1, l = this.length;\n				while (\n					++i < l\n					&& (j.context = j[0] = this[i])\n					&& c.call(j[0], i, j) !== false //"this"=DOM, i=index, j=jQuery object\n				);\n				return this;\n			}\n 		});\n 	}\n})(jQuery);\n\n(function ($, undefined) {\n    "use strict";\n    /*global document, window, jQuery, console */\n\n    if (window.Select2 !== undefined) {\n        return;\n    }\n\n    var KEY, AbstractSelect2, SingleSelect2, MultiSelect2, nextUid, sizer;\n\n    KEY = {\n        TAB: 9,\n        ENTER: 13,\n        ESC: 27,\n        SPACE: 32,\n        LEFT: 37,\n        UP: 38,\n        RIGHT: 39,\n        DOWN: 40,\n        SHIFT: 16,\n        CTRL: 17,\n        ALT: 18,\n        PAGE_UP: 33,\n        PAGE_DOWN: 34,\n        HOME: 36,\n        END: 35,\n        BACKSPACE: 8,\n        DELETE: 46,\n        isArrow: function (k) {\n            k = k.which ? k.which : k;\n            switch (k) {\n            case KEY.LEFT:\n            case KEY.RIGHT:\n            case KEY.UP:\n            case KEY.DOWN:\n                return true;\n            }\n            return false;\n        },\n        isControl: function (e) {\n            var k = e.which;\n            switch (k) {\n            case KEY.SHIFT:\n            case KEY.CTRL:\n            case KEY.ALT:\n                return true;\n            }\n\n            if (e.metaKey) return true;\n\n            return false;\n        },\n        isFunctionKey: function (k) {\n            k = k.which ? k.which : k;\n            return k >= 112 && k <= 123;\n        }\n    };\n\n    nextUid=(function() { var counter=1; return function() { return counter++; }; }());\n\n    function indexOf(value, array) {\n        var i = 0, l = array.length, v;\n\n        if (typeof value === "undefined") {\n          return -1;\n        }\n\n        if (value.constructor === String) {\n            for (; i < l; i = i + 1) if (value.localeCompare(array[i]) === 0) return i;\n        } else {\n            for (; i < l; i = i + 1) {\n                v = array[i];\n                if (v.constructor === String) {\n                    if (v.localeCompare(value) === 0) return i;\n                } else {\n                    if (v === value) return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Compares equality of a and b taking into account that a and b may be strings, in which case localeCompare is used\n     * @param a\n     * @param b\n     */\n    function equal(a, b) {\n        if (a === b) return true;\n        if (a === undefined || b === undefined) return false;\n        if (a === null || b === null) return false;\n        if (a.constructor === String) return a.localeCompare(b) === 0;\n        if (b.constructor === String) return b.localeCompare(a) === 0;\n        return false;\n    }\n\n    /**\n     * Splits the string into an array of values, trimming each value. An empty array is returned for nulls or empty\n     * strings\n     * @param string\n     * @param separator\n     */\n    function splitVal(string, separator) {\n        var val, i, l;\n        if (string === null || string.length < 1) return [];\n        val = string.split(separator);\n        for (i = 0, l = val.length; i < l; i = i + 1) val[i] = $.trim(val[i]);\n        return val;\n    }\n\n    function getSideBorderPadding(element) {\n        return element.outerWidth() - element.width();\n    }\n\n    function installKeyUpChangeEvent(element) {\n        var key="keyup-change-value";\n        element.bind("keydown", function () {\n            if ($.data(element, key) === undefined) {\n                $.data(element, key, element.val());\n            }\n        });\n        element.bind("keyup", function () {\n            var val= $.data(element, key);\n            if (val !== undefined && element.val() !== val) {\n                $.removeData(element, key);\n                element.trigger("keyup-change");\n            }\n        });\n    }\n\n    $(document).delegate("body", "mousemove", function (e) {\n        $.data(document, "select2-lastpos", {x: e.pageX, y: e.pageY});\n    });\n\n    /**\n     * filters mouse events so an event is fired only if the mouse moved.\n     *\n     * filters out mouse events that occur when mouse is stationary but\n     * the elements under the pointer are scrolled.\n     */\n    function installFilteredMouseMove(element) {\n	    element.bind("mousemove", function (e) {\n            var lastpos = $.data(document, "select2-lastpos");\n            if (lastpos === undefined || lastpos.x !== e.pageX || lastpos.y !== e.pageY) {\n                $(e.target).trigger("mousemove-filtered", e);\n            }\n        });\n    }\n\n    /**\n     * Debounces a function. Returns a function that calls the original fn function only if no invocations have been made\n     * within the last quietMillis milliseconds.\n     *\n     * @param quietMillis number of milliseconds to wait before invoking fn\n     * @param fn function to be debounced\n     * @param ctx object to be used as this reference within fn\n     * @return debounced version of fn\n     */\n    function debounce(quietMillis, fn, ctx) {\n        ctx = ctx || undefined;\n        var timeout;\n        return function () {\n            var args = arguments;\n            window.clearTimeout(timeout);\n            timeout = window.setTimeout(function() {\n                fn.apply(ctx, args);\n            }, quietMillis);\n        };\n    }\n\n    /**\n     * A simple implementation of a thunk\n     * @param formula function used to lazily initialize the thunk\n     * @return {Function}\n     */\n    function thunk(formula) {\n        var evaluated = false,\n            value;\n        return function() {\n            if (evaluated === false) { value = formula(); evaluated = true; }\n            return value;\n        };\n    };\n\n    function installDebouncedScroll(threshold, element) {\n        var notify = debounce(threshold, function (e) { element.trigger("scroll-debounced", e);});\n        element.bind("scroll", function (e) {\n            if (indexOf(e.target, element.get()) >= 0) notify(e);\n        });\n    }\n\n    function killEvent(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    function measureTextWidth(e) {\n        if (!sizer){\n        	var style = e[0].currentStyle || window.getComputedStyle(e[0], null);\n        	sizer = $("<div></div>").css({\n	            position: "absolute",\n	            left: "-10000px",\n	            top: "-10000px",\n	            display: "none",\n	            fontSize: style.fontSize,\n	            fontFamily: style.fontFamily,\n	            fontStyle: style.fontStyle,\n	            fontWeight: style.fontWeight,\n	            letterSpacing: style.letterSpacing,\n	            textTransform: style.textTransform,\n	            whiteSpace: "nowrap"\n	        });\n        	$("body").append(sizer);\n        }\n        sizer.text(e.val());\n        return sizer.width();\n    }\n\n    function markMatch(text, term, markup) {\n        var match=text.toUpperCase().indexOf(term.toUpperCase()),\n            tl=term.length;\n\n        if (match<0) {\n            markup.push(text);\n            return;\n        }\n\n        markup.push(text.substring(0, match));\n        markup.push("<span class=\'select2-match\'>");\n        markup.push(text.substring(match, match + tl));\n        markup.push("</span>");\n        markup.push(text.substring(match + tl, text.length));\n    }\n\n    /**\n     * Produces an ajax-based query function\n     *\n     * @param options object containing configuration paramters\n     * @param options.transport function that will be used to execute the ajax request. must be compatible with parameters supported by $.ajax\n     * @param options.url url for the data\n     * @param options.data a function(searchTerm, pageNumber, context) that should return an object containing query string parameters for the above url.\n     * @param options.dataType request data type: ajax, jsonp, other datatatypes supported by jQuery\'s $.ajax function or the transport function if specified\n     * @param options.traditional a boolean flag that should be true if you wish to use the traditional style of param serialization for the ajax request\n     * @param options.quietMillis (optional) milliseconds to wait before making the ajaxRequest, helps debounce the ajax function if invoked too often\n     * @param options.results a function(remoteData, pageNumber) that converts data returned form the remote request to the format expected by Select2.\n     *      The expected format is an object containing the following keys:\n     *      results array of objects that will be used as choices\n     *      more (optional) boolean indicating whether there are more results available\n     *      Example: {results:[{id:1, text:\'Red\'},{id:2, text:\'Blue\'}], more:true}\n     */\n    function ajax(options) {\n        var timeout, // current scheduled but not yet executed request\n            requestSequence = 0, // sequence used to drop out-of-order responses\n            handler = null,\n            quietMillis = options.quietMillis || 100;\n\n        return function (query) {\n            window.clearTimeout(timeout);\n            timeout = window.setTimeout(function () {\n                requestSequence += 1; // increment the sequence\n                var requestNumber = requestSequence, // this request\'s sequence number\n                    data = options.data, // ajax data function\n                    transport = options.transport || $.ajax,\n                    traditional = options.traditional || false,\n                    type = options.type || \'GET\'; // set type of request (GET or POST)\n\n                data = data.call(this, query.term, query.page, query.context);\n\n                if( null !== handler) { handler.abort(); }\n\n                handler = transport.call(null, {\n                    url: options.url,\n                    dataType: options.dataType,\n                    data: data,\n                    type: type,\n                    traditional: traditional,\n                    success: function (data) {\n                        if (requestNumber < requestSequence) {\n                            return;\n                        }\n                        // TODO 3.0 - replace query.page with query so users have access to term, page, etc.\n                        var results = options.results(data, query.page);\n                        query.callback(results);\n                    }\n                });\n            }, quietMillis);\n        };\n    }\n\n    /**\n     * Produces a query function that works with a local array\n     *\n     * @param options object containing configuration parameters. The options parameter can either be an array or an\n     * object.\n     *\n     * If the array form is used it is assumed that it contains objects with \'id\' and \'text\' keys.\n     *\n     * If the object form is used ti is assumed that it contains \'data\' and \'text\' keys. The \'data\' key should contain\n     * an array of objects that will be used as choices. These objects must contain at least an \'id\' key. The \'text\'\n     * key can either be a String in which case it is expected that each element in the \'data\' array has a key with the\n     * value of \'text\' which will be used to match choices. Alternatively, text can be a function(item) that can extract\n     * the text.\n     */\n    function local(options) {\n        var data = options, // data elements\n            dataText,\n            text = function (item) { return ""+item.text; }; // function used to retrieve the text portion of a data item that is matched against the search\n\n        if (!$.isArray(data)) {\n            text = data.text;\n            // if text is not a function we assume it to be a key name\n            if (!$.isFunction(text)) {\n              dataText = data.text; // we need to store this in a separate variable because in the next step data gets reset and data.text is no longer available\n              text = function (item) { return item[dataText]; };\n            }\n            data = data.results;\n        }\n\n        return function (query) {\n            var t = query.term, filtered = { results: [] }, process;\n            if (t === "") {\n                query.callback({results: data});\n                return;\n            }\n\n            process = function(datum, collection) {\n                var group, attr;\n                datum = datum[0];\n                if (datum.children) {\n                    group = {};\n                    for (attr in datum) {\n                        if (datum.hasOwnProperty(attr)) group[attr]=datum[attr];\n                    }\n                    group.children=[];\n                    $(datum.children).each2(function(i, childDatum) { process(childDatum, group.children); });\n                    if (group.children.length) {\n                        collection.push(group);\n                    }\n                } else {\n                    if (query.matcher(t, text(datum))) {\n                        collection.push(datum);\n                    }\n                }\n            };\n\n            $(data).each2(function(i, datum) { process(datum, filtered.results); });\n            query.callback(filtered);\n        };\n    }\n\n    // TODO javadoc\n    function tags(data) {\n        // TODO even for a function we should probably return a wrapper that does the same object/string check as\n        // the function for arrays. otherwise only functions that return objects are supported.\n        if ($.isFunction(data)) {\n            return data;\n        }\n\n        // if not a function we assume it to be an array\n\n        return function (query) {\n            var t = query.term, filtered = {results: []};\n            $(data).each(function () {\n                var isObject = this.text !== undefined,\n                    text = isObject ? this.text : this;\n                if (t === "" || query.matcher(t, text)) {\n                    filtered.results.push(isObject ? this : {id: this, text: this});\n                }\n            });\n            query.callback(filtered);\n        };\n    }\n\n    /**\n     * Checks if the formatter function should be used.\n     *\n     * Throws an error if it is not a function. Returns true if it should be used,\n     * false if no formatting should be performed.\n     *\n     * @param formatter\n     */\n    function checkFormatter(formatter, formatterName) {\n        if ($.isFunction(formatter)) return true;\n        if (!formatter) return false;\n        throw new Error("formatterName must be a function or a falsy value");\n    }\n\n    function evaluate(val) {\n        return $.isFunction(val) ? val() : val;\n    }\n\n    function countResults(results) {\n        var count = 0;\n        $.each(results, function(i, item) {\n            if (item.children) {\n                count += countResults(item.children);\n            } else {\n                count++;\n            }\n        });\n        return count;\n    }\n\n    /**\n     * Default tokenizer. This function uses breaks the input on substring match of any string from the\n     * opts.tokenSeparators array and uses opts.createSearchChoice to create the choice object. Both of those\n     * two options have to be defined in order for the tokenizer to work.\n     *\n     * @param input text user has typed so far or pasted into the search field\n     * @param selection currently selected choices\n     * @param selectCallback function(choice) callback tho add the choice to selection\n     * @param opts select2\'s opts\n     * @return undefined/null to leave the current input unchanged, or a string to change the input to the returned value\n     */\n    function defaultTokenizer(input, selection, selectCallback, opts) {\n        var original = input, // store the original so we can compare and know if we need to tell the search to update its text\n            dupe = false, // check for whether a token we extracted represents a duplicate selected choice\n            token, // token\n            index, // position at which the separator was found\n            i, l, // looping variables\n            separator; // the matched separator\n\n        if (!opts.createSearchChoice || !opts.tokenSeparators || opts.tokenSeparators.length < 1) return undefined;\n\n        while (true) {\n            index = -1;\n\n            for (i = 0, l = opts.tokenSeparators.length; i < l; i++) {\n                separator = opts.tokenSeparators[i];\n                index = input.indexOf(separator);\n                if (index >= 0) break;\n            }\n\n            if (index < 0) break; // did not find any token separator in the input string, bail\n\n            token = input.substring(0, index);\n            input = input.substring(index + separator.length);\n\n            if (token.length > 0) {\n                token = opts.createSearchChoice(token, selection);\n                if (token !== undefined && token !== null && opts.id(token) !== undefined && opts.id(token) !== null) {\n                    dupe = false;\n                    for (i = 0, l = selection.length; i < l; i++) {\n                        if (equal(opts.id(token), opts.id(selection[i]))) {\n                            dupe = true; break;\n                        }\n                    }\n\n                    if (!dupe) selectCallback(token);\n                }\n            }\n        }\n\n        if (original.localeCompare(input) != 0) return input;\n    }\n\n    /**\n     * blurs any Select2 container that has focus when an element outside them was clicked or received focus\n     *\n     * also takes care of clicks on label tags that point to the source element\n     */\n    $(document).ready(function () {\n        $(document).delegate("body", "mousedown touchend", function (e) {\n            var target = $(e.target).closest("div.select2-container").get(0), attr;\n            if (target) {\n                $(document).find("div.select2-container-active").each(function () {\n                    if (this !== target) $(this).data("select2").blur();\n                });\n            } else {\n                target = $(e.target).closest("div.select2-drop").get(0);\n                $(document).find("div.select2-drop-active").each(function () {\n                    if (this !== target) $(this).data("select2").blur();\n                });\n            }\n\n            target=$(e.target);\n            attr = target.attr("for");\n            if ("LABEL" === e.target.tagName && attr && attr.length > 0) {\n                target = $("#"+attr);\n                target = target.data("select2");\n                if (target !== undefined) { target.focus(); e.preventDefault();}\n            }\n        });\n    });\n\n    /**\n     * Creates a new class\n     *\n     * @param superClass\n     * @param methods\n     */\n    function clazz(SuperClass, methods) {\n        var constructor = function () {};\n        constructor.prototype = new SuperClass;\n        constructor.prototype.constructor = constructor;\n        constructor.prototype.parent = SuperClass.prototype;\n        constructor.prototype = $.extend(constructor.prototype, methods);\n        return constructor;\n    }\n\n    AbstractSelect2 = clazz(Object, {\n\n        // abstract\n        bind: function (func) {\n            var self = this;\n            return function () {\n                func.apply(self, arguments);\n            };\n        },\n\n        // abstract\n        init: function (opts) {\n            var results, search, resultsSelector = ".select2-results";\n\n            // prepare options\n            this.opts = opts = this.prepareOpts(opts);\n\n            this.id=opts.id;\n\n            // destroy if called on an existing component\n            if (opts.element.data("select2") !== undefined &&\n                opts.element.data("select2") !== null) {\n                this.destroy();\n            }\n\n            this.enabled=true;\n            this.container = this.createContainer();\n\n            this.containerId="s2id_"+(opts.element.attr("id") || "autogen"+nextUid());\n            this.containerSelector="#"+this.containerId.replace(/([;&,\\.\\+\\*\\~\':"\\!\\^#$%@\\[\\]\\(\\)=>\\|])/g, \'\\\\$1\');\n            this.container.attr("id", this.containerId);\n\n            // cache the body so future lookups are cheap\n            this.body = thunk(function() { return opts.element.closest("body"); });\n\n            if (opts.element.attr("class") !== undefined) {\n                this.container.addClass(opts.element.attr("class").replace(/validate\\[[\\S ]+] ?/, \'\'));\n            }\n\n            this.container.css(evaluate(opts.containerCss));\n            this.container.addClass(evaluate(opts.containerCssClass));\n\n            // swap container for the element\n            this.opts.element\n                .data("select2", this)\n                .hide()\n                .before(this.container);\n            this.container.data("select2", this);\n\n            this.dropdown = this.container.find(".select2-drop");\n            this.dropdown.addClass(evaluate(opts.dropdownCssClass));\n            this.dropdown.data("select2", this);\n\n            this.results = results = this.container.find(resultsSelector);\n            this.search = search = this.container.find("input.select2-input");\n\n            search.attr("tabIndex", this.opts.element.attr("tabIndex"));\n\n            this.resultsPage = 0;\n            this.context = null;\n\n            // initialize the container\n            this.initContainer();\n            this.initContainerWidth();\n\n            installFilteredMouseMove(this.results);\n            this.dropdown.delegate(resultsSelector, "mousemove-filtered", this.bind(this.highlightUnderEvent));\n\n            installDebouncedScroll(80, this.results);\n            this.dropdown.delegate(resultsSelector, "scroll-debounced", this.bind(this.loadMoreIfNeeded));\n\n            // if jquery.mousewheel plugin is installed we can prevent out-of-bounds scrolling of results via mousewheel\n            if ($.fn.mousewheel) {\n                results.mousewheel(function (e, delta, deltaX, deltaY) {\n                    var top = results.scrollTop(), height;\n                    if (deltaY > 0 && top - deltaY <= 0) {\n                        results.scrollTop(0);\n                        killEvent(e);\n                    } else if (deltaY < 0 && results.get(0).scrollHeight - results.scrollTop() + deltaY <= results.height()) {\n                        results.scrollTop(results.get(0).scrollHeight - results.height());\n                        killEvent(e);\n                    }\n                });\n            }\n\n            installKeyUpChangeEvent(search);\n            search.bind("keyup-change", this.bind(this.updateResults));\n            search.bind("focus", function () { search.addClass("select2-focused"); if (search.val() === " ") search.val(""); });\n            search.bind("blur", function () { search.removeClass("select2-focused");});\n\n            this.dropdown.delegate(resultsSelector, "mouseup", this.bind(function (e) {\n                if ($(e.target).closest(".select2-result-selectable:not(.select2-disabled)").length > 0) {\n                    this.highlightUnderEvent(e);\n                    this.selectHighlighted(e);\n                } else {\n                    this.focusSearch();\n                }\n                killEvent(e);\n            }));\n\n            // trap all mouse events from leaving the dropdown. sometimes there may be a modal that is listening\n            // for mouse events outside of itself so it can close itself. since the dropdown is now outside the select2\'s\n            // dom it will trigger the popup close, which is not what we want\n            this.dropdown.bind("click mouseup mousedown", function (e) { e.stopPropagation(); });\n\n            if ($.isFunction(this.opts.initSelection)) {\n                // initialize selection based on the current value of the source element\n                this.initSelection();\n\n                // if the user has provided a function that can set selection based on the value of the source element\n                // we monitor the change event on the element and trigger it, allowing for two way synchronization\n                this.monitorSource();\n            }\n\n            if (opts.element.is(":disabled") || opts.element.is("[readonly=\'readonly\']")) this.disable();\n        },\n\n        // abstract\n        destroy: function () {\n            var select2 = this.opts.element.data("select2");\n            if (select2 !== undefined) {\n                select2.container.remove();\n                select2.dropdown.remove();\n                select2.opts.element\n                    .removeData("select2")\n                    .unbind(".select2")\n                    .show();\n            }\n        },\n\n        // abstract\n        prepareOpts: function (opts) {\n            var element, select, idKey, ajaxUrl;\n\n            element = opts.element;\n\n            if (element.get(0).tagName.toLowerCase() === "select") {\n                this.select = select = opts.element;\n            }\n\n            if (select) {\n                // these options are not allowed when attached to a select because they are picked up off the element itself\n                $.each(["id", "multiple", "ajax", "query", "createSearchChoice", "initSelection", "data", "tags"], function () {\n                    if (this in opts) {\n                        throw new Error("Option \'" + this + "\' is not allowed for Select2 when attached to a <select> element.");\n                    }\n                });\n            }\n\n            opts = $.extend({}, {\n                populateResults: function(container, results, query) {\n                    var populate,  data, result, children, id=this.opts.id, self=this;\n\n                    populate=function(results, container, depth) {\n\n                        var i, l, result, selectable, compound, node, label, innerContainer, formatted;\n                        for (i = 0, l = results.length; i < l; i = i + 1) {\n\n                            result=results[i];\n                            selectable=id(result) !== undefined;\n                            compound=result.children && result.children.length > 0;\n\n                            node=$("<li></li>");\n                            node.addClass("select2-results-dept-"+depth);\n                            node.addClass("select2-result");\n                            node.addClass(selectable ? "select2-result-selectable" : "select2-result-unselectable");\n                            if (compound) { node.addClass("select2-result-with-children"); }\n                            node.addClass(self.opts.formatResultCssClass(result));\n\n                            label=$("<div></div>");\n                            label.addClass("select2-result-label");\n\n                            formatted=opts.formatResult(result, label, query);\n                            if (formatted!==undefined) {\n                                label.html(self.opts.escapeMarkup(formatted));\n                            }\n\n                            node.append(label);\n\n                            if (compound) {\n\n                                innerContainer=$("<ul></ul>");\n                                innerContainer.addClass("select2-result-sub");\n                                populate(result.children, innerContainer, depth+1);\n                                node.append(innerContainer);\n                            }\n\n                            node.data("select2-data", result);\n                            container.append(node);\n                        }\n                    };\n\n                    populate(results, container, 0);\n                }\n            }, $.fn.select2.defaults, opts);\n\n            if (typeof(opts.id) !== "function") {\n                idKey = opts.id;\n                opts.id = function (e) { return e[idKey]; };\n            }\n\n            if (select) {\n                opts.query = this.bind(function (query) {\n                    var data = { results: [], more: false },\n                        term = query.term,\n                        children, firstChild, process;\n\n                    process=function(element, collection) {\n                        var group;\n                        if (element.is("option")) {\n                            if (query.matcher(term, element.text(), element)) {\n                                collection.push({id:element.attr("value"), text:element.text(), element: element.get(), css: element.attr("class")});\n                            }\n                        } else if (element.is("optgroup")) {\n                            group={text:element.attr("label"), children:[], element: element.get(), css: element.attr("class")};\n                            element.children().each2(function(i, elm) { process(elm, group.children); });\n                            if (group.children.length>0) {\n                                collection.push(group);\n                            }\n                        }\n                    };\n\n                    children=element.children();\n\n                    // ignore the placeholder option if there is one\n                    if (this.getPlaceholder() !== undefined && children.length > 0) {\n                        firstChild = children[0];\n                        if ($(firstChild).text() === "") {\n                            children=children.not(firstChild);\n                        }\n                    }\n\n                    children.each2(function(i, elm) { process(elm, data.results); });\n\n                    query.callback(data);\n                });\n                // this is needed because inside val() we construct choices from options and there id is hardcoded\n                opts.id=function(e) { return e.id; };\n                opts.formatResultCssClass = function(data) { return data.css; }\n            } else {\n                if (!("query" in opts)) {\n                    if ("ajax" in opts) {\n                        ajaxUrl = opts.element.data("ajax-url");\n                        if (ajaxUrl && ajaxUrl.length > 0) {\n                            opts.ajax.url = ajaxUrl;\n                        }\n                        opts.query = ajax(opts.ajax);\n                    } else if ("data" in opts) {\n                        opts.query = local(opts.data);\n                    } else if ("tags" in opts) {\n                        opts.query = tags(opts.tags);\n                        opts.createSearchChoice = function (term) { return {id: term, text: term}; };\n                        opts.initSelection = function (element, callback) {\n                            var data = [];\n                            $(splitVal(element.val(), opts.separator)).each(function () {\n                                var id = this, text = this, tags=opts.tags;\n                                if ($.isFunction(tags)) tags=tags();\n                                $(tags).each(function() { if (equal(this.id, id)) { text = this.text; return false; } });\n                                data.push({id: id, text: text});\n                            });\n\n                            callback(data);\n                        };\n                    }\n                }\n            }\n            if (typeof(opts.query) !== "function") {\n                throw "query function not defined for Select2 " + opts.element.attr("id");\n            }\n\n            return opts;\n        },\n\n        /**\n         * Monitor the original element for changes and update select2 accordingly\n         */\n        // abstract\n        monitorSource: function () {\n            this.opts.element.bind("change.select2", this.bind(function (e) {\n                if (this.opts.element.data("select2-change-triggered") !== true) {\n                    this.initSelection();\n                }\n            }));\n        },\n\n        /**\n         * Triggers the change event on the source element\n         */\n        // abstract\n        triggerChange: function (details) {\n\n            details = details || {};\n            details= $.extend({}, details, { type: "change", val: this.val() });\n            // prevents recursive triggering\n            this.opts.element.data("select2-change-triggered", true);\n            this.opts.element.trigger(details);\n            this.opts.element.data("select2-change-triggered", false);\n\n            // some validation frameworks ignore the change event and listen instead to keyup, click for selects\n            // so here we trigger the click event manually\n            this.opts.element.click();\n\n            // ValidationEngine ignorea the change event and listens instead to blur\n            // so here we trigger the blur event manually if so desired\n            if (this.opts.blurOnChange)\n                this.opts.element.blur();\n        },\n\n\n        // abstract\n        enable: function() {\n            if (this.enabled) return;\n\n            this.enabled=true;\n            this.container.removeClass("select2-container-disabled");\n        },\n\n        // abstract\n        disable: function() {\n            if (!this.enabled) return;\n\n            this.close();\n\n            this.enabled=false;\n            this.container.addClass("select2-container-disabled");\n        },\n\n        // abstract\n        opened: function () {\n            return this.container.hasClass("select2-dropdown-open");\n        },\n\n        // abstract\n        positionDropdown: function() {\n            var offset = this.container.offset(),\n                height = this.container.outerHeight(),\n                width = this.container.outerWidth(),\n                dropHeight = this.dropdown.outerHeight(),\n                viewportBottom = $(window).scrollTop() + document.documentElement.clientHeight,\n                dropTop = offset.top + height,\n                dropLeft = offset.left,\n                enoughRoomBelow = dropTop + dropHeight <= viewportBottom,\n                enoughRoomAbove = (offset.top - dropHeight) >= this.body().scrollTop(),\n                aboveNow = this.dropdown.hasClass("select2-drop-above"),\n                bodyOffset,\n                above,\n                css;\n\n            // console.log("below/ droptop:", dropTop, "dropHeight", dropHeight, "sum", (dropTop+dropHeight)+" viewport bottom", viewportBottom, "enough?", enoughRoomBelow);\n            // console.log("above/ offset.top", offset.top, "dropHeight", dropHeight, "top", (offset.top-dropHeight), "scrollTop", this.body().scrollTop(), "enough?", enoughRoomAbove);\n\n            // fix positioning when body has an offset and is not position: static\n\n            if (this.body().css(\'position\') !== \'static\') {\n                bodyOffset = this.body().offset();\n                dropTop -= bodyOffset.top;\n                dropLeft -= bodyOffset.left;\n            }\n\n            // always prefer the current above/below alignment, unless there is not enough room\n\n            if (aboveNow) {\n                above = true;\n                if (!enoughRoomAbove && enoughRoomBelow) above = false;\n            } else {\n                above = false;\n                if (!enoughRoomBelow && enoughRoomAbove) above = true;\n            }\n\n            if (above) {\n                dropTop = offset.top - dropHeight;\n                this.container.addClass("select2-drop-above");\n                this.dropdown.addClass("select2-drop-above");\n            }\n            else {\n                this.container.removeClass("select2-drop-above");\n                this.dropdown.removeClass("select2-drop-above");\n            }\n\n            css = $.extend({\n                top: dropTop,\n                left: dropLeft,\n                width: width\n            }, evaluate(this.opts.dropdownCss));\n\n            this.dropdown.css(css);\n        },\n\n        // abstract\n        shouldOpen: function() {\n            var event;\n\n            if (this.opened()) return false;\n\n            event = $.Event("open");\n            this.opts.element.trigger(event);\n            return !event.isDefaultPrevented();\n        },\n\n        // abstract\n        clearDropdownAlignmentPreference: function() {\n            // clear the classes used to figure out the preference of where the dropdown should be opened\n            this.container.removeClass("select2-drop-above");\n            this.dropdown.removeClass("select2-drop-above");\n        },\n\n        /**\n         * Opens the dropdown\n         *\n         * @return {Boolean} whether or not dropdown was opened. This method will return false if, for example,\n         * the dropdown is already open, or if the \'open\' event listener on the element called preventDefault().\n         */\n        // abstract\n        open: function () {\n\n            if (!this.shouldOpen()) return false;\n\n            window.setTimeout(this.bind(this.opening), 1);\n\n            return true;\n        },\n\n        /**\n         * Performs the opening of the dropdown\n         */\n        // abstract\n        opening: function() {\n            var cid = this.containerId, selector = this.containerSelector,\n                scroll = "scroll." + cid, resize = "resize." + cid;\n\n            setTimeout(function () {\n                this.container.parents().each(function() {\n                    $(this).bind(scroll, function() {\n                        var s2 = $(selector);\n                        if (s2.length == 0) {\n                            $(this).unbind(scroll);\n                        }\n                        s2.select2("close");\n                    });\n                });\n            }.bind(this), 100);\n\n            $(window).bind(resize, function() {\n                var s2 = $(selector);\n                if (s2.length == 0) {\n                    $(window).unbind(resize);\n                }\n                s2.select2("close");\n            });\n\n            this.clearDropdownAlignmentPreference();\n\n            if (this.search.val() === " ") { this.search.val(""); }\n\n            this.container.addClass("select2-dropdown-open").addClass("select2-container-active");\n\n            this.updateResults(true);\n\n            if(this.dropdown[0] !== this.body().children().last()[0]) {\n                this.dropdown.detach().appendTo(this.body());\n            }\n\n            this.dropdown.show();\n\n            this.positionDropdown();\n            this.dropdown.addClass("select2-drop-active");\n\n            this.ensureHighlightVisible();\n\n            this.focusSearch();\n        },\n\n        // abstract\n        close: function () {\n            if (!this.opened()) return;\n\n            var self = this;\n\n            this.container.parents().each(function() {\n                $(this).unbind("scroll." + self.containerId);\n            });\n            $(window).unbind("resize." + this.containerId);\n\n            this.clearDropdownAlignmentPreference();\n\n            this.dropdown.hide();\n            this.container.removeClass("select2-dropdown-open").removeClass("select2-container-active");\n            this.results.empty();\n            this.clearSearch();\n\n            this.opts.element.trigger($.Event("close"));\n        },\n\n        // abstract\n        clearSearch: function () {\n\n        },\n\n        // abstract\n        ensureHighlightVisible: function () {\n            var results = this.results, children, index, child, hb, rb, y, more;\n\n            index = this.highlight();\n\n            if (index < 0) return;\n\n            if (index == 0) {\n\n                // if the first element is highlighted scroll all the way to the top,\n                // that way any unselectable headers above it will also be scrolled\n                // into view\n\n                results.scrollTop(0);\n                return;\n            }\n\n            children = results.find(".select2-result-selectable");\n\n            child = $(children[index]);\n\n            hb = child.offset().top + child.outerHeight();\n\n            // if this is the last child lets also make sure select2-more-results is visible\n            if (index === children.length - 1) {\n                more = results.find("li.select2-more-results");\n                if (more.length > 0) {\n                    hb = more.offset().top + more.outerHeight();\n                }\n            }\n\n            rb = results.offset().top + results.outerHeight();\n            if (hb > rb) {\n                results.scrollTop(results.scrollTop() + (hb - rb));\n            }\n            y = child.offset().top - results.offset().top;\n\n            // make sure the top of the element is visible\n            if (y < 0) {\n                results.scrollTop(results.scrollTop() + y); // y is negative\n            }\n        },\n\n        // abstract\n        moveHighlight: function (delta) {\n            var choices = this.results.find(".select2-result-selectable"),\n                index = this.highlight();\n\n            while (index > -1 && index < choices.length) {\n                index += delta;\n                var choice = $(choices[index]);\n                if (choice.hasClass("select2-result-selectable") && !choice.hasClass("select2-disabled")) {\n                    this.highlight(index);\n                    break;\n                }\n            }\n        },\n\n        // abstract\n        highlight: function (index) {\n            var choices = this.results.find(".select2-result-selectable").not(".select2-disabled");\n\n            if (arguments.length === 0) {\n                return indexOf(choices.filter(".select2-highlighted")[0], choices.get());\n            }\n\n            if (index >= choices.length) index = choices.length - 1;\n            if (index < 0) index = 0;\n\n            choices.removeClass("select2-highlighted");\n\n            $(choices[index]).addClass("select2-highlighted");\n            this.ensureHighlightVisible();\n\n        },\n\n        // abstract\n        countSelectableResults: function() {\n            return this.results.find(".select2-result-selectable").not(".select2-disabled").length;\n        },\n\n        // abstract\n        highlightUnderEvent: function (event) {\n            var el = $(event.target).closest(".select2-result-selectable");\n            if (el.length > 0 && !el.is(".select2-highlighted")) {\n        		var choices = this.results.find(\'.select2-result-selectable\');\n                this.highlight(choices.index(el));\n            } else if (el.length == 0) {\n                // if we are over an unselectable item remove al highlights\n                this.results.find(".select2-highlighted").removeClass("select2-highlighted");\n            }\n        },\n\n        // abstract\n        loadMoreIfNeeded: function () {\n            var results = this.results,\n                more = results.find("li.select2-more-results"),\n                below, // pixels the element is below the scroll fold, below==0 is when the element is starting to be visible\n                offset = -1, // index of first element without data\n                page = this.resultsPage + 1,\n                self=this,\n                term=this.search.val(),\n                context=this.context;\n\n            if (more.length === 0) return;\n            below = more.offset().top - results.offset().top - results.height();\n\n            if (below <= 0) {\n                more.addClass("select2-active");\n                this.opts.query({\n                        term: term,\n                        page: page,\n                        context: context,\n                        matcher: this.opts.matcher,\n                        callback: this.bind(function (data) {\n\n                    // ignore a response if the select2 has been closed before it was received\n                    if (!self.opened()) return;\n\n\n                    self.opts.populateResults.call(this, results, data.results, {term: term, page: page, context:context});\n\n                    if (data.more===true) {\n                        more.detach().appendTo(results).text(self.opts.formatLoadMore(page+1));\n                        window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);\n                    } else {\n                        more.remove();\n                    }\n                    self.positionDropdown();\n                    self.resultsPage = page;\n                })});\n            }\n        },\n\n        /**\n         * Default tokenizer function which does nothing\n         */\n        tokenize: function() {\n\n        },\n\n        /**\n         * @param initial whether or not this is the call to this method right after the dropdown has been opened\n         */\n        // abstract\n        updateResults: function (initial) {\n            var search = this.search, results = this.results, opts = this.opts, data, self=this, input;\n\n            // if the search is currently hidden we do not alter the results\n            if (initial !== true && (this.showSearchInput === false || !this.opened())) {\n                return;\n            }\n\n            search.addClass("select2-active");\n\n            function postRender() {\n                results.scrollTop(0);\n                search.removeClass("select2-active");\n                self.positionDropdown();\n            }\n\n            function render(html) {\n                results.html(self.opts.escapeMarkup(html));\n                postRender();\n            }\n\n            if (opts.maximumSelectionSize >=1) {\n                data = this.data();\n                if ($.isArray(data) && data.length >= opts.maximumSelectionSize && checkFormatter(opts.formatSelectionTooBig, "formatSelectionTooBig")) {\n            	    render("<li class=\'select2-selection-limit\'>" + opts.formatSelectionTooBig(opts.maximumSelectionSize) + "</li>");\n            	    return;\n                }\n            }\n\n            if (search.val().length < opts.minimumInputLength && checkFormatter(opts.formatInputTooShort, "formatInputTooShort")) {\n                render("<li class=\'select2-no-results\'>" + opts.formatInputTooShort(search.val(), opts.minimumInputLength) + "</li>");\n                return;\n            }\n            else {\n                render("<li class=\'select2-searching\'>" + opts.formatSearching() + "</li>");\n            }\n\n            // give the tokenizer a chance to pre-process the input\n            input = this.tokenize();\n            if (input != undefined && input != null) {\n                search.val(input);\n            }\n\n            this.resultsPage = 1;\n            opts.query({\n                    term: search.val(),\n                    page: this.resultsPage,\n                    context: null,\n                    matcher: opts.matcher,\n                    callback: this.bind(function (data) {\n                var def; // default choice\n\n                // ignore a response if the select2 has been closed before it was received\n                if (!this.opened()) return;\n\n                // save context, if any\n                this.context = (data.context===undefined) ? null : data.context;\n\n                // create a default choice and prepend it to the list\n                if (this.opts.createSearchChoice && search.val() !== "") {\n                    def = this.opts.createSearchChoice.call(null, search.val(), data.results);\n                    if (def !== undefined && def !== null && self.id(def) !== undefined && self.id(def) !== null) {\n                        if ($(data.results).filter(\n                            function () {\n                                return equal(self.id(this), self.id(def));\n                            }).length === 0) {\n                            data.results.unshift(def);\n                        }\n                    }\n                }\n\n                if (data.results.length === 0 && checkFormatter(opts.formatNoMatches, "formatNoMatches")) {\n                    render("<li class=\'select2-no-results\'>" + opts.formatNoMatches(search.val()) + "</li>");\n                    return;\n                }\n\n                results.empty();\n                self.opts.populateResults.call(this, results, data.results, {term: search.val(), page: this.resultsPage, context:null});\n\n                if (data.more === true && checkFormatter(opts.formatLoadMore, "formatLoadMore")) {\n                    results.append("<li class=\'select2-more-results\'>" + self.opts.escapeMarkup(opts.formatLoadMore(this.resultsPage)) + "</li>");\n                    window.setTimeout(function() { self.loadMoreIfNeeded(); }, 10);\n                }\n\n                this.postprocessResults(data, initial);\n\n                postRender();\n            })});\n        },\n\n        // abstract\n        cancel: function () {\n            this.close();\n        },\n\n        // abstract\n        blur: function () {\n            this.close();\n            this.container.removeClass("select2-container-active");\n            this.dropdown.removeClass("select2-drop-active");\n            // synonymous to .is(\':focus\'), which is available in jquery >= 1.6\n            if (this.search[0] === document.activeElement) { this.search.blur(); }\n            this.clearSearch();\n            this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");\n        },\n\n        // abstract\n        focusSearch: function () {\n            // need to do it here as well as in timeout so it works in IE\n            this.search.show();\n            this.search.focus();\n\n            /* we do this in a timeout so that current event processing can complete before this code is executed.\n             this makes sure the search field is focussed even if the current event would blur it */\n            window.setTimeout(this.bind(function () {\n                // reset the value so IE places the cursor at the end of the input box\n                this.search.show();\n                this.search.focus();\n                this.search.val(this.search.val());\n            }), 10);\n        },\n\n        // abstract\n        selectHighlighted: function () {\n            var index=this.highlight(),\n                highlighted=this.results.find(".select2-highlighted").not(".select2-disabled"),\n                data = highlighted.closest(\'.select2-result-selectable\').data("select2-data");\n            if (data) {\n                highlighted.addClass("select2-disabled");\n                this.highlight(index);\n                this.onSelect(data);\n            }\n        },\n\n        // abstract\n        getPlaceholder: function () {\n            return this.opts.element.attr("placeholder") ||\n                this.opts.element.attr("data-placeholder") || // jquery 1.4 compat\n                this.opts.element.data("placeholder") ||\n                this.opts.placeholder;\n        },\n\n        /**\n         * Get the desired width for the container element.  This is\n         * derived first from option `width` passed to select2, then\n         * the inline \'style\' on the original element, and finally\n         * falls back to the jQuery calculated element width.\n         */\n        // abstract\n        initContainerWidth: function () {\n            function resolveContainerWidth() {\n                var style, attrs, matches, i, l;\n\n                if (this.opts.width === "off") {\n                    return null;\n                } else if (this.opts.width === "element"){\n                    return this.opts.element.outerWidth() === 0 ? \'auto\' : this.opts.element.outerWidth() + \'px\';\n                } else if (this.opts.width === "copy" || this.opts.width === "resolve") {\n                    // check if there is inline style on the element that contains width\n                    style = this.opts.element.attr(\'style\');\n                    if (style !== undefined) {\n                        attrs = style.split(\';\');\n                        for (i = 0, l = attrs.length; i < l; i = i + 1) {\n                            matches = attrs[i].replace(/\\s/g, \'\')\n                                .match(/width:(([-+]?([0-9]*\\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/);\n                            if (matches !== null && matches.length >= 1)\n                                return matches[1];\n                        }\n                    }\n\n                    if (this.opts.width === "resolve") {\n                        // next check if css(\'width\') can resolve a width that is percent based, this is sometimes possible\n                        // when attached to input type=hidden or elements hidden via css\n                        style = this.opts.element.css(\'width\');\n                        if (style.indexOf("%") > 0) return style;\n\n                        // finally, fallback on the calculated width of the element\n                        return (this.opts.element.outerWidth() === 0 ? \'auto\' : this.opts.element.outerWidth() + \'px\');\n                    }\n\n                    return null;\n                } else if ($.isFunction(this.opts.width)) {\n                    return this.opts.width();\n                } else {\n                    return this.opts.width;\n               }\n            };\n\n            var width = resolveContainerWidth.call(this);\n            if (width !== null) {\n                this.container.attr("style", "width: "+width);\n            }\n        }\n    });\n\n    SingleSelect2 = clazz(AbstractSelect2, {\n\n        // single\n\n		createContainer: function () {\n            var container = $("<div></div>", {\n                "class": "select2-container"\n            }).html([\n                "    <a href=\'#\' onclick=\'return false;\' class=\'select2-choice\'>",\n                "   <span></span><abbr class=\'select2-search-choice-close\' style=\'display:none;\'></abbr>",\n                "   <div><b></b></div>" ,\n                "</a>",\n                "    <div class=\'select2-drop select2-offscreen\'>" ,\n                "   <div class=\'select2-search\'>" ,\n                "       <input type=\'text\' autocomplete=\'off\' class=\'select2-input\'/>" ,\n                "   </div>" ,\n                "   <ul class=\'select2-results\'>" ,\n                "   </ul>" ,\n                "</div>"].join(""));\n            return container;\n        },\n\n        // single\n        opening: function () {\n            this.search.show();\n            this.parent.opening.apply(this, arguments);\n            this.dropdown.removeClass("select2-offscreen");\n        },\n\n        // single\n        close: function () {\n            if (!this.opened()) return;\n            console.log(\'closing...\');\n            this.parent.close.apply(this, arguments);\n            this.dropdown.removeAttr("style").addClass("select2-offscreen").insertAfter(this.selection).show();\n        },\n\n        // single\n        focus: function () {\n            this.close();\n            this.selection.focus();\n        },\n\n        // single\n        isFocused: function () {\n            return this.selection[0] === document.activeElement;\n        },\n\n        // single\n        cancel: function () {\n            this.parent.cancel.apply(this, arguments);\n            this.selection.focus();\n        },\n\n        // single\n        initContainer: function () {\n\n            var selection,\n                container = this.container,\n                dropdown = this.dropdown,\n                clickingInside = false;\n\n            this.selection = selection = container.find(".select2-choice");\n\n            this.search.bind("keydown", this.bind(function (e) {\n                if (!this.enabled) return;\n\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\n                    // prevent the page from scrolling\n                    killEvent(e);\n                    return;\n                }\n\n                if (this.opened()) {\n                    switch (e.which) {\n                        case KEY.UP:\n                        case KEY.DOWN:\n                            this.moveHighlight((e.which === KEY.UP) ? -1 : 1);\n                            killEvent(e);\n                            return;\n                        case KEY.TAB:\n                        case KEY.ENTER:\n                            this.selectHighlighted();\n                            killEvent(e);\n                            return;\n                        case KEY.ESC:\n                            this.cancel(e);\n                            killEvent(e);\n                            return;\n                    }\n                } else {\n\n                    if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n                        return;\n                    }\n\n                    if (this.opts.openOnEnter === false && e.which === KEY.ENTER) {\n                        return;\n                    }\n\n                    this.open();\n\n                    if (e.which === KEY.ENTER) {\n                        // do not propagate the event otherwise we open, and propagate enter which closes\n                        return;\n                    }\n                }\n            }));\n\n            this.search.bind("focus", this.bind(function() {\n                this.selection.attr("tabIndex", "-1");\n            }));\n            this.search.bind("blur", this.bind(function() {\n                if (!this.opened()) this.container.removeClass("select2-container-active");\n                window.setTimeout(this.bind(function() { this.selection.attr("tabIndex", this.opts.element.attr("tabIndex")); }), 10);\n            }));\n\n            selection.bind("mousedown", this.bind(function (e) {\n                clickingInside = true;\n\n                if (this.opened()) {\n                    this.close();\n                    this.selection.focus();\n                } else if (this.enabled) {\n                    this.open();\n                }\n\n                clickingInside = false;\n            }));\n\n            dropdown.bind("mousedown", this.bind(function() { this.search.focus(); }));\n\n            selection.bind("focus", this.bind(function() {\n                this.container.addClass("select2-container-active");\n                // hide the search so the tab key does not focus on it\n                this.search.attr("tabIndex", "-1");\n            }));\n\n            selection.bind("blur", this.bind(function() {\n                if (!this.opened()) {\n                    this.container.removeClass("select2-container-active");\n                }\n                window.setTimeout(this.bind(function() { this.search.attr("tabIndex", this.opts.element.attr("tabIndex")); }), 10);\n            }));\n\n            selection.bind("keydown", this.bind(function(e) {\n                if (!this.enabled) return;\n\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\n                    // prevent the page from scrolling\n                    killEvent(e);\n                    return;\n                }\n\n                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e)\n                 || e.which === KEY.ESC) {\n                    return;\n                }\n\n                if (this.opts.openOnEnter === false && e.which === KEY.ENTER) {\n                    return;\n                }\n\n                if (e.which == KEY.DELETE) {\n                    if (this.opts.allowClear) {\n                        this.clear();\n                    }\n                    return;\n                }\n\n                this.open();\n\n                if (e.which === KEY.ENTER) {\n                    // do not propagate the event otherwise we open, and propagate enter which closes\n                    killEvent(e);\n                    return;\n                }\n\n                // do not set the search input value for non-alpha-numeric keys\n                // otherwise pressing down results in a \'(\' being set in the search field\n                if (e.which < 48 ) { // \'0\' == 48\n                    killEvent(e);\n                    return;\n                }\n\n                var keyWritten = String.fromCharCode(e.which).toLowerCase();\n\n                if (e.shiftKey) {\n                    keyWritten = keyWritten.toUpperCase();\n                }\n\n                // focus the field before calling val so the cursor ends up after the value instead of before\n                this.search.focus();\n                this.search.val(keyWritten);\n\n                // prevent event propagation so it doesnt replay on the now focussed search field and result in double key entry\n                killEvent(e);\n            }));\n\n            selection.delegate("abbr", "mousedown", this.bind(function (e) {\n                if (!this.enabled) return;\n                this.clear();\n                killEvent(e);\n                this.close();\n                this.triggerChange();\n                this.selection.focus();\n            }));\n\n            this.setPlaceholder();\n\n            this.search.bind("focus", this.bind(function() {\n                this.container.addClass("select2-container-active");\n            }));\n        },\n\n        // single\n        clear: function() {\n            this.opts.element.val("");\n            this.selection.find("span").empty();\n            this.selection.removeData("select2-data");\n            this.setPlaceholder();\n        },\n\n        /**\n         * Sets selection based on source element\'s value\n         */\n        // single\n        initSelection: function () {\n            var selected;\n            if (this.opts.element.val() === "") {\n                this.close();\n                this.setPlaceholder();\n            } else {\n                var self = this;\n                this.opts.initSelection.call(null, this.opts.element, function(selected){\n                    if (selected !== undefined && selected !== null) {\n                        self.updateSelection(selected);\n                        self.close();\n                        self.setPlaceholder();\n                    }\n                });\n            }\n        },\n\n        // single\n        prepareOpts: function () {\n            var opts = this.parent.prepareOpts.apply(this, arguments);\n\n            if (opts.element.get(0).tagName.toLowerCase() === "select") {\n                // install the selection initializer\n                opts.initSelection = function (element, callback) {\n                    var selected = element.find(":selected");\n                    // a single select box always has a value, no need to null check \'selected\'\n                    if ($.isFunction(callback))\n                        callback({id: selected.attr("value"), text: selected.text()});\n                };\n            }\n\n            return opts;\n        },\n\n        // single\n        setPlaceholder: function () {\n            var placeholder = this.getPlaceholder();\n\n            if (this.opts.element.val() === "" && placeholder !== undefined) {\n\n                // check for a first blank option if attached to a select\n                if (this.select && this.select.find("option:first").text() !== "") return;\n\n                this.selection.find("span").html(this.opts.escapeMarkup(placeholder));\n\n                this.selection.addClass("select2-default");\n\n                this.selection.find("abbr").hide();\n            }\n        },\n\n        // single\n        postprocessResults: function (data, initial) {\n            var selected = 0, self = this, showSearchInput = true;\n\n            // find the selected element in the result list\n\n            this.results.find(".select2-result-selectable").each2(function (i, elm) {\n                if (equal(self.id(elm.data("select2-data")), self.opts.element.val())) {\n                    selected = i;\n                    return false;\n                }\n            });\n\n            // and highlight it\n\n            this.highlight(selected);\n\n            // hide the search box if this is the first we got the results and there are a few of them\n\n            if (initial === true) {\n                showSearchInput = this.showSearchInput = countResults(data.results) >= this.opts.minimumResultsForSearch;\n                this.dropdown.find(".select2-search")[showSearchInput ? "removeClass" : "addClass"]("select2-search-hidden");\n\n                //add "select2-with-searchbox" to the container if search box is shown\n                $(this.dropdown, this.container)[showSearchInput ? "addClass" : "removeClass"]("select2-with-searchbox");\n            }\n\n        },\n\n        // single\n        onSelect: function (data) {\n            var old = this.opts.element.val();\n\n            this.opts.element.val(this.id(data));\n            this.updateSelection(data);\n            this.close();\n            this.selection.focus();\n\n            if (!equal(old, this.id(data))) { this.triggerChange(); }\n        },\n\n        // single\n        updateSelection: function (data) {\n\n            var container=this.selection.find("span"), formatted;\n\n            this.selection.data("select2-data", data);\n\n            container.empty();\n            formatted=this.opts.formatSelection(data, container);\n            if (formatted !== undefined) {\n                container.append(this.opts.escapeMarkup(formatted));\n            }\n\n            this.selection.removeClass("select2-default");\n\n            if (this.opts.allowClear && this.getPlaceholder() !== undefined) {\n                this.selection.find("abbr").show();\n            }\n        },\n\n        // single\n        val: function () {\n            var val, data = null, self = this;\n\n            if (arguments.length === 0) {\n                return this.opts.element.val();\n            }\n\n            val = arguments[0];\n\n            if (this.select) {\n                this.select\n                    .val(val)\n                    .find(":selected").each2(function (i, elm) {\n                        data = {id: elm.attr("value"), text: elm.text()};\n                        return false;\n                    });\n                this.updateSelection(data);\n                this.setPlaceholder();\n            } else {\n                if (this.opts.initSelection === undefined) {\n                    throw new Error("cannot call val() if initSelection() is not defined");\n                }\n                // val is an id. !val is true for [undefined,null,\'\']\n                if (!val) {\n                    this.clear();\n                    return;\n                }\n                this.opts.element.val(val);\n                this.opts.initSelection(this.opts.element, function(data){\n                    self.opts.element.val(!data ? "" : self.id(data));\n                    self.updateSelection(data);\n                    self.setPlaceholder();\n                });\n            }\n        },\n\n        // single\n        clearSearch: function () {\n            this.search.val("");\n        },\n\n        // single\n        data: function(value) {\n            var data;\n\n            if (arguments.length === 0) {\n                data = this.selection.data("select2-data");\n                if (data == undefined) data = null;\n                return data;\n            } else {\n                if (!value || value === "") {\n                    this.clear();\n                } else {\n                    this.opts.element.val(!value ? "" : this.id(value));\n                    this.updateSelection(value);\n                }\n            }\n        }\n    });\n\n    MultiSelect2 = clazz(AbstractSelect2, {\n\n        // multi\n        createContainer: function () {\n            var container = $("<div></div>", {\n                "class": "select2-container select2-container-multi"\n            }).html([\n                "    <ul class=\'select2-choices\'>",\n                //"<li class=\'select2-search-choice\'><span>California</span><a href="javascript:void(0)" class="select2-search-choice-close"></a></li>" ,\n                "  <li class=\'select2-search-field\'>" ,\n                "    <input type=\'text\' autocomplete=\'off\' class=\'select2-input\'>" ,\n                "  </li>" ,\n                "</ul>" ,\n                "<div class=\'select2-drop select2-drop-multi\' style=\'display:none;\'>" ,\n                "   <ul class=\'select2-results\'>" ,\n                "   </ul>" ,\n                "</div>"].join(""));\n			return container;\n        },\n\n        // multi\n        prepareOpts: function () {\n            var opts = this.parent.prepareOpts.apply(this, arguments);\n\n            // TODO validate placeholder is a string if specified\n\n            if (opts.element.get(0).tagName.toLowerCase() === "select") {\n                // install sthe selection initializer\n                opts.initSelection = function (element,callback) {\n\n                    var data = [];\n                    element.find(":selected").each2(function (i, elm) {\n                        data.push({id: elm.attr("value"), text: elm.text()});\n                    });\n\n                    if ($.isFunction(callback))\n                        callback(data);\n                };\n            }\n\n            return opts;\n        },\n\n        // multi\n        initContainer: function () {\n\n            var selector = ".select2-choices", selection;\n\n            this.searchContainer = this.container.find(".select2-search-field");\n            this.selection = selection = this.container.find(selector);\n\n            this.search.bind("keydown", this.bind(function (e) {\n                if (!this.enabled) return;\n\n                if (e.which === KEY.BACKSPACE && this.search.val() === "") {\n                    this.close();\n\n                    var choices,\n                        selected = selection.find(".select2-search-choice-focus");\n                    if (selected.length > 0) {\n                        this.unselect(selected.first());\n                        this.search.width(10);\n                        killEvent(e);\n                        return;\n                    }\n\n                    choices = selection.find(".select2-search-choice");\n                    if (choices.length > 0) {\n                        choices.last().addClass("select2-search-choice-focus");\n                    }\n                } else {\n                    selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");\n                }\n\n                if (this.opened()) {\n                    switch (e.which) {\n                    case KEY.UP:\n                    case KEY.DOWN:\n                        this.moveHighlight((e.which === KEY.UP) ? -1 : 1);\n                        killEvent(e);\n                        return;\n                    case KEY.ENTER:\n                    case KEY.TAB:\n                        this.selectHighlighted();\n                        killEvent(e);\n                        return;\n                    case KEY.ESC:\n                        this.cancel(e);\n                        killEvent(e);\n                        return;\n                    }\n                }\n\n                if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e)\n                 || e.which === KEY.BACKSPACE || e.which === KEY.ESC) {\n                    return;\n                }\n\n                if (this.opts.openOnEnter === false && e.which === KEY.ENTER) {\n                    return;\n                }\n\n                this.open();\n\n                if (e.which === KEY.PAGE_UP || e.which === KEY.PAGE_DOWN) {\n                    // prevent the page from scrolling\n                    killEvent(e);\n                }\n            }));\n\n            this.search.bind("keyup", this.bind(this.resizeSearch));\n\n            this.search.bind("blur", this.bind(function(e) {\n                this.container.removeClass("select2-container-active");\n                this.search.removeClass("select2-focused");\n                this.clearSearch();\n                e.stopImmediatePropagation();\n            }));\n\n            this.container.delegate(selector, "mousedown", this.bind(function (e) {\n                if (!this.enabled) return;\n                if ($(e.target).closest(".select2-search-choice").length > 0) {\n                    // clicked inside a select2 search choice, do not open\n                    return;\n                }\n                this.clearPlaceholder();\n                this.open();\n                this.focusSearch();\n                e.preventDefault();\n            }));\n\n            this.container.delegate(selector, "focus", this.bind(function () {\n                if (!this.enabled) return;\n                this.container.addClass("select2-container-active");\n                this.dropdown.addClass("select2-drop-active");\n                this.clearPlaceholder();\n            }));\n\n            // set the placeholder if necessary\n            this.clearSearch();\n        },\n\n        // multi\n        enable: function() {\n            if (this.enabled) return;\n\n            this.parent.enable.apply(this, arguments);\n\n            this.search.removeAttr("disabled");\n        },\n\n        // multi\n        disable: function() {\n            if (!this.enabled) return;\n\n            this.parent.disable.apply(this, arguments);\n\n            this.search.attr("disabled", true);\n        },\n\n        // multi\n        initSelection: function () {\n            var data;\n            if (this.opts.element.val() === "") {\n                this.updateSelection([]);\n                this.close();\n                // set the placeholder if necessary\n                this.clearSearch();\n            }\n            if (this.select || this.opts.element.val() !== "") {\n                var self = this;\n                this.opts.initSelection.call(null, this.opts.element, function(data){\n                    if (data !== undefined && data !== null) {\n                        self.updateSelection(data);\n                        self.close();\n                        // set the placeholder if necessary\n                        self.clearSearch();\n                    }\n                });\n            }\n        },\n\n        // multi\n        clearSearch: function () {\n            var placeholder = this.getPlaceholder();\n\n            if (placeholder !== undefined  && this.getVal().length === 0 && this.search.hasClass("select2-focused") === false) {\n                this.search.val(placeholder).addClass("select2-default");\n                // stretch the search box to full width of the container so as much of the placeholder is visible as possible\n                this.resizeSearch();\n            } else {\n                // we set this to " " instead of "" and later clear it on focus() because there is a firefox bug\n                // that does not properly render the caret when the field starts out blank\n                this.search.val(" ").width(10);\n            }\n        },\n\n        // multi\n        clearPlaceholder: function () {\n            if (this.search.hasClass("select2-default")) {\n                this.search.val("").removeClass("select2-default");\n            } else {\n                // work around for the space character we set to avoid firefox caret bug\n                if (this.search.val() === " ") this.search.val("");\n            }\n        },\n\n        // multi\n        opening: function () {\n            this.parent.opening.apply(this, arguments);\n\n            this.clearPlaceholder();\n			this.resizeSearch();\n            this.focusSearch();\n        },\n\n        // multi\n        close: function () {\n            if (!this.opened()) return;\n            this.parent.close.apply(this, arguments);\n        },\n\n        // multi\n        focus: function () {\n            this.close();\n            this.search.focus();\n        },\n\n        // multi\n        isFocused: function () {\n            return this.search.hasClass("select2-focused");\n        },\n\n        // multi\n        updateSelection: function (data) {\n            var ids = [], filtered = [], self = this;\n\n            // filter out duplicates\n            $(data).each(function () {\n                if (indexOf(self.id(this), ids) < 0) {\n                    ids.push(self.id(this));\n                    filtered.push(this);\n                }\n            });\n            data = filtered;\n\n            this.selection.find(".select2-search-choice").remove();\n            $(data).each(function () {\n                self.addSelectedChoice(this);\n            });\n            self.postprocessResults();\n        },\n\n        tokenize: function() {\n            var input = this.search.val();\n            input = this.opts.tokenizer(input, this.data(), this.bind(this.onSelect), this.opts);\n            if (input != null && input != undefined) {\n                this.search.val(input);\n                if (input.length > 0) {\n                    this.open();\n                }\n            }\n\n        },\n\n        // multi\n        onSelect: function (data) {\n            this.addSelectedChoice(data);\n            if (this.select) { this.postprocessResults(); }\n\n            if (this.opts.closeOnSelect) {\n                this.close();\n                this.search.width(10);\n            } else {\n                if (this.countSelectableResults()>0) {\n                    this.search.width(10);\n                    this.resizeSearch();\n                    this.positionDropdown();\n                } else {\n                    // if nothing left to select close\n                    this.close();\n                }\n            }\n\n            // since its not possible to select an element that has already been\n            // added we do not need to check if this is a new element before firing change\n            this.triggerChange({ added: data });\n\n            this.focusSearch();\n        },\n\n        // multi\n        cancel: function () {\n            this.close();\n            this.focusSearch();\n        },\n\n        // multi\n        addSelectedChoice: function (data) {\n            var choice=$(\n                    "<li class=\'select2-search-choice\'>" +\n                    "    <div></div>" +\n                    "    <a href=\'#\' onclick=\'return false;\' class=\'select2-search-choice-close\' tabindex=\'-1\'></a>" +\n                    "</li>"),\n                id = this.id(data),\n                val = this.getVal(),\n                formatted;\n\n            formatted=this.opts.formatSelection(data, choice);\n            choice.find("div").replaceWith("<div>"+this.opts.escapeMarkup(formatted)+"</div>");\n            choice.find(".select2-search-choice-close")\n                .bind("mousedown", killEvent)\n                .bind("click dblclick", this.bind(function (e) {\n                if (!this.enabled) return;\n\n                $(e.target).closest(".select2-search-choice").fadeOut(\'fast\', this.bind(function(){\n                    this.unselect($(e.target));\n                    this.selection.find(".select2-search-choice-focus").removeClass("select2-search-choice-focus");\n                    this.close();\n                    this.focusSearch();\n                })).dequeue();\n                killEvent(e);\n            })).bind("focus", this.bind(function () {\n                if (!this.enabled) return;\n                this.container.addClass("select2-container-active");\n                this.dropdown.addClass("select2-drop-active");\n            }));\n\n            choice.data("select2-data", data);\n            choice.insertBefore(this.searchContainer);\n\n            val.push(id);\n            this.setVal(val);\n        },\n\n        // multi\n        unselect: function (selected) {\n            var val = this.getVal(),\n                data,\n                index;\n\n            selected = selected.closest(".select2-search-choice");\n\n            if (selected.length === 0) {\n                throw "Invalid argument: " + selected + ". Must be .select2-search-choice";\n            }\n\n            data = selected.data("select2-data");\n\n            index = indexOf(this.id(data), val);\n\n            if (index >= 0) {\n                val.splice(index, 1);\n                this.setVal(val);\n                if (this.select) this.postprocessResults();\n            }\n            selected.remove();\n            this.triggerChange({ removed: data });\n        },\n\n        // multi\n        postprocessResults: function () {\n            var val = this.getVal(),\n                choices = this.results.find(".select2-result-selectable"),\n                compound = this.results.find(".select2-result-with-children"),\n                self = this;\n\n            choices.each2(function (i, choice) {\n                var id = self.id(choice.data("select2-data"));\n                if (indexOf(id, val) >= 0) {\n                    choice.addClass("select2-disabled").removeClass("select2-result-selectable");\n                } else {\n                    choice.removeClass("select2-disabled").addClass("select2-result-selectable");\n                }\n            });\n\n            compound.each2(function(i, e) {\n                if (e.find(".select2-result-selectable").length==0) {\n                    e.addClass("select2-disabled");\n                } else {\n                    e.removeClass("select2-disabled");\n                }\n            });\n\n            choices.each2(function (i, choice) {\n                if (!choice.hasClass("select2-disabled") && choice.hasClass("select2-result-selectable")) {\n                    self.highlight(0);\n                    return false;\n                }\n            });\n\n        },\n\n        // multi\n        resizeSearch: function () {\n\n            var minimumWidth, left, maxWidth, containerLeft, searchWidth,\n            	sideBorderPadding = getSideBorderPadding(this.search);\n\n            minimumWidth = measureTextWidth(this.search) + 10;\n\n            left = this.search.offset().left;\n\n            maxWidth = this.selection.width();\n            containerLeft = this.selection.offset().left;\n\n            searchWidth = maxWidth - (left - containerLeft) - sideBorderPadding;\n            if (searchWidth < minimumWidth) {\n                searchWidth = maxWidth - sideBorderPadding;\n            }\n\n            if (searchWidth < 40) {\n                searchWidth = maxWidth - sideBorderPadding;\n            }\n            this.search.width(searchWidth);\n        },\n\n        // multi\n        getVal: function () {\n            var val;\n            if (this.select) {\n                val = this.select.val();\n                return val === null ? [] : val;\n            } else {\n                val = this.opts.element.val();\n                return splitVal(val, this.opts.separator);\n            }\n        },\n\n        // multi\n        setVal: function (val) {\n            var unique;\n            if (this.select) {\n                this.select.val(val);\n            } else {\n                unique = [];\n                // filter out duplicates\n                $(val).each(function () {\n                    if (indexOf(this, unique) < 0) unique.push(this);\n                });\n                this.opts.element.val(unique.length === 0 ? "" : unique.join(this.opts.separator));\n            }\n        },\n\n        // multi\n        val: function () {\n            var val, data = [], self=this;\n\n            if (arguments.length === 0) {\n                return this.getVal();\n            }\n\n            val = arguments[0];\n\n            if (!val) {\n                this.opts.element.val("");\n                this.updateSelection([]);\n                this.clearSearch();\n                return;\n            }\n\n            // val is a list of ids\n            this.setVal(val);\n\n            if (this.select) {\n                this.select.find(":selected").each(function () {\n                    data.push({id: $(this).attr("value"), text: $(this).text()});\n                });\n                this.updateSelection(data);\n            } else {\n                if (this.opts.initSelection === undefined) {\n                    throw new Error("val() cannot be called if initSelection() is not defined")\n                }\n\n                this.opts.initSelection(this.opts.element, function(data){\n                    var ids=$(data).map(self.id);\n                    self.setVal(ids);\n                    self.updateSelection(data);\n                    self.clearSearch();\n                });\n            }\n            this.clearSearch();\n        },\n\n        // multi\n        onSortStart: function() {\n            if (this.select) {\n                throw new Error("Sorting of elements is not supported when attached to <select>. Attach to <input type=\'hidden\'/> instead.");\n            }\n\n            // collapse search field into 0 width so its container can be collapsed as well\n            this.search.width(0);\n            // hide the container\n            this.searchContainer.hide();\n        },\n\n        // multi\n        onSortEnd:function() {\n\n            var val=[], self=this;\n\n            // show search and move it to the end of the list\n            this.searchContainer.show();\n            // make sure the search container is the last item in the list\n            this.searchContainer.appendTo(this.searchContainer.parent());\n            // since we collapsed the width in dragStarted, we resize it here\n            this.resizeSearch();\n\n            // update selection\n\n            this.selection.find(".select2-search-choice").each(function() {\n                val.push(self.opts.id($(this).data("select2-data")));\n            });\n            this.setVal(val);\n            this.triggerChange();\n        },\n\n        // multi\n        data: function(values) {\n            var self=this, ids;\n            if (arguments.length === 0) {\n                 return this.selection\n                     .find(".select2-search-choice")\n                     .map(function() { return $(this).data("select2-data"); })\n                     .get();\n            } else {\n                if (!values) { values = []; }\n                ids = $.map(values, function(e) { return self.opts.id(e)});\n                this.setVal(ids);\n                this.updateSelection(values);\n                this.clearSearch();\n            }\n        }\n    });\n\n    $.fn.select2 = function () {\n\n        var args = Array.prototype.slice.call(arguments, 0),\n            opts,\n            select2,\n            value, multiple, allowedMethods = ["val", "destroy", "opened", "open", "close", "focus", "isFocused", "container", "onSortStart", "onSortEnd", "enable", "disable", "positionDropdown", "data"];\n\n        this.each(function () {\n            if (args.length === 0 || typeof(args[0]) === "object") {\n                opts = args.length === 0 ? {} : $.extend({}, args[0]);\n                opts.element = $(this);\n\n                if (opts.element.get(0).tagName.toLowerCase() === "select") {\n                    multiple = opts.element.attr("multiple");\n                } else {\n                    multiple = opts.multiple || false;\n                    if ("tags" in opts) {opts.multiple = multiple = true;}\n                }\n\n                select2 = multiple ? new MultiSelect2() : new SingleSelect2();\n                select2.init(opts);\n            } else if (typeof(args[0]) === "string") {\n\n                if (indexOf(args[0], allowedMethods) < 0) {\n                    throw "Unknown method: " + args[0];\n                }\n\n                value = undefined;\n                select2 = $(this).data("select2");\n                if (select2 === undefined) return;\n                if (args[0] === "container") {\n                    value=select2.container;\n                } else {\n                    value = select2[args[0]].apply(select2, args.slice(1));\n                }\n                if (value !== undefined) {return false;}\n            } else {\n                throw "Invalid arguments to select2 plugin: " + args;\n            }\n        });\n        return (value === undefined) ? this : value;\n    };\n\n    // plugin defaults, accessible to users\n    $.fn.select2.defaults = {\n        width: "copy",\n        closeOnSelect: true,\n        openOnEnter: true,\n        containerCss: {},\n        dropdownCss: {},\n        containerCssClass: "",\n        dropdownCssClass: "",\n        formatResult: function(result, container, query) {\n            var markup=[];\n            markMatch(result.text, query.term, markup);\n            return markup.join("");\n        },\n        formatSelection: function (data, container) {\n            return data ? data.text : undefined;\n        },\n        formatResultCssClass: function(data) {return undefined;},\n        formatNoMatches: function () { return "No matches found"; },\n        formatInputTooShort: function (input, min) { return "Please enter " + (min - input.length) + " more characters"; },\n        formatSelectionTooBig: function (limit) { return "You can only select " + limit + " item" + (limit == 1 ? "" : "s"); },\n        formatLoadMore: function (pageNumber) { return "Loading more results..."; },\n        formatSearching: function () { return "Searching..."; },\n        minimumResultsForSearch: 0,\n        minimumInputLength: 0,\n        maximumSelectionSize: 0,\n        id: function (e) { return e.id; },\n        matcher: function(term, text) {\n            return text.toUpperCase().indexOf(term.toUpperCase()) >= 0;\n        },\n        separator: ",",\n        tokenSeparators: [],\n        tokenizer: defaultTokenizer,\n        escapeMarkup: function (markup) {\n            if (markup && typeof(markup) === "string") {\n                return markup.replace(/&/g, "&amp;");\n            }\n            return markup;\n        },\n        blurOnChange: false\n    };\n\n    // exports\n    window.Select2 = {\n        query: {\n            ajax: ajax,\n            local: local,\n            tags: tags\n        }, util: {\n            debounce: debounce,\n            markMatch: markMatch\n        }, "class": {\n            "abstract": AbstractSelect2,\n            "single": SingleSelect2,\n            "multi": MultiSelect2\n        }\n    };\n\n}(jQuery));\n';
},1233:function(e,n,t){t(1229)(t(1234))},1234:function(e,n){e.exports="/*\n * SonarQube\n * Copyright (C) 2009-2016 SonarSource SA\n * mailto:contact AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n//     keymaster.js\n//     version: 1.6.2\n//     (c) 2011-2013 Thomas Fuchs\n//     keymaster.js may be freely distributed under the MIT license.\n\n;(function(global){\n  var k,\n    _handlers = {},\n    _mods = { 16: false, 18: false, 17: false, 91: false },\n    _scope = 'all',\n    // modifier keys\n    _MODIFIERS = {\n      '⇧': 16, shift: 16,\n      '⌥': 18, alt: 18, option: 18,\n      '⌃': 17, ctrl: 17, control: 17,\n      '⌘': 91, command: 91\n    },\n    // special keys\n    _MAP = {\n      backspace: 8, tab: 9, clear: 12,\n      enter: 13, 'return': 13,\n      esc: 27, escape: 27, space: 32,\n      left: 37, up: 38,\n      right: 39, down: 40,\n      del: 46, 'delete': 46,\n      home: 36, end: 35,\n      pageup: 33, pagedown: 34,\n      ',': 188, '.': 190, '/': 191,\n      '`': 192, '-': 189, '=': 187,\n      ';': 186, '\\'': 222,\n      '[': 219, ']': 221, '\\\\': 220\n    },\n    code = function(x){\n      return _MAP[x] || x.toUpperCase().charCodeAt(0);\n    },\n    _downKeys = [];\n\n  for(k=1;k<20;k++) _MAP['f'+k] = 111+k;\n\n  // IE doesn't support Array#indexOf, so have a simple replacement\n  function index(array, item){\n    var i = array.length;\n    while(i--) if(array[i]===item) return i;\n    return -1;\n  }\n\n  // for comparing mods before unassignment\n  function compareArray(a1, a2) {\n    if (a1.length != a2.length) return false;\n    for (var i = 0; i < a1.length; i++) {\n        if (a1[i] !== a2[i]) return false;\n    }\n    return true;\n  }\n\n  var modifierMap = {\n      16:'shiftKey',\n      18:'altKey',\n      17:'ctrlKey',\n      91:'metaKey'\n  };\n  function updateModifierKey(event) {\n      for(k in _mods) _mods[k] = event[modifierMap[k]];\n  };\n\n  // handle keydown event\n  function dispatch(event) {\n    var key, handler, k, i, modifiersMatch, scope;\n    key = event.keyCode;\n\n    if (index(_downKeys, key) == -1) {\n        _downKeys.push(key);\n    }\n\n    // if a modifier key, set the key.<modifierkeyname> property to true and return\n    if(key == 93 || key == 224) key = 91; // right command on webkit, command on Gecko\n    if(key in _mods) {\n      _mods[key] = true;\n      // 'assignKey' from inside this closure is exported to window.key\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = true;\n      return;\n    }\n    updateModifierKey(event);\n\n    // see if we need to ignore the keypress (filter() can can be overridden)\n    // by default ignore key presses if a select, textarea, or input is focused\n    if(!assignKey.filter.call(this, event)) return;\n\n    // abort if no potentially matching shortcuts found\n    if (!(key in _handlers)) return;\n\n    scope = getScope();\n\n    // for each potential shortcut\n    for (i = 0; i < _handlers[key].length; i++) {\n      handler = _handlers[key][i];\n\n      // see if it's in the current scope\n      if(handler.scope == scope || handler.scope == 'all'){\n        // check if modifiers match if any\n        modifiersMatch = handler.mods.length > 0;\n        for(k in _mods)\n          if((!_mods[k] && index(handler.mods, +k) > -1) ||\n            (_mods[k] && index(handler.mods, +k) == -1)) modifiersMatch = false;\n        // call the handler and stop the event if neccessary\n        if((handler.mods.length == 0 && !_mods[16] && !_mods[18] && !_mods[17] && !_mods[91]) || modifiersMatch){\n          if(handler.method(event, handler)===false){\n            if(event.preventDefault) event.preventDefault();\n              else event.returnValue = false;\n            if(event.stopPropagation) event.stopPropagation();\n            if(event.cancelBubble) event.cancelBubble = true;\n          }\n        }\n      }\n    }\n  };\n\n  // unset modifier keys on keyup\n  function clearModifier(event){\n    var key = event.keyCode, k,\n        i = index(_downKeys, key);\n\n    // remove key from _downKeys\n    if (i >= 0) {\n        _downKeys.splice(i, 1);\n    }\n\n    if(key == 93 || key == 224) key = 91;\n    if(key in _mods) {\n      _mods[key] = false;\n      for(k in _MODIFIERS) if(_MODIFIERS[k] == key) assignKey[k] = false;\n    }\n  };\n\n  function resetModifiers() {\n    for(k in _mods) _mods[k] = false;\n    for(k in _MODIFIERS) assignKey[k] = false;\n  };\n\n  // parse and assign shortcut\n  function assignKey(key, scope, method){\n    var keys, mods;\n    keys = getKeys(key);\n    if (method === undefined) {\n      method = scope;\n      scope = 'all';\n    }\n\n    // for each shortcut\n    for (var i = 0; i < keys.length; i++) {\n      // set modifier keys if any\n      mods = [];\n      key = keys[i].split('+');\n      if (key.length > 1){\n        mods = getMods(key);\n        key = [key[key.length-1]];\n      }\n      // convert to keycode and...\n      key = key[0]\n      key = code(key);\n      // ...store handler\n      if (!(key in _handlers)) _handlers[key] = [];\n      _handlers[key].push({ shortcut: keys[i], scope: scope, method: method, key: keys[i], mods: mods });\n    }\n  };\n\n  // unbind all handlers for given key in current scope\n  function unbindKey(key, scope) {\n    var multipleKeys, keys,\n      mods = [],\n      i, j, obj;\n\n    multipleKeys = getKeys(key);\n\n    for (j = 0; j < multipleKeys.length; j++) {\n      keys = multipleKeys[j].split('+');\n\n      if (keys.length > 1) {\n        mods = getMods(keys);\n        key = keys[keys.length - 1];\n      }\n\n      key = code(key);\n\n      if (scope === undefined) {\n        scope = getScope();\n      }\n      if (!_handlers[key]) {\n        return;\n      }\n      for (i = 0; i < _handlers[key].length; i++) {\n        obj = _handlers[key][i];\n        // only clear handlers if correct scope and mods match\n        if (obj.scope === scope && compareArray(obj.mods, mods)) {\n          _handlers[key][i] = {};\n        }\n      }\n    }\n  };\n\n  // Returns true if the key with code 'keyCode' is currently down\n  // Converts strings into key codes.\n  function isPressed(keyCode) {\n      if (typeof(keyCode)=='string') {\n        keyCode = code(keyCode);\n      }\n      return index(_downKeys, keyCode) != -1;\n  }\n\n  function getPressedKeyCodes() {\n      return _downKeys.slice(0);\n  }\n\n  function filter(event){\n    var tagName = (event.target || event.srcElement).tagName;\n    // ignore keypressed in any elements that support keyboard data input\n    return !(tagName == 'INPUT' || tagName == 'SELECT' || tagName == 'TEXTAREA');\n  }\n\n  // initialize key.<modifier> to false\n  for(k in _MODIFIERS) assignKey[k] = false;\n\n  // set current scope (default 'all')\n  function setScope(scope){ _scope = scope || 'all' };\n  function getScope(){ return _scope || 'all' };\n\n  // delete all handlers for a given scope\n  function deleteScope(scope){\n    var key, handlers, i;\n\n    for (key in _handlers) {\n      handlers = _handlers[key];\n      for (i = 0; i < handlers.length; ) {\n        if (handlers[i].scope === scope) handlers.splice(i, 1);\n        else i++;\n      }\n    }\n  };\n\n  // abstract key logic for assign and unassign\n  function getKeys(key) {\n    var keys;\n    key = key.replace(/\\s/g, '');\n    keys = key.split(',');\n    if ((keys[keys.length - 1]) == '') {\n      keys[keys.length - 2] += ',';\n    }\n    return keys;\n  }\n\n  // abstract mods logic for assign and unassign\n  function getMods(key) {\n    var mods = key.slice(0, key.length - 1);\n    for (var mi = 0; mi < mods.length; mi++)\n    mods[mi] = _MODIFIERS[mods[mi]];\n    return mods;\n  }\n\n  // cross-browser events\n  function addEvent(object, event, method) {\n    if (object.addEventListener)\n      object.addEventListener(event, method, false);\n    else if(object.attachEvent)\n      object.attachEvent('on'+event, function(){ method(window.event) });\n  };\n\n  // set the handlers globally on document\n  addEvent(document, 'keydown', function(event) { dispatch(event) }); // Passing _scope to a callback to ensure it remains the same by execution. Fixes #48\n  addEvent(document, 'keyup', clearModifier);\n\n  // reset modifiers to false whenever the window is (re)focused.\n  addEvent(window, 'focus', resetModifiers);\n\n  // store previously defined key\n  var previousKey = global.key;\n\n  // restore previously defined key and return reference to our key object\n  function noConflict() {\n    var k = global.key;\n    global.key = previousKey;\n    return k;\n  }\n\n  // set window.key and window.key.set/get/deleteScope, and the default filter\n  global.key = assignKey;\n  global.key.setScope = setScope;\n  global.key.getScope = getScope;\n  global.key.deleteScope = deleteScope;\n  global.key.filter = filter;\n  global.key.isPressed = isPressed;\n  global.key.getPressedKeyCodes = getPressedKeyCodes;\n  global.key.noConflict = noConflict;\n  global.key.unbind = unbindKey;\n\n  if(typeof module !== 'undefined') module.exports = key;\n\n})(this);\n"},1235:function(e,n,t){t(1229)(t(1236))},1236:function(e,n){e.exports="/*\n * SonarQube\n * Copyright (C) 2009-2016 SonarSource SA\n * mailto:contact AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       =\n    this.options    =\n    this.enabled    =\n    this.timeout    =\n    this.hoverState =\n    this.$element   = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.1'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $(this.options.viewport.selector || this.options.viewport)\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (self && self.$tip && self.$tip.is(':visible')) {\n      self.hoverState = 'in'\n      return\n    }\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var $container   = this.options.container ? $(this.options.container) : this.$element.parent()\n        var containerDim = this.getPosition($container)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > containerDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < containerDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > containerDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < containerDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  = offset.top  + marginTop\n    offset.left = offset.left + marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isHorizontal) {\n    this.arrow()\n      .css(isHorizontal ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isHorizontal ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = this.tip()\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && this.$tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof ($e.attr('data-original-title')) != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2  } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width   }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.width) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    return (this.$tip = this.$tip || $(this.options.template))\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this    = $(this)\n      var data     = $this.data('bs.tooltip')\n      var options  = typeof option == 'object' && option\n      var selector = options && options.selector\n\n      if (!data && option == 'destroy') return\n      if (selector) {\n        if (!data) $this.data('bs.tooltip', (data = {}))\n        if (!data[selector]) data[selector] = new Tooltip(this, options)\n      } else {\n        if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      }\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n"},1237:function(e,n,t){t(1229)(t(1238))},1238:function(e,n){e.exports="/*\n * SonarQube\n * Copyright (C) 2009-2016 SonarSource SA\n * mailto:contact AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.1'\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n          .trigger('focus')\n          .attr('aria-expanded', 'true')\n\n      $parent\n          .toggleClass('open')\n          .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.divider):visible a'\n    var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--                        // up\n    if (e.which == 40 && index < $items.length - 1) index++                        // down\n    if (!~index)                                      index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n      .on('click.bs.dropdown.data-api', clearMenus)\n      .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n      .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n      .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n      .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)\n      .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown)\n\n}(jQuery);\n"},1239:function(e,n,t){t(1229)(t(1240))},1240:function(e,n){e.exports="/*\n * SonarQube\n * Copyright (C) 2009-2016 SonarSource SA\n * mailto:contact AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/* https://github.com/ivaynberg/select2/issues/1246 */\n\n(function($) {\n\n  $.ui.dialog.prototype._allowInteraction = function(e) {\n    return !!$(e.target).closest('.ui-dialog, .ui-datepicker, .select2-drop').length;\n  };\n\n})(jQuery);\n";
},1241:function(e,n,t){t(1229)(t(1242))},1242:function(e,n){e.exports="/*\n * SonarQube\n * Copyright (C) 2009-2016 SonarSource SA\n * mailto:contact AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n(function ($) {\n\n  function transformPattern (pattern) {\n    return pattern.replace(/\\{0\\}/g, '(\\\\d+)');\n  }\n\n  function convertWorkDuration (value) {\n    var days, daysPattern, hours, hoursPattern, minutes, minutesPattern;\n    if (value === '0') {\n      return 0;\n    }\n    daysPattern = transformPattern(t('work_duration.x_days'));\n    hoursPattern = transformPattern(t('work_duration.x_hours'));\n    minutesPattern = transformPattern(t('work_duration.x_minutes'));\n    days = value.match(daysPattern);\n    hours = value.match(hoursPattern);\n    minutes = value.match(minutesPattern);\n    days = days ? +days[1] : 0;\n    hours = hours ? +hours[1] : 0;\n    minutes = minutes ? +minutes[1] : 0;\n    if (!value) {\n      return value;\n    } else {\n      return (days * window.SS.hoursInDay + hours) * 60 + minutes;\n    }\n  }\n\n  function restoreWorkDuration (value) {\n    var days, hours, minutes, result;\n    if (value === '0' || value === 0) {\n      return '0';\n    }\n    if (!/^\\d+$/.test(value)) {\n      return value;\n    }\n    days = Math.floor(value / (window.SS.hoursInDay * 60));\n    hours = Math.floor((value - days * window.SS.hoursInDay * 60) / 60);\n    minutes = value % 60;\n    result = [];\n    if (days > 0) {\n      result.push(t('work_duration.x_days').replace('{0}', days));\n    }\n    if (hours > 0) {\n      result.push(t('work_duration.x_hours').replace('{0}', hours));\n    }\n    if (minutes > 0) {\n      result.push(t('work_duration.x_minutes').replace('{0}', minutes));\n    }\n    return result.join(' ');\n  }\n\n  function convertRating (value) {\n    if (/^[ABCDE]$/.test(value)) {\n      return value.charCodeAt(0) - 'A'.charCodeAt(0) + 1;\n    } else {\n      return value;\n    }\n  }\n\n  function convertValue (value, input) {\n    var type;\n    type = input.data('type');\n    if (type == null) {\n      return value;\n    }\n    switch (type) {\n      case 'WORK_DUR':\n        return convertWorkDuration(value);\n      case 'RATING':\n        return convertRating(value);\n      default:\n        return value;\n    }\n  }\n\n  function restoreRating (value) {\n    if (!/^[12345]+$/.test(value)) {\n      return value;\n    }\n    return String.fromCharCode(value - 1 + 'A'.charCodeAt(0));\n  }\n\n  function restoreValue (value, input) {\n    var type;\n    type = input.data('type');\n    if (type == null) {\n      return value;\n    }\n    switch (type) {\n      case 'WORK_DUR':\n        return restoreWorkDuration(value);\n      case 'RATING':\n        return restoreRating(value);\n      default:\n        return value;\n    }\n  }\n\n  var originalVal = $.fn.val;\n\n  $.fn.val = function (value) {\n    if (arguments.length) {\n      return originalVal.call(this, restoreValue(value, this));\n    } else {\n      return convertValue(originalVal.call(this), this);\n    }\n  };\n\n  $.fn.originalVal = originalVal;\n\n})(window.jQuery);\n"},1243:function(e,n,t){t(1229)(t(1244))},1244:function(e,n){e.exports="/*\n * SonarQube\n * Copyright (C) 2009-2016 SonarSource SA\n * mailto:contact AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n(function ($) {\n\n  $.fn.isolatedScroll = function () {\n      this.on('wheel', function (e) {\n        var delta = -e.originalEvent.deltaY;\n        var bottomOverflow = this.scrollTop + $(this).outerHeight() - this.scrollHeight >= 0;\n        var topOverflow = this.scrollTop <= 0;\n        if ((delta < 0 && bottomOverflow) || (delta > 0 && topOverflow)) {\n          e.preventDefault();\n        }\n      });\n  };\n\n})(window.jQuery);\n"},1245:function(e,n,t){t(1229)(t(1246))},1246:function(e,n){e.exports="/*\n * SonarQube\n * Copyright (C) 2009-2016 SonarSource SA\n * mailto:contact AT sonarsource DOT com\n *\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 3 of the License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program; if not, write to the Free Software Foundation,\n * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n */\n/*\n * Global Messages\n */\n\n(function () {\n  /**\n   * Show a global message\n   * @param {string} id\n   * @param {string} message\n   */\n  window.showMessage = function (id, message) {\n    jQuery('#' + id + 'msg').html(message);\n    jQuery('#' + id).removeClass('hidden');\n    jQuery('#messages-panel').removeClass('hidden');\n  };\n\n  /**\n   * Hide a global message\n   * @param {string} id\n   * @returns {boolean} always false\n   */\n  window.hideMessage = function (id) {\n    jQuery('#' + id).addClass('hidden');\n    var messagePanel = jQuery('#messages-panel'),\n        isEmpty = messagePanel.children('*:not(.hidden)').length === 0;\n    messagePanel.toggleClass('hidden', isEmpty);\n    return false;\n  };\n\n  /**\n   * Show a global error message\n   * @param {string} message\n   */\n  window.error = function (message) {\n    window.showMessage('error', message);\n  };\n\n  /**\n   * Show a global warning message\n   * @param {string} message\n   */\n  window.warning = function (message) {\n    window.showMessage('warning', message);\n  };\n\n  /**\n   * Show a global info message\n   * @param {string} message\n   */\n  window.info = function (message) {\n    window.showMessage('info', message);\n  };\n\n  /**\n   * Hide a global error message\n   * @returns {boolean} always false\n   */\n  window.hideError = function () {\n    return window.hideMessage('error');\n  };\n\n  /**\n   * Hide a global warning message\n   * @returns {boolean} always false\n   */\n  window.hideWarning = function () {\n    return window.hideMessage('warning');\n  };\n\n  /**\n   * Hide a global info message\n   * @returns {boolean} always false\n   */\n  window.hideInfo = function () {\n    return window.hideMessage('info');\n  };\n})();\n\n\n\nfunction toggleFav (resourceId, elt) {\n  jQuery.ajax({\n    type: 'POST', dataType: 'json', url: baseUrl + '/favourites/toggle/' + resourceId,\n    success: function (data) {\n      var star = jQuery(elt);\n      star.removeClass('icon-favorite icon-not-favorite');\n      star.addClass(data.css);\n      star.attr('title', data.title);\n    }\n  });\n}\n\nfunction dashboardParameters (urlHasSomething) {\n  var queryString = window.location.search;\n  var parameters = [];\n\n  var matchDashboard = queryString.match(/did=\\d+/);\n  if (matchDashboard && jQuery('#is-project-dashboard').length === 1) {\n    parameters.push(matchDashboard[0]);\n  }\n\n  var matchPeriod = queryString.match(/period=\\d+/);\n  if (matchPeriod) {\n    // If we have a match for period, check that it is not project-specific\n    var period = parseInt(/period=(\\d+)/.exec(queryString)[1], 10);\n    if (period <= 3) {\n      parameters.push(matchPeriod[0]);\n    }\n  }\n\n  var query = parameters.join('&');\n  if (query !== '') {\n    query = (urlHasSomething ? '&' : '?') + query;\n  }\n  return query;\n}\n\nfunction openModalWindow (url, options) {\n  var width = (options && options.width) || 540;\n  var $dialog = jQuery('#modal');\n  if (!$dialog.length) {\n    $dialog = jQuery('<div id=\"modal\" class=\"ui-widget-overlay ui-front\"></div>').appendTo('body');\n  }\n  jQuery.get(url, function (html) {\n    $dialog.removeClass('ui-widget-overlay');\n    $dialog.html(html);\n    $dialog\n        .dialog({\n          dialogClass: 'no-close',\n          width: width,\n          draggable: false,\n          autoOpen: false,\n          modal: true,\n          minHeight: 50,\n          resizable: false,\n          title: null,\n          close: function () {\n            jQuery('#modal').remove();\n          }\n        });\n    $dialog.dialog('open');\n  }).always(function () {\n    $dialog.removeClass('ui-widget-overlay');\n  });\n  return false;\n}\n\n(function (jQuery) {\n  jQuery.fn.extend({\n    openModal: function () {\n      return this.each(function () {\n        var obj = jQuery(this);\n        var url = obj.attr('modal-url') || obj.attr('href');\n        return openModalWindow(url, { 'width': obj.attr('modal-width') });\n      });\n    },\n    modal: function () {\n      return this.each(function () {\n        var obj = jQuery(this);\n        obj.unbind('click');\n        var $link = obj.bind('click', function () {\n          $link.openModal();\n          return false;\n        });\n      });\n    },\n    modalForm: function (ajax_options) {\n      return this.each(function () {\n        var obj = jQuery(this);\n        obj.submit(function () {\n          jQuery('input[type=submit]', this).attr('disabled', 'disabled');\n          jQuery.ajax(jQuery.extend({\n            type: 'POST',\n            url: obj.attr('action'),\n            data: obj.serialize(),\n            success: function () {\n              window.location.reload();\n            },\n            error: function (xhr) {\n              // If the modal window has defined a modal-error element, then returned text must be displayed in it\n              var errorElt = obj.find('.modal-error');\n              if (errorElt.length) {\n                // Hide all loading images\n                jQuery('.loading-image').addClass('hidden');\n                // Re activate submit button\n                jQuery('input[type=submit]', obj).removeAttr('disabled');\n                errorElt.show();\n                errorElt.html(jQuery('<div/>').html(xhr.responseText).text());\n              } else {\n                // otherwise replace modal window by the returned text\n                jQuery('#modal').html(xhr.responseText);\n              }\n            }\n          }, ajax_options));\n          return false;\n        });\n      });\n    }\n  });\n})(jQuery);\n\nfunction closeModalWindow () {\n  jQuery('#modal').dialog('close');\n  return false;\n}\n\n\n\n/*\n * Users\n */\n\n(function() {\n\n  /**\n   * Convert the result of api/users/search to select2 format\n   */\n  window.usersToSelect2 = function (response) {\n    return {\n      more: false,\n      results: _.map(response.users, function(user) {\n        return {\n          id: user.login,\n          text: user.name + ' (' + user.login + ')'\n        };\n      })\n    };\n  };\n\n})();\n\n\n\n/*\n * Misc\n */\n\n(function () {\n\n  /**\n   * Comparator for _.sortBy()-like functions\n   *\n   * Fit for natural severities order\n   * @param {string} severity\n   * @returns {number}\n   */\n  window.severityComparator = function (severity) {\n    var SEVERITIES_ORDER = ['BLOCKER', 'CRITICAL', 'MAJOR', 'MINOR', 'INFO'];\n    return SEVERITIES_ORDER.indexOf(severity);\n  };\n\n\n  /**\n   * Comparator for _.sortBy()-like functions\n   *\n   * Fit for facet-like display:\n   * BLOCKER   MINOR\n   * CRITICAL  INFO\n   * MAJOR\n   * @param {string} severity\n   * @returns {number}\n   */\n  window.severityColumnsComparator = function (severity) {\n    var SEVERITIES_ORDER = ['BLOCKER', 'MINOR', 'CRITICAL', 'INFO', 'MAJOR'];\n    return SEVERITIES_ORDER.indexOf(severity);\n  };\n\n\n  /**\n   * Return a hash of GET parameters\n   * @returns {object}\n   */\n  window.getQueryParams = function () {\n    var qs = window.location.search.split('+').join(' '),\n        params = {},\n        re = /[?&]?([^=]+)=([^&]*)/g,\n        tokens = re.exec(qs);\n    while (tokens) {\n      params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n      tokens = re.exec(qs);\n    }\n    return params;\n  };\n\n})();\n\n(function () {\n  jQuery(function () {\n\n    // Process login link in order to add the anchor\n    jQuery('#login-link').on('click', function (e) {\n      e.preventDefault();\n      var href = jQuery(this).prop('href'),\n          hash = window.location.hash;\n      if (hash.length > 0) {\n        href += decodeURIComponent(hash);\n      }\n      window.location = href;\n    });\n  });\n})();\n"}});